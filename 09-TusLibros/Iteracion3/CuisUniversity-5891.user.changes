

----QUIT----(13 August 2023 19:14:09) CuisUniversity-5981.image priorSource: 5713367!

----STARTUP---- (13 August 2023 19:14:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5981.image!


----QUIT----(13 August 2023 19:14:10) CuisUniversity-5981.image priorSource: 10197065!

----STARTUP---- (6 November 2023 18:32:19) as /home/clinux01/Escritorio/linux64/CuisUniversity-5981.image!


----End fileIn of /home/clinux01/Descargas/TusLibros-33.st----!

TestCase subclass: #xTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

TestCase subclass: #XTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #XTest category: 'TusLibros' stamp: 'totot 11/6/2023 20:16:20'!
TestCase subclass: #XTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRenamed: #XTest as: #StoreSystemTest stamp: 'totot 11/6/2023 20:16:35'!
Smalltalk renameClassNamed: #XTest as: #StoreSystemTest!
!StoreSystemTest methodsFor: 'no messages' stamp: 'totot 11/6/2023 20:16:41'!
test01
	! !
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:17:28'!
test01CreateCartWithUnregisteredUser
	! !

!methodRemoval: StoreSystemTest #test01 stamp: 'totot 11/6/2023 20:17:28'!
test01
	!
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:17:30' prior: 50650900!
test01CreateCartWithUnregisteredUser
	! !

!classDefinition: #StoreSystem category: 'TusLibros' stamp: 'totot 11/6/2023 20:17:59'!
Object subclass: #StoreSystem
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:17:51' prior: 50650908!
test01CreateCartWithUnregisteredUser
	
	| storeSystem |
	storeSystem:= StoreSystem new.! !
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:19:01' prior: 50650920!
test01CreateCartWithUnregisteredUser
	
	| storeSystem cartId |
	storeSystem:= StoreSystem new.
	
	cartId := storeSystem createCartForUserID:'Pedro' withPassword:'pass'.! !
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:19:37' prior: 50650927!
test01CreateCartWithUnregisteredUser
	
	| storeSystem |
	storeSystem:= StoreSystem new.
	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier creditCardHasNoCreditErrorMessage.
			self assert:  True ]! !
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:20:21' prior: 50650936!
test01CreateCartWithUnregisteredUser
	
	| storeSystem |
	storeSystem:= StoreSystem new.
	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Invalid username'.
			"hay que testear con el listCart" ]! !
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:20:58' prior: 50650951!
test01CreateCartWithUnregisteredUser
	
	| storeSystem |
	storeSystem:= StoreSystem new.
	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Invalid username'.]! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:20:59'!
ERROR!
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:21:05'!
createCartForUserID: aRenameMe1 withPassword: aRenameMe2 
	self shouldBeImplemented.! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:21:10' prior: 50650981!
createCartForUserID: anUserId withPassword: aRenameMe2 
	self shouldBeImplemented.! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:21:14' prior: 50650987!
createCartForUserID: anUserId withPassword: aPassword 
	self shouldBeImplemented.! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:21:29' prior: 50650993!
createCartForUserID: anUserId withPassword: aPassword 
	self error: 'Invalid username'! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:21:32'!
PASSED!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:21:32'!
PASSED!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:21:49'!
test02CreateCartWithWrongPassword
	
	| storeSystem |
	storeSystem:= StoreSystem new.
	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Invalid username'.]! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:21:56' prior: 50651011!
test02CreateCartWithWrongPassword
	
	| storeSystem |
	storeSystem:= StoreSystem new.
	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Wrong password'.]! !

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:21:57'!
FAILURE!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:22:44' prior: 50651024!
test02CreateCartWithWrongPassword
	
	| storeSystem |
	storeSystem:= StoreSystem authenticatingUsersWith: self.
	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Wrong password'.]! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:22:52' prior: 50650965!
test01CreateCartWithUnregisteredUser
	
	| storeSystem |
	storeSystem:= storeSystem createCartForUserID:'Pedro' withPassword:'pass'.
	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Invalid username'.]! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:23:16' prior: 50651053!
test01CreateCartWithUnregisteredUser
	
	| storeSystem |
	storeSystem:=  StoreSystem authenticatingUsersWith: self.
	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Invalid username'.]! !

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:23:32'!
ERROR!
!StoreSystem class methodsFor: 'instance creation' stamp: 'totot 11/6/2023 20:23:38'!
authenticatingUsersWith: aStoreSystemTest 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeAuthenticatingUsersWith: aStoreSystemTest ! !
!StoreSystem class methodsFor: 'instance creation' stamp: 'totot 11/6/2023 20:23:42' prior: 50651084!
authenticatingUsersWith: aStoreSystemTest 
	
	^self new initializeAuthenticatingUsersWith: aStoreSystemTest ! !
!StoreSystem class methodsFor: 'instance creation' stamp: 'totot 11/6/2023 20:23:51' prior: 50651094!
authenticatingUsersWith: anAuthenticationSystem 
	
	^self new initializeAuthenticatingUsersWith: anAuthenticationSystem ! !

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:23:52'!
ERROR!

!classDefinition: #StoreSystem category: 'TusLibros' stamp: 'totot 11/6/2023 20:24:00'!
Object subclass: #StoreSystem
	instanceVariableNames: 'authenticationSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreSystem methodsFor: 'initialization' stamp: 'totot 11/6/2023 20:24:00'!
initializeAuthenticatingUsersWith: anAuthenticationSystem 
	self shouldBeImplemented.
	authenticationSystem := anAuthenticationSystem.! !
!StoreSystem methodsFor: 'initialization' stamp: 'totot 11/6/2023 20:24:02' prior: 50651118!
initializeAuthenticatingUsersWith: anAuthenticationSystem 
	
	authenticationSystem := anAuthenticationSystem.! !

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:24:03'!
FAILURE!
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:24:39' prior: 50650999!
createCartForUserID: anUserId withPassword: aPassword 
	authenticationSystem authenticateUser: anUserId withPassword:aPassword.! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:24:42'!
ERROR!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:24:42'!
ERROR!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:24:50'!
ERROR!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:24:50'!
ERROR!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:24:51'!
ERROR!
!StoreSystemTest methodsFor: 'support' stamp: 'totot 11/6/2023 20:25:04'!
authenticateUser: anUserId withPassword: aPassword 
	self shouldBeImplemented.! !
!StoreSystemTest methodsFor: 'support' stamp: 'totot 11/6/2023 20:25:26' prior: 50651160!
authenticateUser: anUserId withPassword: aPassword 
	self error:'Invalid username'! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:25:27'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:25:27'!
FAILURE!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:25:36'!
PASSED!

!classDefinition: #StoreSystemTest category: 'TusLibros' stamp: 'totot 11/6/2023 20:26:11'!
TestCase subclass: #StoreSystemTest
	instanceVariableNames: 'authenticationProcedure'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreSystemTest methodsFor: 'support' stamp: 'totot 11/6/2023 20:26:10' prior: 50651166!
authenticateUser: anUserId withPassword: aPassword 
	authenticationProcedure value: anUserId value: aPassword.
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:26:39' prior: 50651040!
test02CreateCartWithWrongPassword
	
	| storeSystem |
	authenticationProcedure:= [self error: 'Wrong password'].
	storeSystem:= StoreSystem authenticatingUsersWith: self.
	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Wrong password'.]! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:27:02' prior: 50651067!
test01CreateCartWithUnregisteredUser
	
	| storeSystem |
	authenticationProcedure:=[self error: 'Invalid username'].
	storeSystem:=  StoreSystem authenticatingUsersWith: self.
	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Invalid username'.]! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:27:03'!
FAILURE!
!StoreSystemTest methodsFor: 'support' stamp: 'totot 11/6/2023 20:27:16' prior: 50651190!
authenticateUser: anUserId withPassword: aPassword 
	authenticationProcedure value
	! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:27:17'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:27:17'!
PASSED!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:27:42'!
test03CreateCart
	
	| storeSystem |
	authenticationProcedure:= [].
	storeSystem:= StoreSystem authenticatingUsersWith: self.
	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Wrong password'.]! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:29:06' prior: 50651243!
test03CreateCart
	
	| storeSystem cartId |
	authenticationProcedure:= [].
	storeSystem:= StoreSystem authenticatingUsersWith: self.
	cartId:= storeSystem createCartForUserID:'Pedro' withPassword:'pass'. 
	
	storeSystem listCart: cartId.
	self 
		should: []
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Wrong password'.]! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:29:45' prior: 50651257!
test03CreateCart
	
	| storeSystem cartId lista |
	authenticationProcedure:= [].
	storeSystem:= StoreSystem authenticatingUsersWith: self.
	cartId:= storeSystem createCartForUserID:'Pedro' withPassword:'pass'. 
	
	lista:= storeSystem listCart: cartId.
	self assert: lista isEmpty.! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:29:53' prior: 50651272!
test03CreateCart
	
	| storeSystem cartId cartItems |
	authenticationProcedure:= [].
	storeSystem:= StoreSystem authenticatingUsersWith: self.
	cartId:= storeSystem createCartForUserID:'Pedro' withPassword:'pass'. 
	
	cartItems:= storeSystem listCart: cartId.
	self assert: cartItems isEmpty.! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:29:59' prior: 50651284!
test03CreateCart
	
	| storeSystem cartId cartItems |
	authenticationProcedure:= [].
	storeSystem:= StoreSystem authenticatingUsersWith: self.
	cartId:= storeSystem createCartForUserID:'Pedro' withPassword:'pass'. 
	
	cartItems:= storeSystem listCart: cartId.
	
	self assert: cartItems isEmpty.! !

!testRun: #StoreSystemTest #test03CreateCart stamp: 'totot 11/6/2023 20:30:00'!
ERROR!
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:30:03'!
listCart: cartId 
	self shouldBeImplemented.! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:30:11' prior: 50651311!
listCart: cartId 
	! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:30:21' prior: 50651316!
listCart: cartId 
	^OrderedCollection new.! !

!testRun: #StoreSystemTest #test03CreateCart stamp: 'totot 11/6/2023 20:30:22'!
PASSED!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:30:22'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:30:22'!
PASSED!

!testRun: #StoreSystemTest #test03CreateCart stamp: 'totot 11/6/2023 20:30:22'!
PASSED!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:30:38'!
test03CreateOneCart
	
	| storeSystem cartId cartItems |
	authenticationProcedure:= [].
	storeSystem:= StoreSystem authenticatingUsersWith: self.
	cartId:= storeSystem createCartForUserID:'Pedro' withPassword:'pass'. 
	
	cartItems:= storeSystem listCart: cartId.
	
	self assert: cartItems isEmpty.! !

!methodRemoval: StoreSystemTest #test03CreateCart stamp: 'totot 11/6/2023 20:30:38'!
test03CreateCart
	
	| storeSystem cartId cartItems |
	authenticationProcedure:= [].
	storeSystem:= StoreSystem authenticatingUsersWith: self.
	cartId:= storeSystem createCartForUserID:'Pedro' withPassword:'pass'. 
	
	cartItems:= storeSystem listCart: cartId.
	
	self assert: cartItems isEmpty.!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:30:55'!
test04CreateMoreOneCart
	
	| storeSystem cartId cartItems |
	authenticationProcedure:= [].
	storeSystem:= StoreSystem authenticatingUsersWith: self.
	cartId:= storeSystem createCartForUserID:'Pedro' withPassword:'pass'. 
	
	cartItems:= storeSystem listCart: cartId.
	
	self assert: cartItems isEmpty.! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:32:03' prior: 50651212!
test01CreateCartWithUnregisteredUser
	
	| storeSystem |
	authenticationProcedure:=[self error: 'Invalid username'].

	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Invalid username'.]! !

!classDefinition: #StoreSystemTest category: 'TusLibros' stamp: 'totot 11/6/2023 20:32:19'!
TestCase subclass: #StoreSystemTest
	instanceVariableNames: 'authenticationProcedure storeSystem1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:32:17' prior: 50651360!
test04CreateMoreOneCart
	
	| storeSystem cartId cartItems |
	authenticationProcedure:= [].
	storeSystem1:= StoreSystem authenticatingUsersWith: self.
	cartId:= storeSystem1 createCartForUserID:'Pedro' withPassword:'pass'. 
	
	cartItems:= storeSystem1 listCart: cartId.
	
	self assert: cartItems isEmpty.! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:33:01' prior: 50651336!
test03CreateOneCart
	
	| cartId cartItems |
	authenticationProcedure:= [].
	
	cartId:= storeSystem1 createCartForUserID:'Pedro' withPassword:'pass'. 
	
	cartItems:= storeSystem1 listCart: cartId.
	
	self assert: cartItems isEmpty.! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:33:11' prior: 50651197!
test02CreateCartWithWrongPassword
	
	
	authenticationProcedure:= [self error: 'Wrong password'].
	
	
	self 
		should: [storeSystem1 createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Wrong password'.]! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:33:16' prior: 50651373!
test01CreateCartWithUnregisteredUser
	
	
	authenticationProcedure:=[self error: 'Invalid username'].

	
	self 
		should: [storeSystem1 createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Invalid username'.]! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:33:23' prior: 50651395!
test04CreateMoreOneCart
	
	|  cartId cartItems |
	authenticationProcedure:= [].
	storeSystem1:= StoreSystem authenticatingUsersWith: self.
	cartId:= storeSystem1 createCartForUserID:'Pedro' withPassword:'pass'. 
	
	cartItems:= storeSystem1 listCart: cartId.
	
	self assert: cartItems isEmpty.! !

!classDefinition: #StoreSystemTest category: 'TusLibros' stamp: 'totot 11/6/2023 20:33:26'!
TestCase subclass: #StoreSystemTest
	instanceVariableNames: 'authenticationProcedure storeSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:33:26' prior: 50651445!
test04CreateMoreOneCart
	
	|  cartId cartItems |
	authenticationProcedure:= [].
	storeSystem:= StoreSystem authenticatingUsersWith: self.
	cartId:= storeSystem createCartForUserID:'Pedro' withPassword:'pass'. 
	
	cartItems:= storeSystem listCart: cartId.
	
	self assert: cartItems isEmpty.! !
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:33:26' prior: 50651432!
test01CreateCartWithUnregisteredUser
	
	
	authenticationProcedure:=[self error: 'Invalid username'].

	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Invalid username'.]! !
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:33:26' prior: 50651419!
test02CreateCartWithWrongPassword
	
	
	authenticationProcedure:= [self error: 'Wrong password'].
	
	
	self 
		should: [storeSystem createCartForUserID:'Pedro' withPassword:'pass'. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'Wrong password'.]! !
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:33:26' prior: 50651408!
test03CreateOneCart
	
	| cartId cartItems |
	authenticationProcedure:= [].
	
	cartId:= storeSystem createCartForUserID:'Pedro' withPassword:'pass'. 
	
	cartItems:= storeSystem listCart: cartId.
	
	self assert: cartItems isEmpty.! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:33:39' prior: 50651466!
test04CreateMoreOneCart
	
	|  cartId cartItems |
	authenticationProcedure:= [].
	
	cartId:= storeSystem createCartForUserID:'Pedro' withPassword:'pass'. 
	
	cartItems:= storeSystem listCart: cartId.
	
	self assert: cartItems isEmpty.! !
!StoreSystemTest methodsFor: 'running' stamp: 'totot 11/6/2023 20:33:56' overrides: 16961394!
setUp
	storeSystem:= StoreSystem authenticatingUsersWith: self.! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:33:57'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:33:57'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 20:33:57'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:33:57'!
PASSED!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:34:32' prior: 50651516!
test04CreateMoreOneCart
	
	|  cartId cartItems |
	
	self test03CreateOneCart.
	
	cartId:= storeSystem createCartForUserID:'Juan' withPassword:'pass2'. 
	
	cartItems:= storeSystem listCart: cartId.
	
	self assert: cartItems isEmpty.! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:35:55' prior: 50651545!
test04CreateMoreOneCart
	
	|  cartId cartItems |
	
	self test03CreateOneCart.
	
	cartId:= storeSystem createCartForUserID:'Juan' withPassword:'pass2'. 
	
	cartItems:= storeSystem listCart: cartId.
	
	self assert: cartItems isEmpty.! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:37:18' prior: 50651556!
test04CreateMoreOneCart
	
	|  cartId cartItems |
	
	self test03CreateOneCart.
	
	cartId:= storeSystem createCartForUserID:'Juan' withPassword:'pass2'. 
	
	cartItems:= storeSystem listCart: cartId.
	self assert: cartId equals: self lastAssignedCartId.
	self assert: cartItems isEmpty.! !
!StoreSystemTest methodsFor: 'running' stamp: 'totot 11/6/2023 20:38:08' prior: 50651527 overrides: 16961394!
setUp
	storeSystem:= StoreSystem authenticatingUsersWith: self generatingCartIdUsings: self.
! !
!StoreSystem class methodsFor: 'instance creation' stamp: 'totot 11/6/2023 20:39:21'!
authenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator  
	
	^self new initializeAuthenticatingUsersWith: anAuthenticationSystem ! !

!methodRemoval: StoreSystem class #authenticatingUsersWith: stamp: 'totot 11/6/2023 20:39:21'!
authenticatingUsersWith: anAuthenticationSystem 
	
	^self new initializeAuthenticatingUsersWith: anAuthenticationSystem !
!StoreSystem methodsFor: 'initialization' stamp: 'totot 11/6/2023 20:39:51'!
initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator  
	
	authenticationSystem := anAuthenticationSystem.! !
!StoreSystem class methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:39:51' prior: 50651586!
authenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator  
	
	^self new initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator ! !

!methodRemoval: StoreSystem #initializeAuthenticatingUsersWith: stamp: 'totot 11/6/2023 20:39:51'!
initializeAuthenticatingUsersWith: anAuthenticationSystem 
	
	authenticationSystem := anAuthenticationSystem.!

!classDefinition: #StoreSystem category: 'TusLibros' stamp: 'totot 11/6/2023 20:40:10'!
Object subclass: #StoreSystem
	instanceVariableNames: 'authenticationSystem cartIdGEnerator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreSystem methodsFor: 'initialization' stamp: 'totot 11/6/2023 20:40:08' prior: 50651601!
initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator  
	
	authenticationSystem := anAuthenticationSystem.
	cartIdGEnerator:= anIdGenerator.! !
!StoreSystemTest methodsFor: 'running' stamp: 'totot 11/6/2023 20:40:27' prior: 50651580 overrides: 16961394!
setUp
	storeSystem:= StoreSystem authenticatingUsersWith: self generatingCartIdUsing: self.
! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:40:28'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:40:28'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 20:40:28'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:40:28'!
ERROR!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:40:28'!
ERROR!

!classDefinition: #StoreSystem category: 'TusLibros' stamp: 'totot 11/6/2023 20:41:50'!
Object subclass: #StoreSystem
	instanceVariableNames: 'authenticationSystem cartIdGEnerator catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:41:49' prior: 50651136!
createCartForUserID: anUserId withPassword: aPassword 
	authenticationSystem authenticateUser: anUserId withPassword:aPassword.
	Cart acceptingItemsOf: catalog! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:41:57' prior: 50651673!
createCartForUserID: anUserId withPassword: aPassword 
	| cart |
	authenticationSystem authenticateUser: anUserId withPassword:aPassword.
	cart := Cart acceptingItemsOf: catalog.
	! !

!classDefinition: #StoreSystem category: 'TusLibros' stamp: 'totot 11/6/2023 20:43:01'!
Object subclass: #StoreSystem
	instanceVariableNames: 'authenticationSystem cartIdGEnerator catalog cartsIds'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:43:00' prior: 50651681!
createCartForUserID: anUserId withPassword: aPassword 
	| cart |
	authenticationSystem authenticateUser: anUserId withPassword:aPassword.
	cart := Cart acceptingItemsOf: catalog.
	cartsIds at: cartIdGEnerator nextId put:cart.
	! !
!StoreSystem methodsFor: 'initialization' stamp: 'totot 11/6/2023 20:43:15' prior: 50651633!
initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator  
	
	authenticationSystem := anAuthenticationSystem.
	cartIdGEnerator:= anIdGenerator.
	cartsIds := Dictionary new.! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:43:18'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:43:18'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 20:43:18'!
ERROR!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:43:18'!
ERROR!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 20:43:19'!
ERROR!

!classDefinition: #StoreSystem category: 'TusLibros' stamp: 'totot 11/6/2023 20:43:30'!
Object subclass: #StoreSystem
	instanceVariableNames: 'authenticationSystem cartIdGenerator catalog cartsIds'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreSystem methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:43:30' prior: 50651698!
createCartForUserID: anUserId withPassword: aPassword 
	| cart |
	authenticationSystem authenticateUser: anUserId withPassword:aPassword.
	cart := Cart acceptingItemsOf: catalog.
	cartsIds at: cartIdGenerator nextId put:cart.
	! !
!StoreSystem methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:43:30' prior: 50651709!
initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator  
	
	authenticationSystem := anAuthenticationSystem.
	cartIdGenerator:= anIdGenerator.
	cartsIds := Dictionary new.! !

!classDefinition: #CartIdGenerator category: 'TusLibros' stamp: 'totot 11/6/2023 20:44:10'!
Object subclass: #CartIdGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreSystemTest methodsFor: 'running' stamp: 'totot 11/6/2023 20:44:08' prior: 50651643 overrides: 16961394!
setUp
	storeSystem:= StoreSystem authenticatingUsersWith: self generatingCartIdUsing: CartIdGenerator startingIn:0.
! !
!StoreSystemTest methodsFor: 'running' stamp: 'totot 11/6/2023 20:44:17' prior: 50651772 overrides: 16961394!
setUp
	storeSystem:= StoreSystem authenticatingUsersWith: self generatingCartIdUsing:( CartIdGenerator startingIn:0).
! !
!CartIdGenerator class methodsFor: 'instance creation' stamp: 'totot 11/6/2023 20:44:22'!
startingIn: aRenameMe1 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeStartingIn: aRenameMe1 ! !
!CartIdGenerator class methodsFor: 'instance creation' stamp: 'totot 11/6/2023 20:44:26' prior: 50651787!
startingIn: aRenameMe1 

	^self new initializeStartingIn: aRenameMe1 ! !

!methodRemoval: CartIdGenerator class #startingIn: stamp: 'totot 11/6/2023 20:45:21'!
startingIn: aRenameMe1 

	^self new initializeStartingIn: aRenameMe1 !
!StoreSystemTest methodsFor: 'running' stamp: 'totot 11/6/2023 20:45:32' prior: 50651780 overrides: 16961394!
setUp
	storeSystem:= StoreSystem authenticatingUsersWith: self generatingCartIdUsing:( CartIdGenerator new).
! !

!classDefinition: #CartIdGenerator category: 'TusLibros' stamp: 'totot 11/6/2023 20:45:50'!
Object subclass: #CartIdGenerator
	instanceVariableNames: 'nextId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartIdGenerator methodsFor: 'no messages' stamp: 'totot 11/6/2023 20:45:48' overrides: 16920235!
initialize
	nextId:= 1.! !
!CartIdGenerator methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:45:57'!
nextId
	^1.! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:46:00'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:46:00'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 20:46:00'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:46:00'!
ERROR!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:46:00'!
ERROR!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:46:04'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:46:04'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 20:46:04'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:46:04'!
ERROR!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:46:04'!
ERROR!
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:46:07'!
lastAssignedCartId
	self shouldBeImplemented.! !

!methodRemoval: StoreSystemTest #lastAssignedCartId stamp: 'totot 11/6/2023 20:46:14'!
lastAssignedCartId
	self shouldBeImplemented.!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:46:16'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:46:16'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 20:46:16'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:46:16'!
ERROR!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:46:16'!
ERROR!

!classDefinition: #StoreSystemTest category: 'TusLibros' stamp: 'totot 11/6/2023 20:46:51'!
TestCase subclass: #StoreSystemTest
	instanceVariableNames: 'authenticationProcedure storeSystem cartIdGenerator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreSystemTest methodsFor: 'running' stamp: 'totot 11/6/2023 20:46:50' prior: 50651807 overrides: 16961394!
setUp
	cartIdGenerator:= CartIdGenerator new.
	storeSystem:= StoreSystem authenticatingUsersWith: self generatingCartIdUsing:( cartIdGenerator ).
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:47:03' prior: 50651567!
test04CreateMoreOneCart
	
	|  cartId cartItems |
	
	self test03CreateOneCart.
	
	cartId:= storeSystem createCartForUserID:'Juan' withPassword:'pass2'. 
	
	cartItems:= storeSystem listCart: cartId.
	self assert: cartId equals: cartIdGenerator lastAssignedCartId.
	self assert: cartItems isEmpty.! !

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:47:04'!
ERROR!
!CartIdGenerator methodsFor: 'queris' stamp: 'totot 11/6/2023 20:47:13'!
lastAssignedCartId
	self shouldBeImplemented.! !
!CartIdGenerator methodsFor: 'queris' stamp: 'totot 11/6/2023 20:47:23' prior: 50651917!
lastAssignedCartId
	^nextId -1.! !

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:47:26'!
FAILURE!
!CartIdGenerator methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:47:41' prior: 50651825!
nextId
	nextId:= nextId +1.
	^1.! !
!CartIdGenerator methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:47:51' prior: 50651930!
nextId
	nextId:= nextId +1.
	^1.! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:47:51'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:47:51'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 20:47:51'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:47:51'!
FAILURE!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:47:51'!
FAILURE!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:48:07'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:48:07'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 20:48:07'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:48:07'!
FAILURE!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:48:07'!
FAILURE!
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:49:07' prior: 50651743!
createCartForUserID: anUserId withPassword: aPassword 
	| cart cartId |
	authenticationSystem authenticateUser: anUserId withPassword:aPassword.
	cart := Cart acceptingItemsOf: catalog.
	 cartId:=cartIdGenerator nextId
	cartsIds at: cartId put:cart.
	^cartId.
	! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:49:12' prior: 50651971!
createCartForUserID: anUserId withPassword: aPassword 
	| cart cartId |
	authenticationSystem authenticateUser: anUserId withPassword:aPassword.
	cart := Cart acceptingItemsOf: catalog.
	 cartId:=cartIdGenerator nextId.
	cartsIds at: cartId put:cart.
	^cartId.
	! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:49:16' prior: 50651982!
createCartForUserID: anUserId withPassword: aPassword 
	| cart cartId |
	authenticationSystem authenticateUser: anUserId withPassword:aPassword.
	cart := Cart acceptingItemsOf: catalog.
	cartId:=cartIdGenerator nextId.
	cartsIds at: cartId put:cart.
	^cartId.
	! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 20:49:17' prior: 50651993!
createCartForUserID: anUserId withPassword: aPassword 
	| cart cartId |
	authenticationSystem authenticateUser: anUserId withPassword:aPassword.
	cart := Cart acceptingItemsOf: catalog.
	cartId:=cartIdGenerator nextId.
	cartsIds at: cartId put:cart.
	
	^cartId.
	! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:49:18'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:49:18'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 20:49:18'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:49:18'!
FAILURE!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:49:18'!
FAILURE!
!CartIdGenerator methodsFor: 'queris' stamp: 'totot 11/6/2023 20:49:35' prior: 50651922!
lastAssignedCartId
	^nextId -1;yourself.! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:49:36'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:49:36'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 20:49:36'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:49:36'!
FAILURE!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:49:36'!
FAILURE!
!CartIdGenerator methodsFor: 'queris' stamp: 'totot 11/6/2023 20:49:40' prior: 50652031!
lastAssignedCartId
	^nextId -1.! !
!CartIdGenerator methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:49:50' prior: 50651935!
nextId
	nextId:= nextId +1.
	^nextId.! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:49:51'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:49:51'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 20:49:51'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:49:51'!
FAILURE!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:49:51'!
FAILURE!
!CartIdGenerator methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 20:49:59' prior: 50652056!
nextId
	nextId:= nextId+1.
	^nextId-1.! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 20:50:00'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 20:50:00'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 20:50:00'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 20:50:00'!
PASSED!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:51:20'!
test05CanAddOneBook
	
	|  cartId cartItems |
	
	self test03CreateOneCart.
	
	cartId:= storeSystem createCartForUserID:'Juan' withPassword:'pass2'. 
	
	cartItems:= storeSystem listCart: cartId.
	self assert: cartId equals: cartIdGenerator lastAssignedCartId.
	self assert: cartItems isEmpty.! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:51:38'!
test05CanNotAddNotPublishedBooks
	
	|  cartId cartItems |
	
	self test03CreateOneCart.
	
	cartId:= storeSystem createCartForUserID:'Juan' withPassword:'pass2'. 
	
	cartItems:= storeSystem listCart: cartId.
	self assert: cartId equals: cartIdGenerator lastAssignedCartId.
	self assert: cartItems isEmpty.! !

!methodRemoval: StoreSystemTest #test05CanAddOneBook stamp: 'totot 11/6/2023 20:51:38'!
test05CanAddOneBook
	
	|  cartId cartItems |
	
	self test03CreateOneCart.
	
	cartId:= storeSystem createCartForUserID:'Juan' withPassword:'pass2'. 
	
	cartItems:= storeSystem listCart: cartId.
	self assert: cartId equals: cartIdGenerator lastAssignedCartId.
	self assert: cartItems isEmpty.!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:52:11' prior: 50652106!
test05CanNotAddNotPublishedBooks
	
	|  cartId cartItems |
	
	self test03CreateOneCart.
	
	
	
	cartItems:= storeSystem listCart: cartId.
	self assert: cartId equals: cartIdGenerator lastAssignedCartId.
	self assert: cartItems isEmpty.! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:55:12' prior: 50652131!
test05CanNotAddNotPublishedBooks
	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:56:00' prior: 50652142!
test05CanNotAddNotPublishedBooks
	
	! !
!Cart class methodsFor: 'error messages' stamp: 'totot 11/6/2023 20:56:16'!
invalidItemErrorMessage
	
	^'Item is not in catalog'! !

!methodRemoval: Cart #invalidItemErrorMessage stamp: 'totot 11/6/2023 20:56:16'!
invalidItemErrorMessage
	
	^'Item is not in catalog'!
!Cart methodsFor: 'assertions' stamp: 'totot 11/6/2023 20:56:22' prior: 50650343!
assertIsValidItem: anItem

	(catalog includesKey: anItem) ifFalse: [ self error: self class invalidItemErrorMessage ]! !
!Cart class methodsFor: 'error messages' stamp: 'totot 11/6/2023 20:56:32'!
invalidQuantityErrorMessage
	
	^'Invalid number of items'! !

!methodRemoval: Cart #invalidQuantityErrorMessage stamp: 'totot 11/6/2023 20:56:32'!
invalidQuantityErrorMessage
	
	^'Invalid number of items'!
!Cart methodsFor: 'assertions' stamp: 'totot 11/6/2023 20:56:35' prior: 50650349!
assertIsValidQuantity: aQuantity

	aQuantity strictlyPositive ifFalse: [ self error: self class invalidQuantityErrorMessage ]! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:58:03' prior: 50652146!
test05CanNotAddNotPublishedBooks
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: StoreTestObjectsFactory new toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart  invalidItemErrorMessage .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:58:22' prior: 50652182!
test05CanNotAddNotPublishedBooks
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: StoreTestObjectsFactory new itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart  invalidItemErrorMessage .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	! !

!classDefinition: #StoreSystemTest category: 'TusLibros' stamp: 'totot 11/6/2023 20:58:58'!
TestCase subclass: #StoreSystemTest
	instanceVariableNames: 'authenticationProcedure storeSystem cartIdGenerator storeTestObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreSystemTest methodsFor: 'running' stamp: 'totot 11/6/2023 20:58:56' prior: 50651894 overrides: 16961394!
setUp
	storeTestObjectsFactory:= StoreTestObjectsFactory new.
	cartIdGenerator:= CartIdGenerator new.
	storeSystem:= StoreSystem authenticatingUsersWith: self generatingCartIdUsing:( cartIdGenerator ).
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 20:59:07' prior: 50652200!
test05CanNotAddNotPublishedBooks
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart  invalidItemErrorMessage .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	! !

!testRun: #StoreSystemTest #test05CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 20:59:55'!
ERROR!
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:00:00'!
add: aRenameMe1 ofBookISBN: aRenameMe2 toCart: cartId 
	self shouldBeImplemented.! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:00:25' prior: 50652261!
add: aQuantity ofBookISBN: anItem toCart: cartId 
	! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:01:14' prior: 50652267!
add: aQuantity ofBookISBN: anItem toCart: cartId 
	cartsIds at:cartId ifAbsent:[self error: 'invalid cartId'].
	! !

!testRun: #StoreSystemTest #test05CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:01:16'!
FAILURE!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:01:36' prior: 50652239!
test05CanNotAddNotPublishedBooks
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'invalid cartId' .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	! !

!testRun: #StoreSystemTest #test05CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:01:36'!
FAILURE!

cartId!

cartIdGenerator lastAssignedCartId!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:02:13' prior: 50651506!
test03CreateOneCart
	
	| cartId cartItems |
	authenticationProcedure:= [].
	
	cartId:= storeSystem createCartForUserID:'Pedro' withPassword:'pass'. 
	
	cartItems:= storeSystem listCart: cartId.
	
	self assert: cartItems isEmpty.
	^cartId! !

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:02:14'!
PASSED!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:02:14'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:02:14'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:02:14'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:02:14'!
PASSED!

!testRun: #StoreSystemTest #test05CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:02:14'!
FAILURE!

!testRun: #StoreSystemTest #test05CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:02:14'!
FAILURE!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:02:57'!
test06CanNotAddNotPublishedBooks
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'invalid cartId' .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	! !

!methodRemoval: StoreSystemTest #test05CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:02:57'!
test05CanNotAddNotPublishedBooks
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = 'invalid cartId' .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:03:13' prior: 50652337!
test06CanNotAddNotPublishedBooks
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart invalidItemErrorMessage .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:03:23'!
test05InvalidCartId
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart invalidItemErrorMessage .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:03:27' prior: 50652393!
test05InvalidCartId
	
	|  cartId cartItems |
	
	cartId:=200.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart invalidItemErrorMessage .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:03:36' prior: 50652412!
test05InvalidCartId
	
	|  cartId cartItems |
	
	cartId:=200.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText ='Invalid cartId' .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	! !

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:03:37'!
FAILURE!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:04:01' prior: 50652430!
test05InvalidCartId
	
	|  cartId cartItems |
	
	cartId:=200.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText ='invalid cartId' .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	! !

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:04:02'!
FAILURE!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:04:18' prior: 50652450!
test05InvalidCartId
	
	|  cartId |
	
	cartId:=200.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText ='invalid cartId'].
	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:04:33' prior: 50652470!
test05InvalidCartId
	
	
	
	
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: 200. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText ='invalid cartId'].
	
	! !

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:04:35'!
PASSED!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:04:35'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:04:35'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:04:35'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:04:35'!
PASSED!

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:04:35'!
PASSED!

!testRun: #StoreSystemTest #test06CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:04:35'!
FAILURE!

!testRun: #StoreSystemTest #test06CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:04:35'!
FAILURE!

!testRun: #StoreSystemTest #test06CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:04:41'!
FAILURE!
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:05:42' prior: 50652272!
add: aQuantity ofBookISBN: anItem toCart: cartId 
	cartsIds at:cartId 
		ifPresent:[:cart|] 
		ifAbsent:[self error: 'invalid cartId'].
	
	
	! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:06:06' prior: 50652523!
add: aQuantity ofBookISBN: anItem toCart: cartId 
	cartsIds at:cartId 
		ifPresent:[:cart| cart add:anItem occurrencesOf: aQuantity]
		ifAbsent:[self error: 'invalid cartId'].
	
	
	! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:06:40' prior: 50652531!
add: aQuantity ofBookISBN: anItem toCart: cartId 
	cartsIds at:cartId 
		ifPresent:[:cart| cart add:aQuantity of: anItem]
		ifAbsent:[self error: 'invalid cartId'].
	
	
	! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:06:45'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:06:45'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:06:45'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:06:45'!
PASSED!

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:06:45'!
PASSED!

!testRun: #StoreSystemTest #test06CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:06:45'!
ERROR!

!testRun: #StoreSystemTest #test06CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:06:45'!
ERROR!
!StoreSystem methodsFor: 'initialization' stamp: 'totot 11/6/2023 21:07:38' prior: 50651754!
initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator  
	
	authenticationSystem := anAuthenticationSystem.
	cartIdGenerator:= anIdGenerator.
	cartsIds := Dictionary new.! !
!StoreSystem methodsFor: 'initialization' stamp: 'totot 11/6/2023 21:08:07'!
initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator aCatalog: aCatalog   
	
	authenticationSystem := anAuthenticationSystem.
	cartIdGenerator:= anIdGenerator.
	cartsIds := Dictionary new.! !
!StoreSystem class methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 21:08:07' prior: 50651609!
authenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator  
	
	^self new initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator aCatalog: self halt ! !

!methodRemoval: StoreSystem #initializeAuthenticatingUsersWith:generatingCartIdUsing: stamp: 'totot 11/6/2023 21:08:07'!
initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator  
	
	authenticationSystem := anAuthenticationSystem.
	cartIdGenerator:= anIdGenerator.
	cartsIds := Dictionary new.!
!StoreSystem class methodsFor: 'instance creation' stamp: 'totot 11/6/2023 21:08:51'!
authenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator withCatalog: aCatalog   
	
	^self new initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator aCatalog: self halt ! !
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 21:08:51' prior: 50652229 overrides: 16961394!
setUp
	storeTestObjectsFactory:= StoreTestObjectsFactory new.
	cartIdGenerator:= CartIdGenerator new.
	storeSystem:= StoreSystem authenticatingUsersWith: self generatingCartIdUsing:( cartIdGenerator ) withCatalog: self halt.
	! !

!methodRemoval: StoreSystem class #authenticatingUsersWith:generatingCartIdUsing: stamp: 'totot 11/6/2023 21:08:51'!
authenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator  
	
	^self new initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator aCatalog: self halt !
!StoreSystem methodsFor: 'initialization' stamp: 'totot 11/6/2023 21:09:09'!
initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator withCatalog: aCatalog   
	
	authenticationSystem := anAuthenticationSystem.
	cartIdGenerator:= anIdGenerator.
	cartsIds := Dictionary new.! !
!StoreSystem class methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 21:09:09' prior: 50652612!
authenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator withCatalog: aCatalog   
	
	^self new initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator withCatalog: self halt ! !

!methodRemoval: StoreSystem #initializeAuthenticatingUsersWith:generatingCartIdUsing:aCatalog: stamp: 'totot 11/6/2023 21:09:09'!
initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator aCatalog: aCatalog   
	
	authenticationSystem := anAuthenticationSystem.
	cartIdGenerator:= anIdGenerator.
	cartsIds := Dictionary new.!
!StoreSystemTest methodsFor: 'running' stamp: 'totot 11/6/2023 21:09:38' prior: 50652624 overrides: 16961394!
setUp
	storeTestObjectsFactory:= StoreTestObjectsFactory new.
	cartIdGenerator:= CartIdGenerator new.
	storeSystem:= StoreSystem authenticatingUsersWith: self generatingCartIdUsing:( cartIdGenerator ) withCatalog: storeTestObjectsFactory defaultCatalog .
	! !
!StoreSystem class methodsFor: 'instance creation' stamp: 'totot 11/6/2023 21:09:47' prior: 50652656!
authenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator withCatalog: aCatalog   
	
	^self new initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator withCatalog: aCatalog ! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:09:49'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:09:49'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:09:50'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:09:50'!
PASSED!

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:09:50'!
PASSED!

!testRun: #StoreSystemTest #test06CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:09:50'!
ERROR!
!StoreSystem methodsFor: 'initialization' stamp: 'totot 11/6/2023 21:10:10' prior: 50652645!
initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator withCatalog: aCatalog   
	
	authenticationSystem := anAuthenticationSystem.
	cartIdGenerator:= anIdGenerator.
	cartsIds := Dictionary new.
	catalog := aCatalog ! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:10:10'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:10:10'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:10:10'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:10:11'!
PASSED!

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:10:11'!
PASSED!

!testRun: #StoreSystemTest #test06CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:10:11'!
PASSED!
!StoreSystem methodsFor: 'initialization' stamp: 'totot 11/6/2023 21:10:12' prior: 50652721!
initializeAuthenticatingUsersWith: anAuthenticationSystem generatingCartIdUsing: anIdGenerator withCatalog: aCatalog   
	
	authenticationSystem := anAuthenticationSystem.
	cartIdGenerator:= anIdGenerator.
	cartsIds := Dictionary new.
	catalog := aCatalog.! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:11:04'!
test06
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart invalidItemErrorMessage .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	! !

!methodRemoval: StoreSystemTest #test06 stamp: 'totot 11/6/2023 21:11:06'!
test06
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart invalidItemErrorMessage .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:13:28'!
test08CanListOneAddedItem
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart invalidItemErrorMessage .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:15:41' prior: 50652797!
test08CanListOneAddedItem
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	cartItems:= storeSystem listCart: cartId.
	self assert: cartItems equals:(Dictionary new at: storeTestObjectsFactory itemSellByTheStore put:1;yourself).
	! !

!testRun: #StoreSystemTest #test08CanListOneAddedItem stamp: 'totot 11/6/2023 21:15:46'!
FAILURE!
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:16:06' prior: 50652540!
add: aQuantity ofBookISBN: anItem toCart: cartId 
	cartsIds at:cartId 
		ifPresent:[:cart| cart add:aQuantity of: anItem]
		ifAbsent:[self error: 'invalid cartId'].
		
	
	
	! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:16:27' prior: 50651320!
listCart: cartId 
	! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:17:05' prior: 50652842!
listCart: cartId 
	cartsIds at:cartId ifPresent:[:cart| cart ].
		! !
!Cart methodsFor: 'initialization' stamp: 'totot 11/6/2023 21:17:53' prior: 50650356!
initializeAcceptingItemsOf: aCatalog

	catalog := aCatalog.
	items := Bag new.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'totot 11/6/2023 21:17:54'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'totot 11/6/2023 21:17:54'!
ERROR!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'totot 11/6/2023 21:17:54'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'totot 11/6/2023 21:17:54'!
ERROR!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'totot 11/6/2023 21:17:54'!
ERROR!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'totot 11/6/2023 21:17:54'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'totot 11/6/2023 21:17:54'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'totot 11/6/2023 21:17:54'!
PASSED!
!Cart methodsFor: 'initialization' stamp: 'totot 11/6/2023 21:18:08' prior: 50652851!
initializeAcceptingItemsOf: aCatalog

	catalog := aCatalog.
	items := OrderedCollection new.! !
!Cart methodsFor: 'initialization' stamp: 'totot 11/6/2023 21:18:32'!
withItemsDo: aOneArgBlock
	items do: aOneArgBlock.! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:23:54' prior: 50652846!
listCart: cartId 
	| dic |
	dic:= Dictionary new.
	cartsIds at:cartId ifPresent:[:cart| cart withItemsDo: [:item| 
			dic at: item ifAbsentPut: 1.
			dic at: item ifPresent:[:quantity | dic noCheckAdd: (quantity + 1)]]].
		! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:24:42' prior: 50652894!
listCart: cartId 
	| dic |
	dic:= Dictionary new.
	cartsIds at:cartId ifPresent:[:cart| cart withItemsDo: [:item| 
			dic at: item ifAbsentPut: 0.
			dic at: item ifPresent:[:quantity | dic noCheckAdd: (quantity + 1)]]].
		! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:24:59' prior: 50652904!
listCart: cartId 
	| dic |
	dic:= Dictionary new.
	cartsIds at:cartId ifPresent:[:cart| cart withItemsDo: [:item| 
			dic at: item ifAbsentPut: 0.
			dic at: item ifPresent:[:quantity | dic at: item put: (quantity + 1)]]].
		! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:25:00'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:25:00'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:25:00'!
ERROR!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:25:00'!
ERROR!

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:25:00'!
PASSED!

!testRun: #StoreSystemTest #test06CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:25:00'!
ERROR!

!testRun: #StoreSystemTest #test08CanListOneAddedItem stamp: 'totot 11/6/2023 21:25:00'!
ERROR!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:25:04'!
ERROR!
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:25:23' prior: 50652914!
listCart: cartId 
	| dic |
	dic:= Dictionary new.
	cartsIds at:cartId ifPresent:[:cart| cart withItemsDo: [:item| 
			dic at: item ifAbsentPut: 0.
			dic at: item ifPresent:[:quantity | dic at: item put: (quantity + 1)]]].
	^dic
		! !

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:25:24'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:25:24'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:25:24'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:25:24'!
PASSED!

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:25:24'!
PASSED!

!testRun: #StoreSystemTest #test06CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:25:24'!
PASSED!

!testRun: #StoreSystemTest #test08CanListOneAddedItem stamp: 'totot 11/6/2023 21:25:24'!
PASSED!
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:25:36' prior: 50652949!
listCart: cartId 
	| cartItemsList |
	cartItemsList:= Dictionary new.
	cartsIds at:cartId ifPresent:[:cart| cart withItemsDo: [:item| 
			cartItemsList at: item ifAbsentPut: 0.
			cartItemsList at: item ifPresent:[:quantity | cartItemsList at: item put: (quantity + 1)]]].
	^cartItemsList
		! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:25:49' prior: 50652981!
listCart: cartId 
	| cartItems |
	cartItems:= Dictionary new.
	cartsIds at:cartId ifPresent:[:cart| cart withItemsDo: [:item| 
			cartItems at: item ifAbsentPut: 0.
			cartItems at: item ifPresent:[:quantity | cartItems at: item put: (quantity + 1)]]].
	^cartItems
		! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:26:08'!
test06CanNotAddInvalidItems
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart invalidItemErrorMessage .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	! !

!methodRemoval: StoreSystemTest #test06CanNotAddNotPublishedBooks stamp: 'totot 11/6/2023 21:26:08'!
test06CanNotAddNotPublishedBooks
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: cartId. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart invalidItemErrorMessage .
			cartItems:= storeSystem listCart: cartId.
			self assert: cartId equals: cartIdGenerator lastAssignedCartId.
			self assert: cartItems isEmpty.].
	
	!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:26:31'!
test08CanListAddedItems
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	cartItems:= storeSystem listCart: cartId.
	self assert: cartItems equals:(Dictionary new at: storeTestObjectsFactory itemSellByTheStore put:1;yourself).
	! !

!methodRemoval: StoreSystemTest #test08CanListOneAddedItem stamp: 'totot 11/6/2023 21:26:33'!
test08CanListOneAddedItem
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	cartItems:= storeSystem listCart: cartId.
	self assert: cartItems equals:(Dictionary new at: storeTestObjectsFactory itemSellByTheStore put:1;yourself).
	!

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:26:35'!
PASSED!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:26:35'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:26:35'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:26:35'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:26:35'!
PASSED!

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:26:35'!
PASSED!

!testRun: #StoreSystemTest #test06CanNotAddInvalidItems stamp: 'totot 11/6/2023 21:26:35'!
PASSED!

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:26:35'!
PASSED!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:26:40' prior: 50653041!
test08CanListAddedItems
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	cartItems:= storeSystem listCart: cartId.
	self assert: cartItems equals:(Dictionary new at: storeTestObjectsFactory itemSellByTheStore put:1;yourself).
	! !

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:26:41'!
FAILURE!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:26:45' prior: 50653093!
test08CanListAddedItems
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	cartItems:= storeSystem listCart: cartId.
	self assert: cartItems equals:(Dictionary new at: storeTestObjectsFactory itemSellByTheStore put:2;yourself).
	! !

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:26:45'!
PASSED!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:26:45'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:26:45'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:26:45'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:26:45'!
PASSED!

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:26:45'!
PASSED!

!testRun: #StoreSystemTest #test06CanNotAddInvalidItems stamp: 'totot 11/6/2023 21:26:45'!
PASSED!

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:26:45'!
PASSED!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:26:56' prior: 50653110!
test08CanListAddedItems
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	
	cartItems:= storeSystem listCart: cartId.
	self assert: cartItems equals:(Dictionary new at: storeTestObjectsFactory itemSellByTheStore put:4;yourself).
	! !

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:26:57'!
PASSED!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:26:57'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:26:57'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:26:57'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:26:57'!
PASSED!

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:26:57'!
PASSED!

!testRun: #StoreSystemTest #test06CanNotAddInvalidItems stamp: 'totot 11/6/2023 21:26:57'!
PASSED!

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:26:57'!
PASSED!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:27:07' prior: 50653148!
test08CanListAddedItems
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  anotherItemSellByTheStore toCart: cartId.
	
	cartItems:= storeSystem listCart: cartId.
	self assert: cartItems equals:(Dictionary new at: storeTestObjectsFactory itemSellByTheStore put:4;yourself).
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:27:48' prior: 50653189!
test08CanListAddedItems
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  anotherItemSellByTheStore toCart: cartId.
	
	cartItems:= storeSystem listCart: cartId.
	self assert: cartItems equals:(Dictionary new at: storeTestObjectsFactory itemSellByTheStore put:4; at: storeTestObjectsFactory anotherItemSellbyTheStore put: 2;yourself).
	! !

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:27:50'!
ERROR!
!StoreTestObjectsFactory methodsFor: 'items' stamp: 'totot 11/6/2023 21:27:59'!
anotherItemSellByTheStore
	self shouldBeImplemented.! !
!StoreTestObjectsFactory methodsFor: 'items' stamp: 'totot 11/6/2023 21:28:09' prior: 50653233!
anotherItemSellByTheStore
	^'another valid item'! !

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:28:10'!
ERROR!
!StoreTestObjectsFactory methodsFor: 'cart' stamp: 'totot 11/6/2023 21:28:36' prior: 50650847!
defaultCatalog
	
	^ Dictionary new
		at: self itemSellByTheStore put: self itemSellByTheStorePrice;
		at: self anotherItemSellByTheStore put: self anotherItemSellByTheStore ;
		yourself ! !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #StoreSystemTest #test06CanNotAddInvalidItems stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:28:37'!
ERROR!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'totot 11/6/2023 21:28:37'!
ERROR!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'totot 11/6/2023 21:28:37'!
ERROR!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'totot 11/6/2023 21:28:37'!
ERROR!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'totot 11/6/2023 21:28:37'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'totot 11/6/2023 21:28:37'!
PASSED!
!StoreTestObjectsFactory methodsFor: 'cart' stamp: 'totot 11/6/2023 21:28:52' prior: 50653246!
defaultCatalog
	
	^ Dictionary new
		at: self itemSellByTheStore put: self itemSellByTheStorePrice;
		at: self anotherItemSellByTheStore put: self anotherItemSellByTheStorePrice;
		yourself ! !

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'totot 11/6/2023 21:28:54'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'totot 11/6/2023 21:28:54'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'totot 11/6/2023 21:28:54'!
ERROR!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'totot 11/6/2023 21:28:55'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'totot 11/6/2023 21:28:55'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'totot 11/6/2023 21:28:55'!
ERROR!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'totot 11/6/2023 21:28:55'!
ERROR!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'totot 11/6/2023 21:28:55'!
ERROR!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'totot 11/6/2023 21:28:55'!
ERROR!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'totot 11/6/2023 21:28:55'!
ERROR!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'totot 11/6/2023 21:28:55'!
ERROR!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'totot 11/6/2023 21:28:55'!
ERROR!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'totot 11/6/2023 21:28:55'!
ERROR!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'totot 11/6/2023 21:28:55'!
ERROR!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'totot 11/6/2023 21:28:56'!
ERROR!
!StoreTestObjectsFactory methodsFor: 'items' stamp: 'totot 11/6/2023 21:28:59'!
anotherItemSellByTheStorePrice
	self shouldBeImplemented.! !
!StoreTestObjectsFactory methodsFor: 'items' stamp: 'totot 11/6/2023 21:29:04' prior: 50653381!
anotherItemSellByTheStorePrice
	^200! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'totot 11/6/2023 21:29:05'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'totot 11/6/2023 21:29:06'!
ERROR!
!CartTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:29:19' prior: 50650429!
test02CanNotAddItemsThatDoNotBelongToStore

	| cart |
	
	cart := testObjectsFactory createCart.
	
	self 
		should: [ cart add: testObjectsFactory itemNotSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'totot 11/6/2023 21:29:20'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'totot 11/6/2023 21:29:21'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'totot 11/6/2023 21:29:22'!
ERROR!
!CartTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:29:30' prior: 50650415!
test04CanNotAddNonPositiveNumberOfItems

	| cart |
	
	cart := testObjectsFactory createCart.
	
	self 
		should: [cart add: 0 of: testObjectsFactory itemSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart invalidQuantityErrorMessage.
			self assert: cart isEmpty ]! !

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'totot 11/6/2023 21:29:31'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'totot 11/6/2023 21:29:31'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'totot 11/6/2023 21:29:31'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'totot 11/6/2023 21:29:31'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'totot 11/6/2023 21:29:31'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'totot 11/6/2023 21:29:31'!
ERROR!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'totot 11/6/2023 21:29:31'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'totot 11/6/2023 21:29:31'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'totot 11/6/2023 21:29:31'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'totot 11/6/2023 21:29:31'!
ERROR!
!CartTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:29:37' prior: 50650473!
test05CanNotAddMoreThanOneItemNotSellByTheStore

	| cart |
	
	cart := testObjectsFactory createCart.
	
	self 
		should: [cart add: 2 of: testObjectsFactory itemNotSellByTheStore  ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'totot 11/6/2023 21:29:38'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'totot 11/6/2023 21:29:40'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'totot 11/6/2023 21:29:41'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'totot 11/6/2023 21:29:42'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'totot 11/6/2023 21:29:42'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'totot 11/6/2023 21:29:42'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'totot 11/6/2023 21:29:42'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'totot 11/6/2023 21:29:42'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'totot 11/6/2023 21:29:42'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'totot 11/6/2023 21:29:43'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'totot 11/6/2023 21:29:43'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'totot 11/6/2023 21:29:43'!
PASSED!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:29:43'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:29:43'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:29:44'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:29:44'!
PASSED!

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:29:44'!
PASSED!

!testRun: #StoreSystemTest #test06CanNotAddInvalidItems stamp: 'totot 11/6/2023 21:29:44'!
PASSED!

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:29:44'!
ERROR!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:29:54' prior: 50653209!
test08CanListAddedItems
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  anotherItemSellByTheStore toCart: cartId.
	
	cartItems:= storeSystem listCart: cartId.
	self assert: cartItems equals:(Dictionary new at: storeTestObjectsFactory itemSellByTheStore put:4; at: storeTestObjectsFactory anotherItemSellByTheStore put: 2;yourself).
	! !

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:29:56'!
PASSED!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:30:09' prior: 50653544!
test08CanListAddedItems
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  anotherItemSellByTheStore toCart: cartId.
	
	cartItems:= storeSystem listCart: cartId.
	self assert: cartItems equals:(Dictionary new at: storeTestObjectsFactory itemSellByTheStore put:3; at: storeTestObjectsFactory anotherItemSellByTheStore put: 1;yourself).
	! !

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:30:15'!
PASSED!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:30:15'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:30:15'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:30:15'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:30:15'!
PASSED!

!testRun: #StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:30:15'!
PASSED!

!testRun: #StoreSystemTest #test06CanNotAddInvalidItems stamp: 'totot 11/6/2023 21:30:15'!
PASSED!

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:30:15'!
PASSED!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:30:52'!
test09CanNotCheckoutInvalidId
	
	|  cartId cartItems |
	
	cartId:=self test03CreateOneCart.
	storeSystem add: 2 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemSellByTheStore toCart: cartId.
	storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  anotherItemSellByTheStore toCart: cartId.
	
	cartItems:= storeSystem listCart: cartId.
	self assert: cartItems equals:(Dictionary new at: storeTestObjectsFactory itemSellByTheStore put:3; at: storeTestObjectsFactory anotherItemSellByTheStore put: 1;yourself).
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:30:59' prior: 50653615!
test09CanNotCheckoutInvalidId
	
	|  cartId |
	
	cartId:=200
	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:31:03' prior: 50653637!
test09CanNotCheckoutInvalidId
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:31:10' prior: 50652483!
test05InvalidCartId
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: 200. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText ='invalid cartId'].
	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:31:20'!
test05CanNotAddItemToInvalidCartId
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: 200. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText ='invalid cartId'].
	
	! !

!methodRemoval: StoreSystemTest #test05InvalidCartId stamp: 'totot 11/6/2023 21:31:20'!
test05InvalidCartId
	
	self 
		should: [storeSystem add: 1 ofBookISBN: storeTestObjectsFactory  itemNotSellByTheStore toCart: 200. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText ='invalid cartId'].
	
	!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:31:51'!
test09CanNotCheckoutUnregisteredCart
	
	
	

	
	! !

!methodRemoval: StoreSystemTest #test09CanNotCheckoutInvalidId stamp: 'totot 11/6/2023 21:31:51'!
test09CanNotCheckoutInvalidId
	
	
	

	
	!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:32:08' prior: 50653681!
test09CanNotCheckoutUnregisteredCart
	
	
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:33:19' prior: 50653690!
test09CanNotCheckoutUnregisteredCart
	
	self 
		should: [storeSystem checkoutCart: 200 payingWith: storeTestObjectsFactory createCart . ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText ='invalid cartId'].
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:33:33' prior: 50653695!
test09CanNotCheckoutUnregisteredCart
	
	self 
		should: [storeSystem checkoutCart: 200 payingWith: storeTestObjectsFactory notExpiredCreditCard . ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText ='invalid cartId'].
	
	
	

	
	! !

!testRun: #StoreSystemTest #test09CanNotCheckoutUnregisteredCart stamp: 'totot 11/6/2023 21:33:38'!
ERROR!
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:33:41'!
checkoutCart: aRenameMe1 payingWith: aRenameMe2 
	self shouldBeImplemented.! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:33:43' prior: 50653722!
checkoutCart: aRenameMe1 payingWith: aRenameMe2 
	! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:33:46' prior: 50653728!
checkoutCart: aCartId payingWith: aRenameMe2 
	! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:33:53' prior: 50653733!
checkoutCart: aCartId payingWith: aCreditCard 
	! !
!StoreSystem methodsFor: 'methods' stamp: 'totot 11/6/2023 21:34:22' prior: 50653738!
checkoutCart: aCartId payingWith: aCreditCard 
	self error: 'invalid cartId'.! !

!testRun: #StoreSystemTest #test09CanNotCheckoutUnregisteredCart stamp: 'totot 11/6/2023 21:34:23'!
PASSED!

!testRun: #StoreSystemTest #test01CreateCartWithUnregisteredUser stamp: 'totot 11/6/2023 21:34:23'!
PASSED!

!testRun: #StoreSystemTest #test02CreateCartWithWrongPassword stamp: 'totot 11/6/2023 21:34:23'!
PASSED!

!testRun: #StoreSystemTest #test03CreateOneCart stamp: 'totot 11/6/2023 21:34:23'!
PASSED!

!testRun: #StoreSystemTest #test04CreateMoreOneCart stamp: 'totot 11/6/2023 21:34:23'!
PASSED!

!testRun: #StoreSystemTest #test05CanNotAddItemToInvalidCartId stamp: 'totot 11/6/2023 21:34:23'!
PASSED!

!testRun: #StoreSystemTest #test06CanNotAddInvalidItems stamp: 'totot 11/6/2023 21:34:23'!
PASSED!

!testRun: #StoreSystemTest #test08CanListAddedItems stamp: 'totot 11/6/2023 21:34:23'!
PASSED!

!testRun: #StoreSystemTest #test09CanNotCheckoutUnregisteredCart stamp: 'totot 11/6/2023 21:34:23'!
PASSED!
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:35:08'!
test10CanCheckout
	
	self 
		should: [storeSystem checkoutCart: 200 payingWith: storeTestObjectsFactory notExpiredCreditCard . ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText ='invalid cartId'].
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:35:29' prior: 50653777!
test10CanCheckout
	| cartId |
	cartId:= self test03CreateOneCart.
	
	self 
		should: [storeSystem checkoutCart: 200 payingWith: storeTestObjectsFactory notExpiredCreditCard . ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText ='invalid cartId'].
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:35:39' prior: 50653789!
test10CanCheckout
	| cartId |
	cartId:= self test03CreateOneCart.
	
	self 
		should: [storeSystem checkoutCart: cartId payingWith: storeTestObjectsFactory notExpiredCreditCard . ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText ='invalid cartId'].
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:35:51' prior: 50653802!
test10CanCheckout
	| cartId |
	cartId:= self test03CreateOneCart.
	storeSystem checkoutCart: cartId payingWith: storeTestObjectsFactory notExpiredCreditCard . 
	
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:36:04' prior: 50653815!
test10CanCheckout
	| cartId sale |
	cartId:= self test03CreateOneCart.
	sale:= storeSystem checkoutCart: cartId payingWith: storeTestObjectsFactory notExpiredCreditCard . 
	
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:37:06' prior: 50653824!
test10CanCheckout
	| cartId sale |
	cartId:= self test03CreateOneCart.
	storeSystem add: 1 of: storeTestObjectsFactory itemSellByTheStore to: cartId.
	sale:= storeSystem checkoutCart: cartId payingWith: storeTestObjectsFactory notExpiredCreditCard . 
	
	
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:37:19' prior: 50653833!
test10CanCheckout
	| cartId sale |
	cartId:= self test03CreateOneCart.
	storeSystem add: 1 of: storeTestObjectsFactory itemSellByTheStore toCart: cartId.
	sale:= storeSystem checkoutCart: cartId payingWith: storeTestObjectsFactory notExpiredCreditCard . 
	
	
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:37:31' prior: 50653845!
test10CanCheckout
	| cartId sale |
	cartId:= self test03CreateOneCart.
	storeSystem add: 1 of: storeTestObjectsFactory itemSellByTheStore toCart: cartId.
	sale:= storeSystem checkoutCart: cartId payingWith: storeTestObjectsFactory notExpiredCreditCard . 
	
	
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:37:55' prior: 50653857!
test10CanCheckout
	| cartId sale |
	cartId:= self test03CreateOneCart.
	storeSystem add: 1 ofBookISBN: storeTestObjectsFactory itemSellByTheStore toCart: cartId.
	sale:= storeSystem checkoutCart: cartId payingWith: storeTestObjectsFactory notExpiredCreditCard . 
	
	
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:38:10' prior: 50653869!
test10CanCheckout
	| cartId sale |
	cartId:= self test03CreateOneCart.
	storeSystem add: 1 ofBookISBN: storeTestObjectsFactory itemSellByTheStore toCart: cartId.
	sale:= storeSystem checkoutCart: cartId payingWith: storeTestObjectsFactory notExpiredCreditCard.
	 
	
	
	
	
	

	
	! !

!classRenamed: #CartIdGenerator as: #IdGenerator stamp: 'totot 11/6/2023 21:38:44'!
Smalltalk renameClassNamed: #CartIdGenerator as: #IdGenerator!
!StoreSystemTest methodsFor: 'as yet unclassified' stamp: 'totot 11/6/2023 21:38:44' prior: 50652679 overrides: 16961394!
setUp
	storeTestObjectsFactory:= StoreTestObjectsFactory new.
	cartIdGenerator:= IdGenerator new.
	storeSystem:= StoreSystem authenticatingUsersWith: self generatingCartIdUsing:( cartIdGenerator ) withCatalog: storeTestObjectsFactory defaultCatalog .
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:39:14' prior: 50653881!
test10CanCheckout
	| cartId sale |
	cartId:= self test03CreateOneCart.
	storeSystem add: 1 ofBookISBN: storeTestObjectsFactory itemSellByTheStore toCart: cartId.
	
	sale:= storeSystem checkoutCart: cartId payingWith: storeTestObjectsFactory notExpiredCreditCard.
	
	
	
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:39:47' prior: 50653910!
test10CanCheckout
	| cartId sale |
	cartId:= self test03CreateOneCart.
	storeSystem add: 1 ofBookISBN: storeTestObjectsFactory itemSellByTheStore toCart: cartId.
	
	sale := storeSystem checkoutCart: cartId payingWith: storeTestObjectsFactory notExpiredCreditCard.
	
	
	self assert: sale equals: cartIdGenerator lastAssignedCartId.
	
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:39:51' prior: 50653922!
test10CanCheckout
	| cartId transactionId |
	cartId:= self test03CreateOneCart.
	storeSystem add: 1 ofBookISBN: storeTestObjectsFactory itemSellByTheStore toCart: cartId.
	
	transactionId := storeSystem checkoutCart: cartId payingWith: storeTestObjectsFactory notExpiredCreditCard.
	
	
	self assert: transactionId equals: cartIdGenerator lastAssignedCartId.
	
	
	
	

	
	! !
!StoreSystemTest methodsFor: 'tests' stamp: 'totot 11/6/2023 21:42:12' prior: 50653936!
test10CanCheckout
	| cartId transactionId |
	cartId:= self test03CreateOneCart.
	storeSystem add: 1 ofBookISBN: storeTestObjectsFactory itemSellByTheStore toCart: cartId.
	
	transactionId := storeSystem checkoutCart: cartId payingWith: storeTestObjectsFactory notExpiredCreditCard.
	
	self assert: transactionId equals: cartIdGenerator lastAssignedCartId.
	
	
	
	

	
	! !

----QUIT----(6 November 2023 21:42:26) CuisUniversity-5981.image priorSource: 10197292!