

----QUIT----(13 August 2023 19:14:09) CuisUniversity-5981.image priorSource: 5713367!

----STARTUP---- (13 August 2023 19:14:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5981.image!


----QUIT----(13 August 2023 19:14:10) CuisUniversity-5981.image priorSource: 10197065!

----STARTUP---- (24 October 2023 20:07:18) as /home/totorroto/Desktop/Portfolio/linux64/CuisUniversity-5981.image!


----End fileIn of /home/totorroto/Downloads/Portfolio-Solucion.st----!

TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReportTest category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:08:21'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReportTest methodsFor: 'no messages' stamp: 'toto 10/24/2023 20:08:56'!
test01xx
	! !

TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:09:10'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:10:04'!
Object subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'no messages' stamp: 'toto 10/24/2023 20:10:02'!
test01xx
	| account1 deposit1 account2 |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Transfer register: 100 from:account1 to:account2.
		
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: deposit1).
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:13:17' prior: 50651076!
test01xx
	| account1 account2 depositLeg transfer withdrawLeg |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	
	transfer := Transfer register: 100 from:account1 to:account2.
	withdrawLeg:= transfer withdrawLeg.
	
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: withdrawLeg ).
	self assert: account1  balance equals: -100.
	
	self assert: 1 equals: account2 transactions size .
	self assert: (account2 transactions includes: depositLeg ).
	self assert: account2  balance equals: 100.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:13:32' prior: 50651088!
test01xx
	| account1 account2 depositLeg transfer withdrawLeg |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	
	transfer := Transfer register: 100 from:account1 to:account2.
	
	withdrawLeg:= transfer withdrawLeg.
	depositLeg := transfer depositLeg.
	
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: withdrawLeg ).
	self assert: account1  balance equals: -100.
	
	self assert: 1 equals: account2 transactions size .
	self assert: (account2 transactions includes: depositLeg ).
	self assert: account2  balance equals: 100.
! !

!testRun: #TransferTest #test01xx stamp: 'toto 10/24/2023 20:13:34'!
ERROR!
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:13:39'!
register: aRenameMe1 from: account1 to: account2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeRegister: aRenameMe1 from: account1 to: account2 ! !
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:13:55' prior: 50651133!
register: aValue from: account1 to: account2 
	
	^self new initializeRegister: aValue from: account1 to: account2 ! !

!testRun: #TransferTest #test01xx stamp: 'toto 10/24/2023 20:13:56'!
ERROR!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:14:04'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:14:05'!
Object subclass: #Transfer
	instanceVariableNames: 'value account1_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:14:05'!
Object subclass: #Transfer
	instanceVariableNames: 'value account1_CHANGE_ME account2_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:14:05'!
initializeRegister: aValue from: account1 to: account2 
	self shouldBeImplemented.
	value := aValue.
	account1_CHANGE_ME := account1.
	account2_CHANGE_ME := account2.! !
!Transfer methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:14:19' prior: 50651175!
initializeRegister: aValue from: account1 to: account2 
	
	value := aValue.
	account1_CHANGE_ME := account1.
	account2_CHANGE_ME := account2.! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:14:23'!
Object subclass: #Transfer
	instanceVariableNames: 'value fromAccount account2_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:14:23' prior: 50651183!
initializeRegister: aValue from: account1 to: account2 
	
	value := aValue.
	fromAccount := account1.
	account2_CHANGE_ME := account2.! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:14:28'!
Object subclass: #Transfer
	instanceVariableNames: 'value fromAccount toAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:14:28' prior: 50651199!
initializeRegister: aValue from: account1 to: account2 
	
	value := aValue.
	fromAccount := account1.
	toAccount := account2.! !

!testRun: #TransferTest #test01xx stamp: 'toto 10/24/2023 20:14:31'!
ERROR!
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:16:01' prior: 50651143!
register: aValue from: account1 to: account2 

	| deposit withdraw |
	withdraw:= Withdraw register: aValue on: account1.
	deposit:= Deposit register: aValue on: account2. 
	
	^self new initializeRegister: aValue from: withdraw to: deposit.
	
	! !
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:16:08' prior: 50651225!
register: aValue from: account1 to: account2 

	| depositLeg withdraw |
	withdraw:= Withdraw register: aValue on: account1.
	depositLeg:= Deposit register: aValue on: account2. 
	
	^self new initializeRegister: aValue from: withdraw to: depositLeg.
	
	! !
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:16:12' prior: 50651236!
register: aValue from: account1 to: account2 

	| depositLeg withdrawLeg |
	withdrawLeg:= Withdraw register: aValue on: account1.
	depositLeg:= Deposit register: aValue on: account2. 
	
	^self new initializeRegister: aValue from: withdrawLeg to: depositLeg.
	
	! !
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:16:17' prior: 50651248!
register: aValue from: account1 to: account2 

	| depositLeg withdrawLeg |
	
	withdrawLeg:= Withdraw register: aValue on: account1.
	depositLeg:= Deposit register: aValue on: account2. 
	
	^self new initializeRegister: aValue from: withdrawLeg to: depositLeg.
	
	! !

!testRun: #TransferTest #test01xx stamp: 'toto 10/24/2023 20:16:32'!
ERROR!

!testRun: #TransferTest #test01xx stamp: 'toto 10/24/2023 20:16:32'!
ERROR!
!Transfer methodsFor: 'legs' stamp: 'toto 10/24/2023 20:16:39'!
withdrawLeg
	self shouldBeImplemented.! !
!Transfer methodsFor: 'legs' stamp: 'toto 10/24/2023 20:16:53' prior: 50651276!
withdrawLeg
	^fromAccount.! !

!testRun: #TransferTest #test01xx stamp: 'toto 10/24/2023 20:16:55'!
ERROR!
!Transfer methodsFor: 'legs' stamp: 'toto 10/24/2023 20:16:59'!
depositLeg
	self shouldBeImplemented.! !
!Transfer methodsFor: 'legs' stamp: 'toto 10/24/2023 20:17:04' prior: 50651286!
depositLeg
	^toAccount.! !

!testRun: #TransferTest #test01xx stamp: 'toto 10/24/2023 20:17:05'!
PASSED!

!testRun: #TransferTest #test01xx stamp: 'toto 10/24/2023 20:17:07'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:19:14'!
test01Transfer
	| account1 account2 depositLeg transfer withdrawLeg |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	
	transfer := Transfer register: 100 from:account1 to:account2.
	
	withdrawLeg:= transfer withdrawLeg.
	depositLeg := transfer depositLeg.
	
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: withdrawLeg ).
	self assert: account1  balance equals: -100.
	
	self assert: 1 equals: account2 transactions size .
	self assert: (account2 transactions includes: depositLeg ).
	self assert: account2  balance equals: 100.
! !

!methodRemoval: TransferTest #test01xx stamp: 'toto 10/24/2023 20:19:16'!
test01xx
	| account1 account2 depositLeg transfer withdrawLeg |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	
	transfer := Transfer register: 100 from:account1 to:account2.
	
	withdrawLeg:= transfer withdrawLeg.
	depositLeg := transfer depositLeg.
	
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: withdrawLeg ).
	self assert: account1  balance equals: -100.
	
	self assert: 1 equals: account2 transactions size .
	self assert: (account2 transactions includes: depositLeg ).
	self assert: account2  balance equals: 100.
!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:19:43'!
test02CantTransferToSelf
	| account1 account2 depositLeg transfer withdrawLeg |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	
	transfer := Transfer register: 100 from:account1 to:account2.
	
	withdrawLeg:= transfer withdrawLeg.
	depositLeg := transfer depositLeg.
	
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: withdrawLeg ).
	self assert: account1  balance equals: -100.
	
	self assert: 1 equals: account2 transactions size .
	self assert: (account2 transactions includes: depositLeg ).
	self assert: account2  balance equals: 100.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:21:08' prior: 50651342!
test02CantTransferToSelf
	| account1 |
	
	account1 := ReceptiveAccount new.
	
	
	self should:[Transfer register: 100 from:account1 to:account1.] raise: Error withMessageText: 'No te podes transferir a vos mismo'.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:21:29' prior: 50651365!
test02CantTransferToSelf
	| account1 |
	
	account1 := ReceptiveAccount new.
	
	
	self should:[Transfer register: 100 from:account1 to:account1.] raise: Error withMessageText: 'No se pueden hacer autotransferencias'.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:21:30' prior: 50651375!
test02CantTransferToSelf
	| account1 |
	
	account1 := ReceptiveAccount new.
	
	self should:[Transfer register: 100 from:account1 to:account1.] raise: Error withMessageText: 'No se pueden hacer autotransferencias'.
! !

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:21:32'!
FAILURE!
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:22:14' prior: 50651260!
register: aValue from: account1 to: account2 
	
	| depositLeg withdrawLeg |
	
	account1 = account2 ifTrue:[self error:'No se pueden hacer autotransferencias'].
	
	
	withdrawLeg:= Withdraw register: aValue on: account1.
	depositLeg:= Deposit register: aValue on: account2. 
	
	^self new initializeRegister: aValue from: withdrawLeg to: depositLeg.
	
	! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:22:22'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:22:22'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:23:24'!
test03ValueCantBeNegative

	| account1 |
	
	account1 := ReceptiveAccount new.
	
	self should:[Transfer register: 100 from:account1 to:account1.] raise: Error withMessageText: 'No se pueden hacer autotransferencias'.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:23:35' prior: 50651418!
test03ValueCantBeNegative

	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	self should:[Transfer register: -100 from:account1 to:account1.] raise: Error withMessageText: 'No se pueden hacer autotransferencias'.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:23:38' prior: 50651428!
test03ValueCantBeNegative

	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	self should:[Transfer register: -100 from:account1 to:account2.] raise: Error withMessageText: 'No se pueden hacer autotransferencias'.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:24:01' prior: 50651440!
test03ValueCantBeNegative

	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	self should:[Transfer register: -100 from:account1 to:account2.] raise: Error withMessageText: 'No se pueden hacer transferencias con cantidad negativa'.
! !

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:24:02'!
FAILURE!
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:24:35' prior: 50651398!
register: aValue from: account1 to: account2 
	
	| depositLeg withdrawLeg |
	
	account1 = account2 ifTrue:[self error:'No se pueden hacer autotransferencias'].
	aValue <0 ifTrue:[self error:'No se pueden hacer transferencias de cantidad negativa'].
	
	withdrawLeg:= Withdraw register: aValue on: account1.
	depositLeg:= Deposit register: aValue on: account2. 
	
	^self new initializeRegister: aValue from: withdrawLeg to: depositLeg.
	
	! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:24:38'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:24:38'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:24:38'!
FAILURE!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:24:38'!
FAILURE!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:24:51' prior: 50651452!
test03ValueCantBeNegative

	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	self should:[Transfer register: -100 from:account1 to:account2.] raise: Error withMessageText: 'No se pueden hacer transferencias de cantidad negativa'.
! !

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:24:53'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:24:56'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:24:56'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:24:56'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:25:46'!
test04ValueCantBeZero

	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	self should:[Transfer register: 0 from:account1 to:account2.] raise: Error withMessageText: 'No se pueden hacer transferencias de cantidad 0'.
! !
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:26:14' prior: 50651467!
register: aValue from: account1 to: account2 
	
	| depositLeg withdrawLeg |
	
	account1 = account2 ifTrue:[self error:'No se pueden hacer autotransferencias'].
	aValue <0 ifTrue:[self error:'No se pueden hacer transferencias de cantidad negativa'].
	aValue =0 ifTrue:[self error:'No se pueden hacer transferencias de cantidad 0'].
	
	withdrawLeg:= Withdraw register: aValue on: account1.
	depositLeg:= Deposit register: aValue on: account2. 
	
	^self new initializeRegister: aValue from: withdrawLeg to: depositLeg.
	
	! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:26:15'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:26:15'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:26:15'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:26:15'!
PASSED!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:26:40' prior: 50651519!
test04ValueCantBeZero

	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	self should:[Transfer register: 0 from:account1 to:account2.] raise: Error withMessageText: 'Solamente se pueden hacer transferencias con montos positivos'.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:26:49' prior: 50651496!
test03ValueCantBeNegative

	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	self should:[Transfer register: -100 from:account1 to:account2.] raise: Error withMessageText: 'Solamente se pueden hacer transferencias con montos positivos'.
! !
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:27:01' prior: 50651531!
register: aValue from: account1 to: account2 
	
	| depositLeg withdrawLeg |
	
	account1 = account2 ifTrue:[self error:'No se pueden hacer autotransferencias'].
	aValue <0 ifTrue:[self error:'Solamente se pueden hacer transferencias con montos positivos'].
	aValue =0 ifTrue:[self error:'Solamente se pueden hacer transferencias con montos positivos'].
	
	withdrawLeg:= Withdraw register: aValue on: account1.
	depositLeg:= Deposit register: aValue on: account2. 
	
	^self new initializeRegister: aValue from: withdrawLeg to: depositLeg.
	
	! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:27:02'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:27:02'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:27:02'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:27:02'!
PASSED!
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:27:06' prior: 50651587!
register: aValue from: account1 to: account2 
	
	| depositLeg withdrawLeg |
	
	account1 = account2 ifTrue:[self error:'No se pueden hacer autotransferencias'].
	aValue <=0 ifTrue:[self error:'Solamente se pueden hacer transferencias con montos positivos'].
	
	
	withdrawLeg:= Withdraw register: aValue on: account1.
	depositLeg:= Deposit register: aValue on: account2. 
	
	^self new initializeRegister: aValue from: withdrawLeg to: depositLeg.
	
	! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:27:07'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:27:07'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:27:07'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:27:07'!
PASSED!
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:27:11' prior: 50651619!
register: aValue from: account1 to: account2 
	
	| depositLeg withdrawLeg |
	
	account1 = account2 ifTrue:[self error:'No se pueden hacer autotransferencias'].
	aValue <=0 ifTrue:[self error: 'Solamente se pueden hacer transferencias con montos positivos'].
	
	
	withdrawLeg:= Withdraw register: aValue on: account1.
	depositLeg:= Deposit register: aValue on: account2. 
	
	^self new initializeRegister: aValue from: withdrawLeg to: depositLeg.
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:28:47' prior: 50651562!
test04ValueCantBeZero

	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	
	self should:[Transfer register: 0 from:account1 to:account2.] raise: Error withMessageText: 'Solamente se pueden hacer transferencias con montos positivos'.
! !

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:30:26'!
Object subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:30:28'!
Object subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:30:22' prior: 50651648!
register: aValue from: account1 to: account2 
	
	| depositLeg withdrawLeg |
	
	account1 = account2 ifTrue:[self error:'No se pueden hacer autotransferencias'].
	aValue <=0 ifTrue:[self error: 'Solamente se pueden hacer transferencias con montos positivos'].
	
	
	withdrawLeg:= TransferWithdraw register: aValue on: account1.
	depositLeg:= TransferDeposit register: aValue on: account2. 
	
	^self new initializeRegister: aValue from: withdrawLeg to: depositLeg.
	
	! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:30:30'!
ERROR!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:30:30'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:30:30'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:30:30'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:30:30'!
ERROR!
!TransferWithdraw class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:30:40'!
register: aValue on: account1 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeRegister: aValue on: account1 ! !
!TransferWithdraw class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:30:54' prior: 50651726!
register: aValue on: account1 

	^self new initializeRegister: aValue on: account1 ! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:30:56'!
ERROR!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:31:03'!
Object subclass: #TransferWithdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:31:03'!
Object subclass: #TransferWithdraw
	instanceVariableNames: 'value account1_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferWithdraw methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:31:03'!
initializeRegister: aValue on: account1 
	self shouldBeImplemented.
	value := aValue.
	account1_CHANGE_ME := account1.! !
!TransferWithdraw methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:31:09' prior: 50651760!
initializeRegister: aValue on: account1 
	
	value := aValue.
	account1_CHANGE_ME := account1.! !
!TransferWithdraw methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:31:13' prior: 50651767!
initializeRegister: aValue on: account1 
	
	value := aValue.
	account1_CHANGE_ME := account1.! !

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:31:16'!
Object subclass: #TransferWithdraw
	instanceVariableNames: 'value account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:31:16' prior: 50651773!
initializeRegister: aValue on: account1 
	
	value := aValue.
	account := account1.! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:31:19'!
ERROR!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:32:21'!
ERROR!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:32:21'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:32:21'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:32:21'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:32:21'!
ERROR!
!TransferDeposit class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:32:25'!
register: aValue on: account2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeRegister: aValue on: account2 ! !
!TransferDeposit class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:32:29' prior: 50651811!
register: aValue on: account2 
	^self new initializeRegister: aValue on: account2 ! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:32:30'!
ERROR!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:32:37'!
Object subclass: #TransferDeposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:32:37'!
Object subclass: #TransferDeposit
	instanceVariableNames: 'value account2_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:32:37'!
initializeRegister: aValue on: account2 
	self shouldBeImplemented.
	value := aValue.
	account2_CHANGE_ME := account2.! !
!TransferDeposit methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:32:42' prior: 50651844!
initializeRegister: aValue on: account2 
	
	account2_CHANGE_ME := account2.! !

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:32:45'!
Object subclass: #TransferDeposit
	instanceVariableNames: 'value account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:32:45' prior: 50651851!
initializeRegister: aValue on: account2 
	
	account := account2.! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:32:46'!
FAILURE!
!TransferDeposit class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:33:35' prior: 50651820!
register: aValue on: account2 
	| transferDeposit |
	transferDeposit:= self new initializeRegister: aValue on: account2.
	
	account2 register: transferDeposit.
	
	^transferDeposit! !
!TransferDeposit class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:33:38' prior: 50651874!
register: aValue on: account2 
	| transferDeposit |
	
	transferDeposit:= self new initializeRegister: aValue on: account2.
	
	account2 register: transferDeposit
	.
	
	^transferDeposit! !
!TransferWithdraw class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:33:55' prior: 50651736!
register: aValue on: account1 

	| transferWithdraw |
	transferWithdraw:= self new initializeRegister: aValue on: account1.
	
	 ! !
!TransferWithdraw class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:34:12' prior: 50651894!
register: aValue on: account1 

	| transferWithdraw |
	transferWithdraw:= self new initializeRegister: aValue on: account1.
	account1 register: transferWithdraw.
	^transferWithdraw 
	
	 ! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:34:17'!
ERROR!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:34:17'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:34:17'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:34:17'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:34:17'!
ERROR!
!TransferWithdraw methodsFor: 'balance' stamp: 'toto 10/24/2023 20:34:25'!
affectBalance: currentBalance 
	self shouldBeImplemented.! !
!TransferWithdraw methodsFor: 'balance' stamp: 'toto 10/24/2023 20:34:38' prior: 50651925!
affectBalance: currentBalance 
	! !
!AccountTransaction class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:35:19'!
from: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !
!TransferDeposit class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:35:19'!
from: aValue on: account2 
	| transferDeposit |
	
	transferDeposit:= self new initializeRegister: aValue on: account2.
	
	account2 register: transferDeposit
	.
	
	^transferDeposit! !
!TransferWithdraw class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:35:19'!
from: aValue on: account1 

	| transferWithdraw |
	transferWithdraw:= self new initializeRegister: aValue on: account1.
	account1 register: transferWithdraw.
	^transferWithdraw 
	
	 ! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:35:19' prior: 50650379!
test05PortfolioHasRegisteredItsAccountsTransactions

	| account portfolio deposit |
	
	account := ReceptiveAccount new.
	deposit := Deposit from: 100 on: account.
	portfolio := Portfolio with: account.
	
	self assert: (portfolio hasRegistered: deposit)! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:35:19' prior: 50651694!
register: aValue from: account1 to: account2 
	
	| depositLeg withdrawLeg |
	
	account1 = account2 ifTrue:[self error:'No se pueden hacer autotransferencias'].
	aValue <=0 ifTrue:[self error: 'Solamente se pueden hacer transferencias con montos positivos'].
	
	
	withdrawLeg:= TransferWithdraw from: aValue on: account1.
	depositLeg:= TransferDeposit from: aValue on: account2. 
	
	^self new initializeRegister: aValue from: withdrawLeg to: depositLeg.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:35:19' prior: 50650340!
test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance

	| account portfolio |
	
	account := ReceptiveAccount new.
	Deposit from: 100 on: account.
	portfolio := Portfolio with: account.
	
	self assert: account balance equals: portfolio balance! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:35:19' prior: 50650351!
test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortofolio |
	
	simplePortfolioAccount := ReceptiveAccount new.
	Deposit from: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	Withdraw from: 50 on: composedPortfolioAccount.
	composedPortofolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	self assert: (composedPortfolioAccount balance + simplePortfolio balance) equals: composedPortofolio balance! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:35:19' prior: 50650633!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit from: 100 on: account.
	Withdraw from: 50 on: account.
		
	self assert: 50 equals: account balance .
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:35:19' prior: 50650643!
test04WithdrawValueMustBePositive 

	| account withdrawValue |
	
	account := ReceptiveAccount new.
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw from: withdrawValue on: account) value
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:35:19' prior: 50650653!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit from: 100 on: account.
	withdraw := Withdraw from: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:35:19' prior: 50650624!
test02DepositIncreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount  new.
	Deposit from: 100 on: account.
		
	self assert: 100 equals: account balance .
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:35:19' prior: 50650424!
test08PortfolioTransactionsIncludesAllItsAccountsTransactions

	| account portfolio accountDeposit anotherAccount portfolioTransactions anotherAccountWithdraw |
	
	account := ReceptiveAccount new.
	accountDeposit := Deposit from: 100 on: account.
	anotherAccount := ReceptiveAccount new.
	anotherAccountWithdraw := Withdraw from: 100 on: account.
	portfolio := Portfolio with: account.
	
	portfolioTransactions := portfolio transactions.
	
	self assert: 2 equals: portfolioTransactions size.
	self assert: (portfolioTransactions includes: accountDeposit).
	self assert: (portfolioTransactions includes: anotherAccountWithdraw)! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:35:19' prior: 50650678!
test07AccountKnowsItsTransactions 

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit from: 100 on: account1.
		
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: deposit1).
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:35:19' prior: 50650390!
test06PortfolioLooksForRegisteredTransactionsRecursively

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortfolio composedPortfolioAccountWithdraw simplePortfolioAccountDeposit |
	
	simplePortfolioAccount := ReceptiveAccount new.
	simplePortfolioAccountDeposit := Deposit from: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	composedPortfolioAccountWithdraw := Withdraw from: 50 on: composedPortfolioAccount.
	composedPortfolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	self assert: (composedPortfolio hasRegistered: simplePortfolioAccountDeposit).
	self assert: (composedPortfolio hasRegistered: composedPortfolioAccountWithdraw)! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:35:19' prior: 50650447!
test09PortfolioTransactionsAreCalculatedRecursively

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortfolio composedPortfolioAccountWithdraw simplePortfolioAccountDeposit composedPortfolioTransactions |
	
	simplePortfolioAccount := ReceptiveAccount new.
	simplePortfolioAccountDeposit := Deposit from: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	composedPortfolioAccountWithdraw := Withdraw from: 50 on: composedPortfolioAccount.
	composedPortfolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	composedPortfolioTransactions := composedPortfolio transactions.
	self assert: 2 equals: composedPortfolioTransactions size.
	self assert: (composedPortfolioTransactions includes: simplePortfolioAccountDeposit).
	self assert: (composedPortfolioTransactions includes: composedPortfolioAccountWithdraw)! !

!methodRemoval: AccountTransaction class #register:on: stamp: 'toto 10/24/2023 20:35:19'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction!

!methodRemoval: TransferDeposit class #register:on: stamp: 'toto 10/24/2023 20:35:19'!
register: aValue on: account2 
	| transferDeposit |
	
	transferDeposit:= self new initializeRegister: aValue on: account2.
	
	account2 register: transferDeposit
	.
	
	^transferDeposit!

!methodRemoval: TransferWithdraw class #register:on: stamp: 'toto 10/24/2023 20:35:19'!
register: aValue on: account1 

	| transferWithdraw |
	transferWithdraw:= self new initializeRegister: aValue on: account1.
	account1 register: transferWithdraw.
	^transferWithdraw 
	
	 !
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:35:32' prior: 50651972!
register: aValue from: account1 to: account2 
	
	| depositLeg withdrawLeg |
	
	account1 = account2 ifTrue:[self error:'No se pueden hacer autotransferencias'].
	aValue <=0 ifTrue:[self error: 'Solamente se pueden hacer transferencias con montos positivos'].
	
	
	withdrawLeg:= TransferWithdraw from: self on: account1.
	depositLeg:= TransferDeposit from: self on: account2. 
	
	^self new initializeRegister: aValue from: withdrawLeg to: depositLeg.
	
	! !

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:35:58'!
Object subclass: #TransferDeposit
	instanceVariableNames: 'value account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:35:57' prior: 50651865!
initializeRegister: aValue on: account2 
	transfer:= aValue.
	account := account2.! !
!TransferDeposit methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:36:08' prior: 50652215!
initializeRegister: aValue on: account2 

	transfer:= aValue.
	account := account2.! !

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:36:12'!
Object subclass: #TransferWithdraw
	instanceVariableNames: 'value account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferWithdraw methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:36:11' prior: 50651788!
initializeRegister: aValue on: account1 
	
	transfer:= aValue.
	account := account1.! !
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:39:54' prior: 50652189!
register: aValue from: account1 to: account2 
	
	| transaction |
	
	account1 = account2 ifTrue:[self error:'No se pueden hacer autotransferencias'].
	aValue <=0 ifTrue:[self error: 'Solamente se pueden hacer transferencias con montos positivos'].

    	transaction := self for: aValue.

    	account1 register: transaction withdrawLeg.
    	account2 register: transaction depositLeg.

    	^transaction
	
	! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:40:24'!
ERROR!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:40:24'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:40:24'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:40:24'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:40:24'!
ERROR!
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:40:27'!
for: aValue 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aValue ! !
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:40:31' prior: 50652271!
for: aValue 
	^self new initializeFor: aValue ! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:40:32'!
ERROR!
!Transfer methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:40:35'!
initializeFor: aValue 
	self shouldBeImplemented.
	value := aValue.! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:41:57'!
Object subclass: #Transfer
	instanceVariableNames: 'value fromAccount toAccount withdrawLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:42:00'!
Object subclass: #Transfer
	instanceVariableNames: 'value fromAccount toAccount withdrawLeg depositLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:41:55' prior: 50652286!
initializeFor: aValue

    value := aValue.
    withdrawLeg := TransferWithdraw relatedTo: self.
    depositLeg := TransferDeposit relatedTo: self! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:42:05'!
ERROR!
!TransferWithdraw class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:42:14'!
relatedTo: aTransfer 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeRelatedTo: aTransfer ! !
!TransferWithdraw class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:42:17' prior: 50652319!
relatedTo: aTransfer 

	^self new initializeRelatedTo: aTransfer ! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:42:32'!
ERROR!
!TransferWithdraw methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:42:37'!
initializeRelatedTo: aTransfer 
	self shouldBeImplemented.
	transfer := aTransfer.! !
!TransferWithdraw methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:42:40' prior: 50652336!
initializeRelatedTo: aTransfer 
	transfer := aTransfer.! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:42:42'!
ERROR!
!TransferDeposit class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:42:46'!
relatedTo: aTransfer 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeRelatedTo: aTransfer ! !
!TransferDeposit class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 20:42:48' prior: 50652350!
relatedTo: aTransfer 

	^self new initializeRelatedTo: aTransfer ! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:42:49'!
ERROR!
!TransferDeposit methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:42:52'!
initializeRelatedTo: aTransfer 
	self shouldBeImplemented.
	transfer := aTransfer.! !
!TransferDeposit methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:42:55' prior: 50652367!
initializeRelatedTo: aTransfer 

	transfer := aTransfer.! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:42:56'!
ERROR!
!Transfer methodsFor: 'legs' stamp: 'toto 10/24/2023 20:43:39' prior: 50651290!
depositLeg
	^depositLeg.! !
!Transfer methodsFor: 'legs' stamp: 'toto 10/24/2023 20:43:44' prior: 50651280!
withdrawLeg
	^withdrawLeg .! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:43:45'!
FAILURE!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:43:45'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:43:45'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:43:45'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:43:45'!
FAILURE!

!methodRemoval: TransferWithdraw #initializeRegister:on: stamp: 'toto 10/24/2023 20:43:53'!
initializeRegister: aValue on: account1 
	
	transfer:= aValue.
	account := account1.!

!methodRemoval: TransferDeposit #initializeRegister:on: stamp: 'toto 10/24/2023 20:43:58'!
initializeRegister: aValue on: account2 

	transfer:= aValue.
	account := account2.!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:44:00'!
FAILURE!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:44:00'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:44:00'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:44:00'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:44:00'!
FAILURE!
!TransferWithdraw methodsFor: 'balance' stamp: 'toto 10/24/2023 20:44:33' prior: 50651930!
affectBalance: currentBalance 
	^currentBalance - transfer value.
	! !
!Transfer methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:44:49' overrides: 16902254!
value 
	^value.! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:44:52'!
ERROR!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:44:52'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:44:52'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:44:52'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:44:52'!
ERROR!
!TransferDeposit methodsFor: 'balance' stamp: 'toto 10/24/2023 20:44:59'!
affectBalance: currentBalance 
	self shouldBeImplemented.! !
!TransferDeposit methodsFor: 'balance' stamp: 'toto 10/24/2023 20:45:09' prior: 50652451!
affectBalance: currentBalance 
	^currentBalance +transfer value! !
!TransferDeposit methodsFor: 'balance' stamp: 'toto 10/24/2023 20:45:11' prior: 50652456!
affectBalance: currentBalance 
	^currentBalance + transfer value! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:45:12'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:45:27'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:45:27'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:45:27'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:45:27'!
PASSED!

!methodRemoval: Transfer #initializeRegister:from:to: stamp: 'toto 10/24/2023 20:45:59'!
initializeRegister: aValue from: account1 to: account2 
	
	value := aValue.
	fromAccount := account1.
	toAccount := account2.!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:46:03'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:46:03'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:46:03'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:46:03'!
PASSED!

Object subclass: #Transfer
	instanceVariableNames: 'value withdrawLeg depositLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:46:53'!
Object subclass: #Transfer
	instanceVariableNames: 'value withdrawLeg depositLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:46:55'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:46:55'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:46:55'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:46:55'!
PASSED!

Object subclass: #TransferLegs
	instanceVariableNames: 'value account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferLegs category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:47:52'!
Object subclass: #TransferLegs
	instanceVariableNames: 'value account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferLegs subclass: #TransferDeposit
	instanceVariableNames: 'value account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #TransferLegs
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferLegs category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:48:02'!
Object subclass: #TransferLegs
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferLegs subclass: #TransferDeposit
	instanceVariableNames: 'value account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:48:05'!
TransferLegs subclass: #TransferDeposit
	instanceVariableNames: 'value account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferLegs subclass: #TransferWithdraw
	instanceVariableNames: 'value account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:48:09'!
TransferLegs subclass: #TransferWithdraw
	instanceVariableNames: 'value account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:48:23'!
TransferLegs subclass: #TransferDeposit
	instanceVariableNames: 'account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:48:23'!
TransferLegs subclass: #TransferWithdraw
	instanceVariableNames: 'account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferLegs category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:48:23'!
Object subclass: #TransferLegs
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferLegs category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:48:44'!
Object subclass: #TransferLegs
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:48:44'!
TransferLegs subclass: #TransferDeposit
	instanceVariableNames: 'account transfer value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:48:44'!
TransferLegs subclass: #TransferWithdraw
	instanceVariableNames: 'account transfer value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:48:52'!
TransferLegs subclass: #TransferDeposit
	instanceVariableNames: 'account value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:48:52'!
TransferLegs subclass: #TransferWithdraw
	instanceVariableNames: 'account value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferLegs category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:48:52'!
Object subclass: #TransferLegs
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferLegs subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposit category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:49:05'!
TransferLegs subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferLegs subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:49:10'!
TransferLegs subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferLegs methodsFor: 'initialize' stamp: 'toto 10/24/2023 20:49:28'!
initializeRelatedTo: aTransfer 
	transfer := aTransfer.! !

!methodRemoval: TransferWithdraw #initializeRelatedTo: stamp: 'toto 10/24/2023 20:49:28'!
initializeRelatedTo: aTransfer 
	transfer := aTransfer.!

!methodRemoval: TransferDeposit #initializeRelatedTo: stamp: 'toto 10/24/2023 20:49:28'!
initializeRelatedTo: aTransfer 

	transfer := aTransfer.!
!TransferLegs methodsFor: 'balance' stamp: 'toto 10/24/2023 20:49:35'!
affectBalance: currentBalance

	self subclassResponsibility! !
!TransferWithdraw methodsFor: 'balance' stamp: 'toto 10/24/2023 20:50:50' prior: 50652428 overrides: 50652691!
affectBalance: currentBalance 
	^transfer affectBalanceWithdraw: currentBalance.! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:50:56'!
ERROR!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:50:56'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:50:56'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:50:56'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:50:56'!
ERROR!
!Transfer methodsFor: 'balance' stamp: 'toto 10/24/2023 20:51:03'!
affectBalanceWithdraw: currentBalance 
	self shouldBeImplemented.! !
!Transfer methodsFor: 'balance' stamp: 'toto 10/24/2023 20:51:19' prior: 50652716!
affectBalanceWithdraw: currentBalance 
	^currentBalance - value.! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:51:20'!
PASSED!
!TransferDeposit methodsFor: 'balance' stamp: 'toto 10/24/2023 20:51:35' prior: 50652461 overrides: 50652691!
affectBalance: currentBalance 
	^transfer affectBalanceDeposit: currentBalance.! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:51:43'!
ERROR!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 20:51:43'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 20:51:43'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 20:51:43'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:51:43'!
ERROR!
!Transfer methodsFor: 'balance' stamp: 'toto 10/24/2023 20:51:49'!
affectBalanceDeposit: currentBalance 
	self shouldBeImplemented.! !
!Transfer methodsFor: 'balance' stamp: 'toto 10/24/2023 20:51:56' prior: 50652749!
affectBalanceDeposit: currentBalance 
	^currentBalance + value.! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 20:51:57'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:54:10'!
test01ReportOfVirginReceptiveAccount
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:54:22' prior: 50652762!
test01ReportOfVirginReceptiveAccount
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:55:15' prior: 50651299!
test01Transfer
	| account1 account2 destinationTransfer transfer originTransfer |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	
	transfer := Transfer register: 100 from:account1 to:account2.
	
	originTransfer := transfer withdrawLeg.
	destinationTransfer := transfer depositLeg.
	
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: originTransfer ).
	self assert: account1  balance equals: -100.
	
	self assert: 1 equals: account2 transactions size .
	self assert: (account2 transactions includes: destinationTransfer ).
	self assert: account2  balance equals: 100.
! !
!Transfer methodsFor: 'legs' stamp: 'toto 10/24/2023 20:55:29'!
originTransfer
	^withdrawLeg .! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:55:29' prior: 50652772!
test01Transfer
	| account1 account2 destinationTransfer transfer originTransfer |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	
	transfer := Transfer register: 100 from:account1 to:account2.
	
	originTransfer := transfer originTransfer.
	destinationTransfer := transfer depositLeg.
	
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: originTransfer ).
	self assert: account1  balance equals: -100.
	
	self assert: 1 equals: account2 transactions size .
	self assert: (account2 transactions includes: destinationTransfer ).
	self assert: account2  balance equals: 100.
! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:55:29' prior: 50652241!
register: aValue from: account1 to: account2 
	
	| transaction |
	
	account1 = account2 ifTrue:[self error:'No se pueden hacer autotransferencias'].
	aValue <=0 ifTrue:[self error: 'Solamente se pueden hacer transferencias con montos positivos'].

    	transaction := self for: aValue.

    	account1 register: transaction originTransfer.
    	account2 register: transaction depositLeg.

    	^transaction
	
	! !

!methodRemoval: Transfer #withdrawLeg stamp: 'toto 10/24/2023 20:55:29'!
withdrawLeg
	^withdrawLeg .!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:55:35' prior: 50652800!
test01Transfer
	| account1 account2 destinationTransfer transfer originTransfer |
	
	account1 := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	
	transfer := Transfer register: 100 from:account1 to:account2.
	
	originTransfer := transfer originTransfer.
	destinationTransfer := transfer destinationTransfer.
	
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: originTransfer ).
	self assert: account1  balance equals: -100.
	
	self assert: 1 equals: account2 transactions size .
	self assert: (account2 transactions includes: destinationTransfer ).
	self assert: account2  balance equals: 100.
! !
!Transfer methodsFor: 'legs' stamp: 'toto 10/24/2023 20:55:51'!
destinationTransfer
	^depositLeg.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:55:51' prior: 50652824!
register: aValue from: account1 to: account2 
	
	| transaction |
	
	account1 = account2 ifTrue:[self error:'No se pueden hacer autotransferencias'].
	aValue <=0 ifTrue:[self error: 'Solamente se pueden hacer transferencias con montos positivos'].

    	transaction := self for: aValue.

    	account1 register: transaction originTransfer.
    	account2 register: transaction destinationTransfer.

    	^transaction
	
	! !

!methodRemoval: Transfer #depositLeg stamp: 'toto 10/24/2023 20:55:51'!
depositLeg
	^depositLeg.!
!Transfer methodsFor: 'balance' stamp: 'toto 10/24/2023 20:56:47'!
affectBalanceAsOriginTransfer: currentBalance 
	^currentBalance + value.! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:56:47' prior: 50652730 overrides: 50652691!
affectBalance: currentBalance 
	^transfer affectBalanceAsOriginTransfer: currentBalance.! !

!methodRemoval: Transfer #affectBalanceDeposit: stamp: 'toto 10/24/2023 20:56:47'!
affectBalanceDeposit: currentBalance 
	^currentBalance + value.!
!Transfer methodsFor: 'balance' stamp: 'toto 10/24/2023 20:57:10'!
affectBalanceAsDestinationTransfer: currentBalance 
	^currentBalance + value.! !

!methodRemoval: Transfer #affectBalanceAsOriginTransfer: stamp: 'toto 10/24/2023 20:57:10'!
affectBalanceAsOriginTransfer: currentBalance 
	^currentBalance + value.!
!Transfer methodsFor: 'balance' stamp: 'toto 10/24/2023 20:57:25'!
affectBalanceAsOriginTransfer: currentBalance 
	^currentBalance - value.! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:57:25' prior: 50652697 overrides: 50652691!
affectBalance: currentBalance 
	^transfer affectBalanceAsOriginTransfer: currentBalance.! !

!methodRemoval: Transfer #affectBalanceWithdraw: stamp: 'toto 10/24/2023 20:57:25'!
affectBalanceWithdraw: currentBalance 
	^currentBalance - value.!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:57:45'!
Object subclass: #Transfer
	instanceVariableNames: 'value originTransfer depositLeg'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:57:45' prior: 50652795!
originTransfer
	^originTransfer .! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:57:45' prior: 50652308!
initializeFor: aValue

    value := aValue.
    originTransfer := TransferWithdraw relatedTo: self.
    depositLeg := TransferDeposit relatedTo: self! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:57:53'!
Object subclass: #Transfer
	instanceVariableNames: 'value originTransfer destinationTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:57:53' prior: 50652867!
destinationTransfer
	^destinationTransfer.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 20:57:53' prior: 50652949!
initializeFor: aValue

    value := aValue.
    originTransfer := TransferWithdraw relatedTo: self.
    destinationTransfer := TransferDeposit relatedTo: self! !

TransferLegs subclass: #OriginTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #OriginTransfer category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 20:59:08'!
TransferLegs subclass: #OriginTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #OriginTransfer stamp: 'toto 10/24/2023 20:59:15'!
TransferLegs subclass: #OriginTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 21:00:35' prior: 50652872!
register: aValue from: anOriginAccount to: account2 
	
	| transaction |
	
	anOriginAccount = account2 ifTrue:[self error:'No se pueden hacer autotransferencias'].
	aValue <=0 ifTrue:[self error: 'Solamente se pueden hacer transferencias con montos positivos'].

    	transaction := self for: aValue.

    	anOriginAccount register: transaction originTransfer.
    	account2 register: transaction destinationTransfer.

    	^transaction
	
	! !
!Transfer class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 21:00:44' prior: 50652999!
register: aValue from: anOriginAccount to: anDestinationAccount 
	
	| transaction |
	
	anOriginAccount = anDestinationAccount ifTrue:[self error:'No se pueden hacer autotransferencias'].
	aValue <=0 ifTrue:[self error: 'Solamente se pueden hacer transferencias con montos positivos'].

    	transaction := self for: aValue.

    	anOriginAccount register: transaction originTransfer.
    	anDestinationAccount register: transaction destinationTransfer.

    	^transaction
	
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:01:37' prior: 50652844!
test01Transfer
	| originAccount account2 destinationTransfer transfer originTransfer |
	
	originAccount := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	
	transfer := Transfer register: 100 from:originAccount to:account2.
	
	originTransfer := transfer originTransfer.
	destinationTransfer := transfer destinationTransfer.
	
	self assert: 1 equals: originAccount transactions size .
	self assert: (originAccount transactions includes: originTransfer ).
	self assert: originAccount  balance equals: -100.
	
	self assert: 1 equals: account2 transactions size .
	self assert: (account2 transactions includes: destinationTransfer ).
	self assert: account2  balance equals: 100.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:01:43' prior: 50653035!
test01Transfer
	| originAccount destinationAccount destinationTransfer transfer originTransfer |
	
	originAccount := ReceptiveAccount new.
	destinationAccount:= ReceptiveAccount new.
	
	transfer := Transfer register: 100 from:originAccount to:destinationAccount.
	
	originTransfer := transfer originTransfer.
	destinationTransfer := transfer destinationTransfer.
	
	self assert: 1 equals: originAccount transactions size .
	self assert: (originAccount transactions includes: originTransfer ).
	self assert: originAccount  balance equals: -100.
	
	self assert: 1 equals: destinationAccount transactions size .
	self assert: (destinationAccount transactions includes: destinationTransfer ).
	self assert: destinationAccount  balance equals: 100.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:02:02' prior: 50651385!
test02CantTransferToSelf
	| anAccount |
	
	anAccount := ReceptiveAccount new.
	
	self should:[Transfer register: 100 from:anAccount to:anAccount.] raise: Error withMessageText: 'No se pueden hacer autotransferencias'.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:02:17' prior: 50651574!
test03ValueCantBeNegative

	| originAccount account2 |
	
	originAccount := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	self should:[Transfer register: -100 from:originAccount to:account2.] raise: Error withMessageText: 'Solamente se pueden hacer transferencias con montos positivos'.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:02:24' prior: 50651666!
test04ValueCantBeZero

	| originAccount account2 |
	
	originAccount := ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	
	self should:[Transfer register: 0 from:originAccount to:account2.] raise: Error withMessageText: 'Solamente se pueden hacer transferencias con montos positivos'.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:02:36' prior: 50653111!
test04ValueCantBeZero

	| originAccount destinationAccount |
	
	originAccount := ReceptiveAccount new.
	destinationAccount:= ReceptiveAccount new.
	
	self should:[Transfer register: 0 from:originAccount to:destinationAccount.] raise: Error withMessageText: 'Solamente se pueden hacer transferencias con montos positivos'.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:02:39' prior: 50653098!
test03ValueCantBeNegative

	| originAccount destinationAccount |
	
	originAccount := ReceptiveAccount new.
	destinationAccount:= ReceptiveAccount new.
	self should:[Transfer register: -100 from:originAccount to:destinationAccount.] raise: Error withMessageText: 'Solamente se pueden hacer transferencias con montos positivos'.
! !
!TransferDeposit class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 21:03:08' prior: 50651942!
from: aValue on: destinationAccount 
	| transferDeposit |
	
	transferDeposit:= self new initializeRegister: aValue on: destinationAccount.
	
	destinationAccount register: transferDeposit
	.
	
	^transferDeposit! !

!methodRemoval: TransferDeposit class #from:on: stamp: 'toto 10/24/2023 21:03:26'!
from: aValue on: destinationAccount 
	| transferDeposit |
	
	transferDeposit:= self new initializeRegister: aValue on: destinationAccount.
	
	destinationAccount register: transferDeposit
	.
	
	^transferDeposit!

!methodRemoval: TransferWithdraw class #from:on: stamp: 'toto 10/24/2023 21:03:29'!
from: aValue on: account1 

	| transferWithdraw |
	transferWithdraw:= self new initializeRegister: aValue on: account1.
	account1 register: transferWithdraw.
	^transferWithdraw 
	
	 !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:04:20' prior: 50652767!
test01ReportOfVirginReceptiveAccount
	| aReceptiveAccount |
	aReceptiveAccount := ReceptiveAccount new.
	
	
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:04:51' prior: 50653180!
test01ReportOfVirginReceptiveAccount
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: aReceptiveAccount accountSummary equals:{'Balance = 0'}.
	
	! !

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:04:52'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:05:00'!
accountSummary
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:05:12' prior: 50653199!
accountSummary
	^'Balance = 0'.! !

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:05:13'!
FAILURE!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:05:52' prior: 50653187!
test01ReportOfVirginReceptiveAccount
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: aReceptiveAccount accountSummary equals:'Balance = 0'.
	
	! !

!methodRemoval: ReportTest #test01xx stamp: 'toto 10/24/2023 21:05:54'!
test01xx
	!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:05:56'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:05:56'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:08:15'!
test01ReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: aReceptiveAccount accountSummary equals:'Deposito por 100',String crString,'Balance = 100' .
	
	! !

!testRun: #ReportTest #test01ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:08:16'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:09:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:09:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:09:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:09:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:09:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:09:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:09:27'!
PASSED!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 21:10:32'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:10:32' prior: 50652091!
test07AccountKnowsItsTransactions 

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 100 on: account1.
		
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: deposit1).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:10:32' prior: 50652024!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance .
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:10:32' prior: 50652035!
test04WithdrawValueMustBePositive 

	| account withdrawValue |
	
	account := ReceptiveAccount new.
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: account) value
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:10:32' prior: 50652067!
test08PortfolioTransactionsIncludesAllItsAccountsTransactions

	| account portfolio accountDeposit anotherAccount portfolioTransactions anotherAccountWithdraw |
	
	account := ReceptiveAccount new.
	accountDeposit := Deposit register: 100 on: account.
	anotherAccount := ReceptiveAccount new.
	anotherAccountWithdraw := Withdraw register: 100 on: account.
	portfolio := Portfolio with: account.
	
	portfolioTransactions := portfolio transactions.
	
	self assert: 2 equals: portfolioTransactions size.
	self assert: (portfolioTransactions includes: accountDeposit).
	self assert: (portfolioTransactions includes: anotherAccountWithdraw)! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:10:32' prior: 50652001!
test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortofolio |
	
	simplePortfolioAccount := ReceptiveAccount new.
	Deposit register: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	Withdraw register: 50 on: composedPortfolioAccount.
	composedPortofolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	self assert: (composedPortfolioAccount balance + simplePortfolio balance) equals: composedPortofolio balance! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:10:32' prior: 50652131!
test09PortfolioTransactionsAreCalculatedRecursively

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortfolio composedPortfolioAccountWithdraw simplePortfolioAccountDeposit composedPortfolioTransactions |
	
	simplePortfolioAccount := ReceptiveAccount new.
	simplePortfolioAccountDeposit := Deposit register: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	composedPortfolioAccountWithdraw := Withdraw register: 50 on: composedPortfolioAccount.
	composedPortfolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	composedPortfolioTransactions := composedPortfolio transactions.
	self assert: 2 equals: composedPortfolioTransactions size.
	self assert: (composedPortfolioTransactions includes: simplePortfolioAccountDeposit).
	self assert: (composedPortfolioTransactions includes: composedPortfolioAccountWithdraw)! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:10:32' prior: 50652058!
test02DepositIncreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
		
	self assert: 100 equals: account balance .
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:10:32' prior: 50652103!
test06PortfolioLooksForRegisteredTransactionsRecursively

	| simplePortfolioAccount simplePortfolio composedPortfolioAccount composedPortfolio composedPortfolioAccountWithdraw simplePortfolioAccountDeposit |
	
	simplePortfolioAccount := ReceptiveAccount new.
	simplePortfolioAccountDeposit := Deposit register: 100 on: simplePortfolioAccount.
	simplePortfolio := Portfolio with: simplePortfolioAccount.
	
	composedPortfolioAccount := ReceptiveAccount new.
	composedPortfolioAccountWithdraw := Withdraw register: 50 on: composedPortfolioAccount.
	composedPortfolio := Portfolio with: simplePortfolio with: composedPortfolioAccount.
	
	self assert: (composedPortfolio hasRegistered: simplePortfolioAccountDeposit).
	self assert: (composedPortfolio hasRegistered: composedPortfolioAccountWithdraw)! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:10:32' prior: 50651990!
test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance

	| account portfolio |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	self assert: account balance equals: portfolio balance! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:10:32' prior: 50652045!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	withdraw := Withdraw register: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:10:32' prior: 50651960!
test05PortfolioHasRegisteredItsAccountsTransactions

	| account portfolio deposit |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	portfolio := Portfolio with: account.
	
	self assert: (portfolio hasRegistered: deposit)! !

!methodRemoval: AccountTransaction class #from:on: stamp: 'toto 10/24/2023 21:10:32'!
from: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:10:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:10:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:10:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:10:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:10:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:10:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:10:38'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/24/2023 21:10:39'!
PASSED!

!testRun: #ReportTest #test01ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:10:41'!
FAILURE!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:10:41'!
PASSED!

!testRun: #ReportTest #test01ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:10:41'!
FAILURE!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 21:10:44'!
FAILURE!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 21:10:44'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 21:10:44'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 21:10:44'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 21:10:44'!
FAILURE!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 21:10:55'!
FAILURE!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 21:10:55'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 21:10:55'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 21:10:55'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 21:10:55'!
FAILURE!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 21:11:59'!
FAILURE!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 21:11:59'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 21:11:59'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 21:11:59'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 21:11:59'!
FAILURE!

originAccount  balance!

destinationAccount  balance!

destinationAccount!

transactions!

transaction affectBalance: currentBalance!

currentBalance!
!TransferDeposit methodsFor: 'balance' stamp: 'toto 10/24/2023 21:13:36' prior: 50652898 overrides: 50652691!
affectBalance: currentBalance 
	^transfer affectBalanceAsDestinationTransfer: currentBalance.! !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 21:13:37'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 21:13:46'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 21:13:46'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 21:13:46'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 21:13:46'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:13:57'!
test02ReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: aReceptiveAccount accountSummary equals:'Deposito por 100',String crString,'Balance = 100' .
	
	! !

!methodRemoval: ReportTest #test01ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:13:57'!
test01ReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: aReceptiveAccount accountSummary equals:'Deposito por 100',String crString,'Balance = 100' .
	
	!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:14:00'!
FAILURE!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:14:04'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:17:06' prior: 50653204!
accountSummary
	^(transactions collect:[:transaction|( transaction printTransaction, String crString)] )flatten.
	
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:17:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:17:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:17:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:17:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:17:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:17:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:17:08'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:17:15'!
FAILURE!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:17:15'!
ERROR!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:17:17'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:18:25' prior: 50653669!
accountSummary
	^((transactions collect:[:transaction|( transaction printTransaction, String crString)] ) add: 'Balance = ' ,self balance ;yourself)flatten
	
	
	! !

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:18:30'!
ERROR!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:18:30'!
ERROR!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:18:32'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:18:45' prior: 50653713!
accountSummary
	^((transactions collect:[:transaction|( transaction printTransaction, String crString)] ) add: 'Balance = ' ,self balance asString ;yourself)flatten
	
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:18:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:18:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:18:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:18:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:18:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:18:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:18:48'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 21:18:52'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 21:18:52'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 21:18:52'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 21:18:52'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:18:53'!
FAILURE!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:18:53'!
ERROR!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:18:55'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:19:18' prior: 50653731!
accountSummary
	^((transactions collect:[:transaction|( transaction printTransaction, String crString)] ) add: 'Balance = ' ,self balance asString ;yourself)flatten first
	
	
	! !

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:19:23'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:19:23'!
ERROR!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:19:23'!
ERROR!
!Deposit methodsFor: 'print' stamp: 'toto 10/24/2023 21:19:38'!
printTransaction
	self shouldBeImplemented.! !
!Deposit methodsFor: 'print' stamp: 'toto 10/24/2023 21:20:12' prior: 50653806!
printTransaction
	^'Deposito por ',value asString.! !

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:20:13'!
FAILURE!

aReceptiveAccount accountSummary!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:21:20' prior: 50653788!
accountSummary
	^((transactions collect:[:transaction|( transaction printTransaction, String crString)] ) add: 'Balance = ' ,self balance asString ;yourself)flatten asString.
	
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:21:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:21:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:21:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:21:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:21:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:21:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:21:21'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:21:25'!
FAILURE!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:21:25'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:24:33' prior: 50653820!
accountSummary

	| resultado |
	resultado := WriteStream new.
	^((transactions collect:[:transaction|( transaction printTransaction, String crString)] ) add: 'Balance = ' ,self balance asString ;yourself)flatten asString.
	
	
	
	
	
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:25:10' prior: 50653863!
accountSummary

	| resultado |
	resultado := WriteStream new.
	
	^((transactions do:[:transaction|(resultado nextPut:( transaction printTransaction, String crString))] ) add: 'Balance = ' ,self balance asString ;yourself)flatten.
	
	
	
	
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:25:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:25:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:25:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:25:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:25:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:25:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:25:11'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:25:14'!
ERROR!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:25:14'!
ERROR!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:25:16'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:25:32' prior: 50653874!
accountSummary

	| resultado |
	resultado := WriteStream with: String new..
	
	^((transactions do:[:transaction|(resultado nextPut:( transaction printTransaction, String crString))] ) add: 'Balance = ' ,self balance asString ;yourself)flatten.
	
	
	
	
	
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:25:33' prior: 50653922!
accountSummary

	| resultado |
	resultado := WriteStream with: String new.
	
	^((transactions do:[:transaction|(resultado nextPut:( transaction printTransaction, String crString))] ) add: 'Balance = ' ,self balance asString ;yourself)flatten.
	
	
	
	
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:25:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:25:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:25:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:25:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:25:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:25:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:25:34'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:25:37'!
FAILURE!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:25:37'!
ERROR!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:25:39'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:26:17' prior: 50653933!
accountSummary

	| resultado |
	resultado := WriteStream with: String new.
	
	((transactions do:[:transaction|(resultado nextPut:( transaction printTransaction, String crString))] ) nextPut: 'Balance = ' ,self balance asString )
	^resultado.
	
	
	
	
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:26:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:26:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:26:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:26:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:26:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:26:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:26:18'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:26:21'!
ERROR!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:26:21'!
ERROR!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:26:22'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:26:43' prior: 50653981!
accountSummary

	| resultado |
	resultado := WriteStream with: String new.
	
	((transactions do:[:transaction|(resultado nextPut:( transaction printTransaction, String crString))] ) )
	^resultado nextPut: 'Balance = ' ,self balance asString .
	
	
	
	
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:26:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:26:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:26:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:26:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:26:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:26:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:26:44'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:26:46'!
ERROR!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:26:46'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:26:53' prior: 50654029!
accountSummary

	| resultado |
	resultado := WriteStream with: String new.
	
	((transactions do:[:transaction|(resultado nextPut:( transaction printTransaction, String crString))] ) )
	^resultado nextPut: 'Balance = ' ,self balance asString ;yourself .
	
	
	
	
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:26:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:26:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:26:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:26:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:26:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:26:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:26:54'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:26:57'!
ERROR!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:26:57'!
ERROR!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:26:59'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:27:10' prior: 50654074!
accountSummary

	| resultado |
	resultado := WriteStream with: String new.
	
	((transactions do:[:transaction|(resultado nextPut:( transaction printTransaction, String crString))] ) ).
	^resultado nextPut: 'Balance = ' ,self balance asString ;yourself .
	
	
	
	
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:27:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:27:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:27:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:27:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:27:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:27:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:27:11'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:27:14'!
ERROR!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:27:14'!
ERROR!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:27:16'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:27:40' prior: 50654122!
accountSummary

	| resultado |
	resultado := WriteStream with: String new.
	
	((transactions do:[:transaction|(resultado nextPutAll:( transaction printTransaction, String crString))] ) ).
	^resultado nextPutAll: 'Balance = ' ,self balance asString .
	
	
	
	
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:27:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:27:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:27:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:27:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:27:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:27:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:27:41'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:27:46'!
FAILURE!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:27:46'!
FAILURE!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:27:47'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:28:04' prior: 50654170!
accountSummary

	| resultado |
	resultado := WriteStream with: String new.
	
	((transactions do:[:transaction|(resultado nextPutAll:( transaction printTransaction, String crString))] ) ).
	^(resultado nextPutAll: 'Balance = ' ,self balance asString) contents.
	
	
	
	
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:28:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:28:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:28:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:28:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:28:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:28:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:28:05'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:28:09'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:28:09'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:28:33'!
test03ReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: aReceptiveAccount accountSummary equals:'Extraccion por 100',String crString,'Balance = -100' .
	
	! !

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:28:34'!
ERROR!
!Withdraw methodsFor: 'print' stamp: 'toto 10/24/2023 21:28:38'!
printTransaction
	self shouldBeImplemented.! !
!Withdraw methodsFor: 'print' stamp: 'toto 10/24/2023 21:28:56' prior: 50654279!
printTransaction
	^'Extracion por ', value asString! !

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:28:58'!
FAILURE!
!Withdraw methodsFor: 'print' stamp: 'toto 10/24/2023 21:29:30' prior: 50654283!
printTransaction
	^'Extraccion por ', value asString! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:29:32'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:29:37'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:29:37'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:29:37'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:29:40'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:30:20'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:30:22'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:30:22'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:30:39'!
test04ReportOfReceptiveAccountWithTransaction
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: aReceptiveAccount accountSummary equals:'Extraccion por 100',String crString,'Balance = -100' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:30:52'!
test04ReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: aReceptiveAccount accountSummary equals:'Extraccion por 100',String crString,'Balance = -100' .
	
	! !

!methodRemoval: ReportTest #test04ReportOfReceptiveAccountWithTransaction stamp: 'toto 10/24/2023 21:30:52'!
test04ReportOfReceptiveAccountWithTransaction
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: aReceptiveAccount accountSummary equals:'Extraccion por 100',String crString,'Balance = -100' .
	
	!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:31:08' prior: 50654700!
test04ReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	self assert: aReceptiveAccount accountSummary equals:'Extraccion por 100',String crString,'Balance = -100' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:31:22' prior: 50654724!
test04ReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	self assert: aReceptiveAccount accountSummary equals:'Extraccion por 100',String crString,'Balance = -100' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:31:32' prior: 50654738!
test04ReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: aReceptiveAccount accountSummary equals:'Extraccion por 100',String crString,'Balance = -100' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:32:27' prior: 50654753!
test04ReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: aReceptiveAccount accountSummary equals:'Salida por transferncia de 100',String crString,'Balance = -100' .
	self assert: anotherReceptiveAccount accountSummary equals:'Entrada por transferencia de 100',String crString,'Balance = 100' .
	! !

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 21:32:29'!
ERROR!
!TransferWithdraw methodsFor: 'print' stamp: 'toto 10/24/2023 21:32:35'!
printTransaction
	self shouldBeImplemented.! !
!TransferWithdraw methodsFor: 'print' stamp: 'toto 10/24/2023 21:33:01' prior: 50654792!
printTransaction
	^'Salida por transferencia de ', transfer value asString.! !

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 21:33:03'!
FAILURE!

aReceptiveAccount accountSummary!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:33:22' prior: 50654769!
test04ReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: aReceptiveAccount accountSummary equals:'Salida por transferencia de 100',String crString,'Balance = -100' .
	self assert: anotherReceptiveAccount accountSummary equals:'Entrada por transferencia de 100',String crString,'Balance = 100' .
	! !

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 21:33:24'!
ERROR!
!TransferDeposit methodsFor: 'print' stamp: 'toto 10/24/2023 21:33:28'!
printTransaction
	self shouldBeImplemented.! !
!TransferDeposit methodsFor: 'print' stamp: 'toto 10/24/2023 21:33:44' prior: 50654831!
printTransaction
	^'Entrada por transferencia de ', transfer value asString.! !

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 21:33:45'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:33:45'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:33:45'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:33:45'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 21:33:45'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:34:01'!
test05ReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: aReceptiveAccount accountSummary equals:'Salida por transferencia de 100',String crString,'Balance = -100' .
	self assert: anotherReceptiveAccount accountSummary equals:'Entrada por transferencia de 100',String crString,'Balance = 100' .
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:34:38' prior: 50654858!
test05ReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: aReceptiveAccount accountSummary equals:'Salida por transferencia de 100',String crString,'Deposito por 100',String crString,'Balance = -100' .
	
	! !

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 21:34:39'!
FAILURE!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:34:53' prior: 50654878!
test05ReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: aReceptiveAccount accountSummary equals:'Salida por transferencia de 100',String crString,'Deposito por 100',String crString,'Balance = 0' .
	
	! !

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 21:34:54'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:34:54'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:34:54'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:34:54'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 21:34:54'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 21:34:54'!
PASSED!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:36:05' prior: 50654219!
accountSummary

	| resultado |
	resultado := WriteStream with: String new.
	
	((transactions do:[:transaction|(resultado nextPutAll:( transaction printTransaction, String crString))])).
	^(resultado nextPutAll: 'Balance = ' ,self balance asString) contents.
	
	
	
	
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:38:55'!
test06ReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio new.
	self assert: portfolio accountSummary equals:'Balance = 0' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:38:58' prior: 50654953!
test06ReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio new.
	self assert: portfolio accountSummary equals:'Balance = 0' .
	
	! !

!testRun: #ReportTest #test06ReportOfEmptyPortfolio stamp: 'toto 10/24/2023 21:38:59'!
ERROR!

!testRun: #ReportTest #test06ReportOfEmptyPortfolio stamp: 'toto 10/24/2023 21:39:04'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'toto 10/24/2023 21:39:11'!
accountSummary
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'report' stamp: 'toto 10/24/2023 21:39:15' prior: 50654974!
accountSummary
	! !
!Portfolio methodsFor: 'report' stamp: 'toto 10/24/2023 21:39:25' prior: 50654978!
accountSummary
	^'Balance = 0'! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/24/2023 21:39:26'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 21:39:29'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 21:39:29'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 21:39:29'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 21:39:29'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:39:30'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:39:30'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:39:30'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 21:39:30'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 21:39:30'!
PASSED!

!testRun: #ReportTest #test06ReportOfEmptyPortfolio stamp: 'toto 10/24/2023 21:39:30'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:39:48'!
test07ReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio new.
	self assert: portfolio accountSummary equals:'Balance = 0' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:40:06' prior: 50655076!
test07ReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio new.
	portfolio add: ReceptiveAccount new.
	self assert: portfolio accountSummary equals:'Balance = 0' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:40:37' prior: 50655084!
test07ReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio new.
	portfolio add: ReceptiveAccount new.
	self assert: portfolio accountSummary equals: 'Balance = 0'.
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:41:25' prior: 50655094!
test07ReportOfPortfolioWithOneReceptiveAccount
	| portfolio receptiveAccount |
	portfolio:= Portfolio new.
	receptiveAccount := ReceptiveAccount new.
	portfolio add: receptiveAccount.
	
	self assert: portfolio accountSummary equals: 'Balance = 0'.
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:42:03' prior: 50655104!
test07ReportOfPortfolioWithOneReceptiveAccount
	| portfolio receptiveAccount |
	portfolio:= Portfolio new.
	receptiveAccount := ReceptiveAccount new.
	Deposit register:100 on:receptiveAccount .
	portfolio add: receptiveAccount.
	
	self assert: portfolio accountSummary equals: 'Balance = 0'.
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:42:27' prior: 50655115!
test07ReportOfPortfolioWithOneReceptiveAccount
	| portfolio receptiveAccount |
	portfolio:= Portfolio new.
	receptiveAccount := ReceptiveAccount new.
	Deposit register:100 on:receptiveAccount .
	portfolio add: receptiveAccount.
	
	self assert: portfolio accountSummary equals: receptiveAccount accountSummary .
	
	! !

!testRun: #ReportTest #test07ReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 21:42:28'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'toto 10/24/2023 21:43:07' prior: 50654982!
accountSummary
	^accounts do:[].! !
!Portfolio methodsFor: 'report' stamp: 'toto 10/24/2023 21:44:29' prior: 50655145!
accountSummary
	^accounts do:[:account | ].! !
!Portfolio methodsFor: 'report' stamp: 'toto 10/24/2023 21:45:46' prior: 50655149!
accountSummary
	! !

!methodRemoval: Portfolio #accountSummary stamp: 'toto 10/24/2023 21:47:13'!
accountSummary
	!

!methodRemoval: ReportTest #test07ReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 21:47:20'!
test07ReportOfPortfolioWithOneReceptiveAccount
	| portfolio receptiveAccount |
	portfolio:= Portfolio new.
	receptiveAccount := ReceptiveAccount new.
	Deposit register:100 on:receptiveAccount .
	portfolio add: receptiveAccount.
	
	self assert: portfolio accountSummary equals: receptiveAccount accountSummary .
	
	!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 21:50:21'!
Object subclass: #AccountSummaryReport
	instanceVariableNames: 'dontUse account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:50:21'!
m1: aTransactions for: aSelf
	^self new initializeM1: aTransactions for: aSelf! !
!AccountSummaryReport methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:50:21'!
initializeM1: aTransactions for: aSelf
	dontUse := aTransactions.
	account := aSelf.! !
!AccountSummaryReport methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:50:21'!
apply

	| resultado |
	resultado := WriteStream with: String new.
	
	((dontUse do:[:transaction|(resultado nextPutAll:( transaction printTransaction, String crString))])).
	^(resultado nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:50:21' prior: 50654941!
accountSummary
	^(AccountSummaryReport m1: transactions for: self) apply! !
!AccountSummaryReport methodsFor: 'initialization' stamp: 'toto 10/24/2023 21:50:36' prior: 50655189!
initializeM1: aTransactions for: aSelf

	dontUse := aTransactions.
	account := aSelf.! !

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:50:41'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:50:41'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:50:41'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 21:50:41'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 21:50:41'!
PASSED!

!testRun: #ReportTest #test06ReportOfEmptyPortfolio stamp: 'toto 10/24/2023 21:50:41'!
ERROR!

!testRun: #ReportTest #test06ReportOfEmptyPortfolio stamp: 'toto 10/24/2023 21:50:41'!
ERROR!

!methodRemoval: ReportTest #test06ReportOfEmptyPortfolio stamp: 'toto 10/24/2023 21:50:51'!
test06ReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio new.
	self assert: portfolio accountSummary equals:'Balance = 0' .
	
	!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:50:55'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:50:55'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:50:55'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 21:50:55'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 21:50:55'!
PASSED!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/24/2023 21:52:56' prior: 50655195!
apply

	| resultado |
	resultado := WriteStream with: String new.
	account withTransactionsDo:[:transaction|(resultado nextPutAll:( transaction printTransaction, String crString))].
	^(resultado nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:54:13'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:54:13'!
ERROR!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:54:13'!
ERROR!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:54:13'!
ERROR!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 21:54:13'!
ERROR!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 21:54:13'!
ERROR!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:54:16'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'toto 10/24/2023 21:54:27'!
withTransactionsDo: aRenameMe1 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'toto 10/24/2023 21:55:10' prior: 50655385!
withTransactionsDo: aOneArgBlock
	transactions do:aOneArgBlock. 
	! !

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:55:12'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:55:14'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:55:15'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 21:55:15'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 21:55:15'!
PASSED!
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:56:50' prior: 50655207!
accountSummary
	^(AccountSummaryReport m1: transactions) apply! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'toto 10/24/2023 21:56:57' prior: 50655413!
accountSummary
	^(AccountSummaryReport  for: self) apply! !
!AccountSummaryReport class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 21:57:15' prior: 50655183!
m1: aTransactions for: aSelf
	^self new initializeFor: aSelf! !
!AccountSummaryReport methodsFor: 'initialization' stamp: 'toto 10/24/2023 21:57:30'!
initializeFor: aSelf

	
	account := aSelf.! !

Object subclass: #AccountSummaryReport
	instanceVariableNames: ' account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 21:57:35'!
Object subclass: #AccountSummaryReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!methodRemoval: AccountSummaryReport #initializeM1:for: stamp: 'toto 10/24/2023 21:57:40'!
initializeM1: aTransactions for: aSelf

	dontUse := aTransactions.
	account := aSelf.!
!AccountSummaryReport class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 21:57:47'!
for: aSelf
	^self new initializeFor: aSelf! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/24/2023 21:57:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/24/2023 21:57:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/24/2023 21:57:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/24/2023 21:57:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/24/2023 21:57:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/24/2023 21:57:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/24/2023 21:57:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/24/2023 21:57:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/24/2023 21:57:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/24/2023 21:57:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/24/2023 21:57:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/24/2023 21:57:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/24/2023 21:57:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 21:57:51'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 21:57:56'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 21:57:56'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 21:57:56'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 21:57:56'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 21:57:56'!
PASSED!

!methodRemoval: ReceptiveAccount #accountSummary stamp: 'toto 10/24/2023 21:58:17'!
accountSummary
	^(AccountSummaryReport  for: self) apply!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:58:17' prior: 50653212!
test01ReportOfVirginReceptiveAccount
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Balance = 0'.
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:58:17' prior: 50654808!
test04ReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Salida por transferencia de 100',String crString,'Balance = -100' .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:'Entrada por transferencia de 100',String crString,'Balance = 100' .
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:58:17' prior: 50653639!
test02ReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Deposito por 100',String crString,'Balance = 100' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:58:17' prior: 50654901!
test05ReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Salida por transferencia de 100',String crString,'Deposito por 100',String crString,'Balance = 0' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:58:17' prior: 50654264!
test03ReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Extraccion por 100',String crString,'Balance = -100' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:59:23'!
test06AccountSummaryReportOfEmptyPortfolio
	
	| aPortfolio |
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Salida por transferencia de 100',String crString,'Deposito por 100',String crString,'Balance = 0' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:59:31' prior: 50655657!
test06AccountSummaryReportOfEmptyPortfolio
	
	| aPortfolio |
	aPortfolio := Portfolio new.
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Salida por transferencia de 100',String crString,'Deposito por 100',String crString,'Balance = 0' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 21:59:37' prior: 50655668!
test06AccountSummaryReportOfEmptyPortfolio
	
	| aPortfolio |
	aPortfolio := Portfolio new.
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Balance = 0' .
	
	! !

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 21:59:39'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:00:59'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:00:59'!
ERROR!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:00:59'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'toto 10/24/2023 22:01:05'!
withTransactionsDo: aRenameMe1 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'transactions' stamp: 'toto 10/24/2023 22:01:43' prior: 50655802!
withTransactionsDo: aOneArgBlock 
	accounts do:[:account| account withTransactionsDo: aOneArgBlock ].! !

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:01:45'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:01:49'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:01:49'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:01:49'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:01:49'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:01:49'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:01:49'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:02:02'!
test06AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio |
	aPortfolio := Portfolio new.
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Balance = 0' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:02:29' prior: 50655838!
test06AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Balance = 0' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:03:18' prior: 50655848!
test06AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100' ,String crString,'Balance = 0' .
	
	! !

!testRun: #ReportTest #test06AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:03:19'!
FAILURE!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/24/2023 22:04:09' prior: 50655267!
apply

	| resultado |
	resultado := WriteStream with: String new.
	account withTransactionsDo:[:transaction|(resultado nextPutAll:( transaction printTransaction, String crString))].
	
	^(resultado nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'toto 10/24/2023 22:05:02' prior: 50655390!
withTransactionsDo: aOneArgBlock
self halt.
	transactions do:aOneArgBlock. 
	! !

!testRun: #ReportTest #test06AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:05:08'!
FAILURE!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:05:31' prior: 50655861!
test06AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100' ,String crString,'Balance = 0' .
	
	! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'toto 10/24/2023 22:05:39' prior: 50655891!
withTransactionsDo: aOneArgBlock

	transactions do:aOneArgBlock. 
	! !

!testRun: #ReportTest #test06AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:05:40'!
FAILURE!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:05:50' prior: 50655901!
test06AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100' ,String crString,'Balance = 100' .
	
	! !

!testRun: #ReportTest #test06AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:05:51'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:05:51'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:05:51'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:05:51'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:05:51'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:05:51'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:05:51'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:05:51'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:06:03'!
test06AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100' ,String crString,'Balance = 100' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:06:21' prior: 50655970!
test06AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100' ,String crString,'Balance = 100' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:06:51' prior: 50655986!
test06AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100' ,String crString,'Balance = 100' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:07:00' prior: 50656004!
test06AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100' ,String crString,'Balance = 100' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:07:16' prior: 50656024!
test06AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,'Balance = 100' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:07:21' prior: 50656045!
test06AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,'Balance = 0' .
	
	! !

!testRun: #ReportTest #test06AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:07:22'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:07:22'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:07:22'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:07:22'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:07:22'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:07:22'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:07:22'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:07:22'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:07:22'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:07:32'!
test07AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,'Balance = 0' .
	
	! !

!methodRemoval: ReportTest #test06AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:07:32'!
test06AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,'Balance = 0' .
	
	!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:08:47'!
test08AccountSummaryReportOfPortfolioWithMoreThanOnePortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,'Balance = 0' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:09:09' prior: 50656166!
test08AccountSummaryReportOfPortfolioWithMoreThanOnePortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount anotherPortfolio |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	.
	
	anotherPortfolio add: anotherReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,'Balance = 0' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:09:45' prior: 50656188!
test08AccountSummaryReportOfPortfolioWithMoreThanOnePortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount anotherPortfolio aThirdReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	.
	anotherPortfolio := Portfolio new.
	anotherPortfolio add: anotherReceptiveAccount.
	
	aThirdReceptiveAccount:= ReceptiveAccount new.
	
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,'Balance = 0' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:12:20' prior: 50656211!
test08AccountSummaryReportOfPortfolioWithMoreThanOnePortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount anotherPortfolio aThirdReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	.
	anotherPortfolio := Portfolio new.
	anotherPortfolio add: anotherReceptiveAccount.
	
	aThirdReceptiveAccount:= ReceptiveAccount new.
	Transfer register: 100 from: aReceptiveAccount to: aThirdReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,'Balance = 0' .
	
	! !
!Portfolio methodsFor: 'transactions' stamp: 'toto 10/24/2023 22:15:01' prior: 50655807!
withTransactionsDo: aOneArgBlock 

	accounts do:[:account| account withTransactionsDo: aOneArgBlock ].! !

!methodRemoval: ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOnePortfolio stamp: 'toto 10/24/2023 22:15:08'!
test08AccountSummaryReportOfPortfolioWithMoreThanOnePortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount anotherPortfolio aThirdReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	.
	anotherPortfolio := Portfolio new.
	anotherPortfolio add: anotherReceptiveAccount.
	
	aThirdReceptiveAccount:= ReceptiveAccount new.
	Transfer register: 100 from: aReceptiveAccount to: aThirdReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,'Balance = 0' .
	
	!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:15:14'!
test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100' ,String crString,'Balance = 100' .
	
	! !

!methodRemoval: ReportTest #test06AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:15:14'!
test06AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100' ,String crString,'Balance = 100' .
	
	!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:15:19'!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,'Balance = 0' .
	
	! !

!methodRemoval: ReportTest #test07AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:15:19'!
test07AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,'Balance = 0' .
	
	!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:16:06'!
AAAtest09AccountSummaryOfPortfolioWithPortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,'Balance = 0' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:16:43'!
test09TransferNetReportOfReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,'Balance = 0' .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:16:52' prior: 50656396!
test09TransferNetReportOfReceptiveAccount
	
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Balance = 0'.
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:16:57'!
test09TransferNetReportOfvirginReceptiveAccount
	
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Balance = 0'.
	
	! !

!methodRemoval: ReportTest #test09TransferNetReportOfReceptiveAccount stamp: 'toto 10/24/2023 22:16:57'!
test09TransferNetReportOfReceptiveAccount
	
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Balance = 0'.
	
	!

!classDefinition: #TransferNetReport category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 22:17:19'!
Object subclass: #TransferNetReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:17:16' prior: 50656427!
test09TransferNetReportOfvirginReceptiveAccount
	
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals:0.
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:17:30' prior: 50656455!
test09TransferNetReportOfvirginReceptiveAccount
	
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals:0
	.
	
	! !

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:17:30'!
ERROR!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:17:35'!
ERROR!
!TransferNetReport class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 22:17:42'!
for: aReceptiveAccount 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aReceptiveAccount ! !
!TransferNetReport class methodsFor: 'instance creation' stamp: 'toto 10/24/2023 22:17:48' prior: 50656482!
for: aReceptiveAccount 
	^self new initializeFor: aReceptiveAccount ! !

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:17:49'!
ERROR!

!classDefinition: #TransferNetReport category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 22:17:56'!
Object subclass: #TransferNetReport
	instanceVariableNames: 'receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReport methodsFor: 'initialize' stamp: 'toto 10/24/2023 22:17:56'!
initializeFor: aReceptiveAccount 
	self shouldBeImplemented.
	receptiveAccount := aReceptiveAccount.! !
!TransferNetReport methodsFor: 'initialize' stamp: 'toto 10/24/2023 22:18:01' prior: 50656508!
initializeFor: aReceptiveAccount 
	receptiveAccount := aReceptiveAccount.! !

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:18:04'!
ERROR!
!TransferNetReport methodsFor: 'apply' stamp: 'toto 10/24/2023 22:18:10'!
apply
	self shouldBeImplemented.! !
!TransferNetReport methodsFor: 'apply' stamp: 'toto 10/24/2023 22:18:16' prior: 50656524!
apply
	^0.! !

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:18:17'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:18:17'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:18:17'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:18:17'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:18:17'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:18:17'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:18:17'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:18:17'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:18:17'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:18:17'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:18:38'!
test10TransferNetReportOfReceptiveAccountWithOneTransfer
	
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals:0
	.
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:18:50' prior: 50656568!
test10TransferNetReportOfReceptiveAccountWithOneTransfer
	
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals:0
	.
	
	! !

100!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:19:41' prior: 50656578!
test10TransferNetReportOfReceptiveAccountWithOneTransfer
	
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	
	Transfer register: 100 from:ReceptiveAccount to:anotherReceptiveAccount.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals:-100.
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals:100.
	.
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:19:49' prior: 50656591!
test10TransferNetReportOfReceptiveAccountWithOneTransfer
	
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	
	Transfer register: 100 from:ReceptiveAccount to:anotherReceptiveAccount.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals: -100.
	self assert: ((TransferNetReport  for: anotherReceptiveAccount ) apply) equals:100.
	.
	
	! !

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:19:51'!
ERROR!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:20:01' prior: 50656608!
test10TransferNetReportOfReceptiveAccountWithOneTransfer
	
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to:anotherReceptiveAccount.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals: -100.
	self assert: ((TransferNetReport  for: anotherReceptiveAccount ) apply) equals:100.
	.
	
	! !

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:20:02'!
FAILURE!
!TransferNetReport methodsFor: 'apply' stamp: 'toto 10/24/2023 22:20:30' prior: 50656528!
apply
	^receptiveAccount balance.! !

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:20:31'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:20:31'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:20:31'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:20:31'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:20:31'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:20:31'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:20:31'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:20:31'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:20:31'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:20:31'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:22:04'!
test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions
	
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to:anotherReceptiveAccount.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals: -100.
	self assert: ((TransferNetReport  for: anotherReceptiveAccount ) apply) equals:100.
	.
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:22:41' prior: 50656692!
test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions
	
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	
	Deposit register:100 on: aReceptiveAccount.
	Withdraw register: 99 on: aReceptiveAccount.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals: 1.
	
	.
	
	! !

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:22:43'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:22:43'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:22:43'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:22:43'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:22:43'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:22:43'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:22:43'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:22:43'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:22:43'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:22:43'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:22:43'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:22:43'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:22:54' prior: 50656711!
test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions
	
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	
	Deposit register:100 on: aReceptiveAccount.
	Withdraw register: 99 on: aReceptiveAccount.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals: 0.
	
	.
	
	! !

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:22:55'!
FAILURE!
!TransferNetReport methodsFor: 'apply' stamp: 'toto 10/24/2023 22:24:24' prior: 50656651!
apply
	| res |
	res:= 0
	^receptiveAccount withTransactionsDo:[:transaction| ].! !
!TransferNetReport methodsFor: 'apply' stamp: 'toto 10/24/2023 22:24:27' prior: 50656790!
apply
	| res |
	res:= 0.
	^receptiveAccount withTransactionsDo:[:transaction| ].! !
!TransferNetReport methodsFor: 'apply' stamp: 'toto 10/24/2023 22:24:53' prior: 50656796!
apply
	| res |
	res:= 0.
	
	^receptiveAccount withTransactionsDo:[:transaction| res:=res].! !
!TransferNetReport methodsFor: 'apply' stamp: 'toto 10/24/2023 22:24:57' prior: 50656802!
apply
	| balane |
	balane:= 0.
	
	^receptiveAccount withTransactionsDo:[:transaction| balane:=balane].! !
!TransferNetReport methodsFor: 'apply' stamp: 'toto 10/24/2023 22:25:06' prior: 50656808!
apply
	| balance |
	balance:= 0.
	
	^receptiveAccount withTransactionsDo:[:transaction| balance:=balance].! !
!TransferNetReport methodsFor: 'apply' stamp: 'toto 10/24/2023 22:25:32' prior: 50656815!
apply
	| balance |
	balance:= 0.
	
	^receptiveAccount withTransactionsDo:[:transaction| transaction affectBalanceIfTransfer: balance].! !

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:25:35'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:25:35'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:25:35'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:25:35'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:25:35'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:25:35'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:25:35'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:25:35'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:25:35'!
FAILURE!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:25:35'!
ERROR!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:25:35'!
ERROR!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:25:36'!
FAILURE!
!TransferNetReport methodsFor: 'apply' stamp: 'toto 10/24/2023 22:26:00' prior: 50656822!
apply
	| balance |
	balance:= 0.
	
	receptiveAccount withTransactionsDo:[:transaction| transaction affectBalanceIfTransfer: balance].
	^balance.! !

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:26:01'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:26:01'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:26:01'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:26:01'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:26:01'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:26:01'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:26:01'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:26:01'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:26:01'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:26:01'!
ERROR!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:26:01'!
ERROR!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:26:03'!
ERROR!
!TransferWithdraw methodsFor: 'balance' stamp: 'toto 10/24/2023 22:26:07'!
affectBalanceIfTransfer: balance 
	self shouldBeImplemented.! !
!TransferWithdraw methodsFor: 'balance' stamp: 'toto 10/24/2023 22:26:17' prior: 50656927!
affectBalanceIfTransfer: balance 
	self affectBalance: balance.! !
!TransferWithdraw methodsFor: 'balance' stamp: 'toto 10/24/2023 22:26:19' prior: 50656932!
affectBalanceIfTransfer: balance 
	^self affectBalance: balance.! !

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:26:20'!
FAILURE!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/24/2023 22:26:35'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/24/2023 22:26:35'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/24/2023 22:26:35'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/24/2023 22:26:35'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:26:37'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:26:37'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:26:37'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:26:37'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:26:37'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:26:37'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:26:37'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:26:37'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:26:37'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:26:37'!
FAILURE!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:26:37'!
ERROR!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:26:43'!
FAILURE!
!TransferNetReport methodsFor: 'apply' stamp: 'toto 10/24/2023 22:27:54' prior: 50656874!
apply
	| balance |
	balance:= 0.
	
	receptiveAccount withTransactionsDo:[:transaction| transaction affectBalanceIfTransfer: balance].
	
	^balance.! !

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:27:55'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:27:55'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:27:55'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:27:55'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:27:55'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:27:55'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:27:55'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:27:55'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:27:55'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:27:55'!
FAILURE!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:27:55'!
ERROR!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:27:56'!
FAILURE!

(TransferNetReport  for: aReceptiveAccount) apply!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:28:17'!
ERROR!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:28:18'!
ERROR!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:28:19'!
FAILURE!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:28:26'!
FAILURE!
!TransferNetReport methodsFor: 'apply' stamp: 'toto 10/24/2023 22:28:51' prior: 50657003!
apply
	| balance |
	balance:= 0.
	
	receptiveAccount withTransactionsDo:[:transaction|balance:=  transaction affectBalanceIfTransfer: balance].
	
	^balance.! !

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:28:52'!
ERROR!
!TransferDeposit methodsFor: 'balance' stamp: 'toto 10/24/2023 22:28:56'!
affectBalanceIfTransfer: balance 
	self shouldBeImplemented.! !
!TransferDeposit methodsFor: 'balance' stamp: 'toto 10/24/2023 22:29:02' prior: 50657085!
affectBalanceIfTransfer: balance 
	^self affectBalance: balance.! !

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:29:03'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:29:04'!
ERROR!
!Deposit methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:29:08'!
affectBalanceIfTransfer: balance 
	self shouldBeImplemented.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:29:12' prior: 50657104!
affectBalanceIfTransfer: balance 
	! !

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:29:13'!
ERROR!
!Withdraw methodsFor: 'balance' stamp: 'toto 10/24/2023 22:29:18'!
affectBalanceIfTransfer: balance 
	self shouldBeImplemented.! !
!Withdraw methodsFor: 'balance' stamp: 'toto 10/24/2023 22:29:21' prior: 50657117!
affectBalanceIfTransfer: balance 
	! !

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:29:21'!
FAILURE!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:29:34' prior: 50656771!
test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions
	
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	
	Deposit register:100 on: aReceptiveAccount.
	Withdraw register: 99 on: aReceptiveAccount.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals: 0.
	
	
	
	! !

!methodRemoval: Deposit #affectBalanceIfTransfer: stamp: 'toto 10/24/2023 22:29:45'!
affectBalanceIfTransfer: balance 
	!
!AccountTransaction methodsFor: 'balance' stamp: 'toto 10/24/2023 22:29:49'!
affectBalanceIfTransfer: balance 
	! !

!methodRemoval: Withdraw #affectBalanceIfTransfer: stamp: 'toto 10/24/2023 22:29:49'!
affectBalanceIfTransfer: balance 
	!
!AccountTransaction methodsFor: 'balance' stamp: 'toto 10/24/2023 22:29:54' prior: 50657148!
affectBalanceIfTransfer: balance 
	^balance.! !

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:29:59'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:29:59'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:29:59'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:29:59'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:29:59'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:29:59'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:29:59'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:29:59'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:29:59'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:29:59'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:29:59'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:31:04'!
test12TransferNetReportOfReceptiveWithMoreThanOneTransfer
	
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	
	Deposit register:100 on: aReceptiveAccount.
	Withdraw register: 99 on: aReceptiveAccount.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals: 0.
	
	
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:31:34' prior: 50657202!
test12TransferNetReportOfReceptiveWithMoreThanOneTransfer
	
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to:anotherReceptiveAccount.
	Transfer register: 99 from: anotherReceptiveAccount to: aReceptiveAccount.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals: -1.
	self assert: ((TransferNetReport  for: anotherReceptiveAccount ) apply) equals:1.
	
	
	
	! !

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/24/2023 22:31:34'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:31:35'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:31:35'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:31:35'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:31:35'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:31:35'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:31:35'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:31:35'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:31:35'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:31:35'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:31:35'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:31:35'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/24/2023 22:31:35'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:31:55'!
test12TransferNetReportOfEmptyPortfolio
	
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to:anotherReceptiveAccount.
	Transfer register: 99 from: anotherReceptiveAccount to: aReceptiveAccount.
	
	self assert: ((TransferNetReport  for: aReceptiveAccount) apply) equals: -1.
	self assert: ((TransferNetReport  for: anotherReceptiveAccount ) apply) equals:1.
	
	
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:32:10' prior: 50657284!
test12TransferNetReportOfEmptyPortfolio
	
	
	
	
	self assert: ((TransferNetReport  for: Portfolio new) apply) equals: 0.
	
	
	
	
	! !

!testRun: #ReportTest #test12TransferNetReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:32:11'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:32:11'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:32:11'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:32:11'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:32:11'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:32:11'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:32:11'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:32:11'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:32:11'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:32:11'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:32:11'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:32:11'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:32:11'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/24/2023 22:32:11'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:32:20'!
test13TransferNetReportOfEmptyPortfolio
	
	
	
	
	self assert: ((TransferNetReport  for: Portfolio new) apply) equals: 0.
	
	
	
	
	! !

!methodRemoval: ReportTest #test12TransferNetReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:32:21'!
test12TransferNetReportOfEmptyPortfolio
	
	
	
	
	self assert: ((TransferNetReport  for: Portfolio new) apply) equals: 0.
	
	
	
	
	!

!methodRemoval: ReportTest #test13TransferNetReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:33:01'!
test13TransferNetReportOfEmptyPortfolio
	
	
	
	
	self assert: ((TransferNetReport  for: Portfolio new) apply) equals: 0.
	
	
	
	
	!

Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Report category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 22:33:58'!
Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #AccountReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReport category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 22:34:06'!
Object subclass: #AccountReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Report stamp: 'toto 10/24/2023 22:34:11'!
Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountReport subclass: #TransferNetReport
	instanceVariableNames: 'receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReport category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 22:34:27'!
AccountReport subclass: #TransferNetReport
	instanceVariableNames: 'receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountReport subclass: #AccountSummaryReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 22:35:05'!
AccountReport subclass: #AccountSummaryReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReport category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 22:35:12'!
AccountReport subclass: #TransferNetReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReport methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:35:12' prior: 50657073!
apply
	| balance |
	balance:= 0.
	
	account withTransactionsDo:[:transaction|balance:=  transaction affectBalanceIfTransfer: balance].
	
	^balance.! !
!TransferNetReport methodsFor: 'as yet unclassified' stamp: 'toto 10/24/2023 22:35:12' prior: 50656515!
initializeFor: aReceptiveAccount 
	account := aReceptiveAccount.! !

!classDefinition: #TransferNetReport category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 22:35:20'!
AccountReport subclass: #TransferNetReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 22:35:20'!
AccountReport subclass: #AccountSummaryReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReport category: 'Portfolio-Solucion' stamp: 'toto 10/24/2023 22:35:21'!
Object subclass: #AccountReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReport methodsFor: 'initialize' stamp: 'toto 10/24/2023 22:35:28'!
initializeFor: aReceptiveAccount 
	account := aReceptiveAccount.! !

!methodRemoval: TransferNetReport #initializeFor: stamp: 'toto 10/24/2023 22:35:28'!
initializeFor: aReceptiveAccount 
	account := aReceptiveAccount.!
!AccountReport methodsFor: 'apply' stamp: 'toto 10/24/2023 22:35:33'!
apply

	self subclassResponsibility! !

!methodRemoval: AccountSummaryReport #initializeFor: stamp: 'toto 10/24/2023 22:35:41'!
initializeFor: aSelf

	
	account := aSelf.!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:35:49'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:35:49'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:35:49'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:35:49'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:35:49'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:35:49'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:35:49'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:35:49'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:35:49'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:35:49'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:35:49'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/24/2023 22:35:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 22:35:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 22:35:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 22:35:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 22:35:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 22:35:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 22:35:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 22:35:51'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/24/2023 22:35:52'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/24/2023 22:35:54'!
PASSED!

!testRun: #ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/24/2023 22:35:57'!
PASSED!

!testRun: #ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/24/2023 22:35:57'!
PASSED!

!testRun: #ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/24/2023 22:35:57'!
PASSED!

!testRun: #ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/24/2023 22:35:57'!
PASSED!

!testRun: #ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/24/2023 22:35:57'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/24/2023 22:35:57'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/24/2023 22:35:57'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/24/2023 22:35:57'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/24/2023 22:35:57'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/24/2023 22:35:57'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/24/2023 22:35:57'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/24/2023 22:35:57'!
PASSED!

----QUIT----(24 October 2023 22:44:08) CuisUniversity-5981.image priorSource: 10197292!

----STARTUP---- (24 October 2023 22:44:16) as /home/totorroto/Desktop/Portfolio/linux64/CuisUniversity-5981.image!


!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/24/2023 23:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 23:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/24/2023 23:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/24/2023 23:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/24/2023 23:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/24/2023 23:53:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/24/2023 23:53:27'!
PASSED!
!Account methodsFor: 'transactions' stamp: 'toto 10/24/2023 23:53:42'!
withTransactionsDo: aOneArgBlock

	self subclassResponsibility! !
!TransferLegs methodsFor: 'print' stamp: 'toto 10/25/2023 00:00:03'!
printTransaction

	self subclassResponsibility! !
!TransferLegs methodsFor: 'balance' stamp: 'toto 10/25/2023 00:00:11'!
affectBalanceIfTransfer: balance

	self subclassResponsibility! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:02:12'!
test01AccountSummaryReportOfVirginReceptiveAccount
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Balance = 0'.
	
	! !

!methodRemoval: ReportTest #test01ReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:02:13'!
test01ReportOfVirginReceptiveAccount
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Balance = 0'.
	
	!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:02:18'!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Deposito por 100',String crString,'Balance = 100' .
	
	! !

!methodRemoval: ReportTest #test02ReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:02:18'!
test02ReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Deposito por 100',String crString,'Balance = 100' .
	
	!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:02:23'!
test03AccountSummaryReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Extraccion por 100',String crString,'Balance = -100' .
	
	! !

!methodRemoval: ReportTest #test03ReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:02:23'!
test03ReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Extraccion por 100',String crString,'Balance = -100' .
	
	!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:02:28'!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Salida por transferencia de 100',String crString,'Balance = -100' .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:'Entrada por transferencia de 100',String crString,'Balance = 100' .
	! !

!methodRemoval: ReportTest #test04ReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:02:28'!
test04ReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Salida por transferencia de 100',String crString,'Balance = -100' .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:'Entrada por transferencia de 100',String crString,'Balance = 100' .
	!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:02:35'!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Salida por transferencia de 100',String crString,'Deposito por 100',String crString,'Balance = 0' .
	
	! !

!methodRemoval: ReportTest #test05ReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:02:35'!
test05ReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Salida por transferencia de 100',String crString,'Deposito por 100',String crString,'Balance = 0' .
	
	!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:06:48'!
balancePor

	^ 'Balance = 0'! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:06:48' prior: 50656375!
AAAtest09AccountSummaryOfPortfolioWithPortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,self balancePor .
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:06:48' prior: 50656331!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,self balancePor .
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:06:48' prior: 50655680!
test06AccountSummaryReportOfEmptyPortfolio
	
	| aPortfolio |
	aPortfolio := Portfolio new.
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self balancePor .
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:06:48' prior: 50657859!
test01AccountSummaryReportOfVirginReceptiveAccount
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self balancePor.
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:06:48' prior: 50657970!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Salida por transferencia de 100',String crString,'Deposito por 100',String crString,self balancePor .
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:07:22'!
balancePor: aValue

	^ 'Balance = ' ,aValue asString.! !

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:07:23'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:07:23'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:07:23'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:07:23'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:07:23'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:07:23'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 00:07:23'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 00:07:23'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 00:07:23'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 00:07:23'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 00:07:23'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 00:07:23'!
PASSED!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:08:10' prior: 50658094!
balancePor: aValue

	^ 'Balance = 0'! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:08:10' prior: 50658034!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,self balancePor: 0 .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:08:10' prior: 50658075!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Salida por transferencia de 100',String crString,'Deposito por 100',String crString,self balancePor: 0 .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:08:10' prior: 50658013!
AAAtest09AccountSummaryOfPortfolioWithPortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,self balancePor: 0 .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:08:10' prior: 50658056!
test06AccountSummaryReportOfEmptyPortfolio
	
	| aPortfolio |
	aPortfolio := Portfolio new.
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self balancePor: 0 .
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:08:10' prior: 50658065!
test01AccountSummaryReportOfVirginReceptiveAccount
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self balancePor: 0.
	
	! !

!methodRemoval: ReportTest #balancePor stamp: 'toto 10/25/2023 00:08:10'!
balancePor

	^ 'Balance = 0'!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:08:17' prior: 50658147!
balancePor: aValue

	^ 'Balance = ', aValue asString.! !

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:08:17'!
ERROR!

!testRun: #ReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:08:17'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:08:17'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:08:17'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:08:17'!
ERROR!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:08:18'!
ERROR!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 00:08:18'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 00:08:18'!
ERROR!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 00:08:18'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 00:08:18'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 00:08:18'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 00:08:18'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:08:34'!
ERROR!

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:08:42'!
ERROR!

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:08:42'!
ERROR!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:08:50' prior: 50658225!
test01AccountSummaryReportOfVirginReceptiveAccount
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals: (self balancePor: 0).
	
	! !

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:08:51'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:08:51'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:08:51'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:08:51'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:08:51'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:08:51'!
ERROR!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:08:51'!
ERROR!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 00:08:51'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 00:08:51'!
ERROR!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 00:08:51'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 00:08:51'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 00:08:51'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 00:08:51'!
PASSED!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:08:57' prior: 50658174!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Salida por transferencia de 100',String crString,'Deposito por 100',String crString,(self balancePor: 0).
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:09:04' prior: 50658216!
test06AccountSummaryReportOfEmptyPortfolio
	
	| aPortfolio |
	aPortfolio := Portfolio new.
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:(self balancePor: 0) .
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:09:11' prior: 50658152!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100',String crString,'Extraccion por 100',String crString,(self balancePor: 0 ).
	
	! !

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:09:17'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:09:17'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:09:17'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:09:17'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:09:17'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:09:17'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 00:09:17'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 00:09:17'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 00:09:19'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 00:09:19'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 00:09:19'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 00:09:19'!
PASSED!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:09:40' prior: 50657878!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Deposito por 100',String crString,(self balancePor:100) .
	
	! !

!testRun: #ReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:09:41'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:09:41'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:09:41'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:09:41'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:09:41'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:09:41'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:09:41'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 00:09:41'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 00:09:41'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 00:09:41'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 00:09:41'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 00:09:41'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 00:09:41'!
PASSED!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:09:54' prior: 50657903!
test03AccountSummaryReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Extraccion por 100',String crString,self balancePor:-100.
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:10:01' prior: 50658526!
test03AccountSummaryReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Extraccion por 100',String crString,(self balancePor: -100).
	
	! !

!testRun: #ReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:10:02'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:10:02'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:10:02'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:10:02'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:10:02'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:10:02'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:10:02'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 00:10:02'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 00:10:02'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 00:10:02'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 00:10:02'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 00:10:02'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 00:10:02'!
PASSED!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:10:17' prior: 50657928!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Salida por transferencia de 100',String crString,(self balancePor: 100) .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:'Entrada por transferencia de 100',String crString,'Balance = 100' .
	! !

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:10:18'!
FAILURE!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:10:23' prior: 50658604!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Salida por transferencia de 100',String crString,(self balancePor: -100) .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:'Entrada por transferencia de 100',String crString,'Balance = 100' .
	! !

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:10:24'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:10:24'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:10:24'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:10:24'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:10:24'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:10:24'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:10:24'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 00:10:24'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 00:10:24'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 00:10:24'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 00:10:24'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 00:10:24'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 00:10:24'!
PASSED!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:10:43' prior: 50656300!
test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:'Deposito por 100' ,String crString,(self balancePor: 100) .
	
	! !

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 00:10:44'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:10:44'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:10:44'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:10:44'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:10:44'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:10:44'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:10:44'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 00:10:44'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 00:10:44'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 00:10:44'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 00:10:44'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 00:10:44'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 00:10:44'!
PASSED!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:10:59'!
DepositoPor100

	^ 'Deposito por 100'! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:10:59' prior: 50658194!
AAAtest09AccountSummaryOfPortfolioWithPortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self DepositoPor100,String crString,'Extraccion por 100',String crString,self balancePor: 0 .
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:10:59' prior: 50658462!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self DepositoPor100,String crString,(self balancePor:100) .
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:10:59' prior: 50658703!
test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self DepositoPor100 ,String crString,(self balancePor: 100) .
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:10:59' prior: 50658392!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self DepositoPor100,String crString,'Extraccion por 100',String crString,(self balancePor: 0 ).
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:10:59' prior: 50658363!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:'Salida por transferencia de 100',String crString,self DepositoPor100,String crString,(self balancePor: 0).
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:11:12'!
ExtraccionPor100

	^ 'Extraccion por 100'! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:11:12' prior: 50658774!
AAAtest09AccountSummaryOfPortfolioWithPortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self DepositoPor100,String crString,self ExtraccionPor100,String crString,self balancePor: 0 .
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:11:12' prior: 50658539!
test03AccountSummaryReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self ExtraccionPor100,String crString,(self balancePor: -100).
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:11:12' prior: 50658824!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self DepositoPor100,String crString,self ExtraccionPor100,String crString,(self balancePor: 0 ).
	
	! !

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 00:11:15'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:11:15'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:11:15'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:11:15'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:11:15'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:11:15'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:11:15'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 00:11:15'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 00:11:15'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 00:11:15'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 00:11:15'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 00:11:15'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 00:11:15'!
PASSED!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:11:44'!
SalidaDeTransferenciaPor100

	^ 'Salida por transferencia de 100'! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:11:44' prior: 50658630!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self SalidaDeTransferenciaPor100,String crString,(self balancePor: -100) .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:'Entrada por transferencia de 100',String crString,'Balance = 100' .
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:11:44' prior: 50658846!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self SalidaDeTransferenciaPor100,String crString,self DepositoPor100,String crString,(self balancePor: 0).
	
	! !

!testRun: #ReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:11:48'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:11:48'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:11:48'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:11:48'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:11:48'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:11:48'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:11:48'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 00:11:48'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 00:11:48'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 00:11:48'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 00:11:48'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 00:11:48'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 00:11:48'!
PASSED!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:12:00'!
EntradaPorTransferenciaDe100

	^ 'Entrada por transferencia de 100'! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:12:00' prior: 50658983!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self SalidaDeTransferenciaPor100,String crString,(self balancePor: -100) .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:self EntradaPorTransferenciaDe100,String crString,'Balance = 100' .
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:12:35'!
SalidaPorTransferenciaDe100

	^ 'Salida por transferencia de 100'! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:12:35' prior: 50659005!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self SalidaPorTransferenciaDe100,String crString,self DepositoPor100,String crString,(self balancePor: 0).
	
	! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:12:35' prior: 50659082!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self SalidaPorTransferenciaDe100,String crString,(self balancePor: -100) .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:self EntradaPorTransferenciaDe100,String crString,'Balance = 100' .
	! !

!methodRemoval: ReportTest #SalidaDeTransferenciaPor100 stamp: 'toto 10/25/2023 00:12:35'!
SalidaDeTransferenciaPor100

	^ 'Salida por transferencia de 100'!
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:15:18' prior: 50658870!
AAAtest09AccountSummaryOfPortfolioWithPortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self DepositoPor100,String crString,self ExtraccionPor100,String crString,(self balancePor: 0 ).
	
	! !
!ReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 00:15:31' prior: 50659129!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self SalidaPorTransferenciaDe100,String crString,(self balancePor: -100) .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:self EntradaPorTransferenciaDe100,String crString,(self balancePor:100) .
	! !

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:15:32'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:15:32'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:15:32'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:15:32'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:15:32'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:15:32'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:15:32'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 00:15:32'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 00:15:32'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 00:15:32'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 00:15:32'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 00:15:32'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 00:15:32'!
PASSED!
!AccountReport methodsFor: 'initialize' stamp: 'toto 10/25/2023 00:20:49' prior: 50657487!
initializeFor: anAccount 
	account := anAccount.! !

!methodRemoval: AccountSummaryReport class #m1:for: stamp: 'toto 10/25/2023 00:21:09'!
m1: aTransactions for: aSelf
	^self new initializeFor: aSelf!
!AccountSummaryReport class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 00:21:17' prior: 50655452!
for: anAccount
	^self new initializeFor: anAccount! !
!TransferNetReport class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 00:21:31' prior: 50656491!
for: anAccount 
	^self new initializeFor: anAccount ! !
!AccountReport class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 00:21:43'!
for: anAccount
	^self new initializeFor: anAccount! !

!methodRemoval: AccountSummaryReport class #for: stamp: 'toto 10/25/2023 00:21:43'!
for: anAccount
	^self new initializeFor: anAccount!

!methodRemoval: TransferNetReport class #for: stamp: 'toto 10/25/2023 00:21:43'!
for: anAccount 
	^self new initializeFor: anAccount !

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/25/2023 00:21:49'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/25/2023 00:21:49'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/25/2023 00:21:49'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/25/2023 00:21:49'!
PASSED!

!testRun: #ReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 00:21:51'!
PASSED!

!testRun: #ReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 00:21:51'!
PASSED!

!testRun: #ReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 00:21:51'!
PASSED!

!testRun: #ReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 00:21:51'!
PASSED!

!testRun: #ReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 00:21:51'!
PASSED!

!testRun: #ReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:21:51'!
PASSED!

!testRun: #ReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 00:21:51'!
PASSED!

!testRun: #ReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 00:21:51'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 00:21:51'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 00:21:51'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 00:21:51'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 00:21:51'!
PASSED!

----QUIT----(25 October 2023 00:22:42) CuisUniversity-5981.image priorSource: 10437153!

----STARTUP---- (25 October 2023 00:22:50) as /home/totorroto/Desktop/Portfolio/linux64/CuisUniversity-5981.image!


!classRenamed: #ReportTest as: #AccountReportTest stamp: 'toto 10/25/2023 00:25:04'!
Smalltalk renameClassNamed: #ReportTest as: #AccountReportTest!

TestCase subclass: #PortfolioReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReportTest category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 00:25:19'!
TestCase subclass: #PortfolioReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TreeStructureReport category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 00:30:16'!
Object subclass: #TreeStructureReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReportTest methodsFor: 'no messages' stamp: 'toto 10/25/2023 00:30:11'!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	self assert: TreeStructureReport of:Portfolio new equals:{}! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:30:45' prior: 50659375!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	self assert: (TreeStructureReport of: portfolio ) equals:{'Portfolio de la familia'}! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:30:48' prior: 50659384!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	self assert: (TreeStructureReport of: portfolio ) equals:{'Portfolio de la familia'}.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:30:49'!
ERROR!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:32:08' prior: 50659394!
test01TreeStructureReportOfEmptyPortfolio

	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	self assert: (TreeStructureReport of: portfolio ) equals:{'Portfolio de la familia'}.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:32:09'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 00:32:16'!
named: aRenameMe1 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aRenameMe1 ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 00:32:33' prior: 50659420!
named: aPortfolioName 
	
	^self new initializeNamed: aPortfolioName ! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 00:32:36'!
PASSED!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:32:40'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 00:32:45'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents portfolioName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'initialization' stamp: 'toto 10/25/2023 00:32:45'!
initializeNamed: aPortfolioName 
	self shouldBeImplemented.
	portfolioName := aPortfolioName.! !
!Portfolio methodsFor: 'initialization' stamp: 'toto 10/25/2023 00:32:49' prior: 50659505!
initializeNamed: aPortfolioName 
	portfolioName := aPortfolioName.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:32:50'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'toto 10/25/2023 00:33:06' prior: 50659511!
initializeNamed: aPortfolioName 
	portfolioName := aPortfolioName.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !

!methodRemoval: Portfolio class #named: stamp: 'toto 10/25/2023 00:33:17'!
named: aPortfolioName 
	
	^self new initializeNamed: aPortfolioName !

!methodRemoval: Portfolio #initializeNamed: stamp: 'toto 10/25/2023 00:33:22'!
initializeNamed: aPortfolioName 
	portfolioName := aPortfolioName.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.!

!methodRemoval: PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 00:33:31'!
test01TreeStructureReportOfEmptyPortfolio

	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	self assert: (TreeStructureReport of: portfolio ) equals:{'Portfolio de la familia'}.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 00:34:46'!
test08ReceptiveAccountMustHaveName

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 100 on: account1.
		
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: deposit1).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 00:35:30' prior: 50659548!
test08ReceptiveAccountMustHaveName

	| account1 |
	
	account1 := ReceptiveAccount named: 'Marcelo'.
	
	
		
	self assert: (account1 isNamed: 'Marcelo').
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 00:35:40' prior: 50659560!
test08ReceptiveAccountMustHaveName

	| receptiveAccount |
	
	receptiveAccount := ReceptiveAccount named: 'Marcelo'.
	
	
		
	self assert: (receptiveAccount isNamed: 'Marcelo').
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 00:35:44' prior: 50659568!
test08ReceptiveAccountMustHaveName

	| receptiveAccount |
	
	receptiveAccount := ReceptiveAccount named: 'Marcelo'.
	
	self assert: (receptiveAccount isNamed: 'Marcelo').
! !

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountMustHaveName stamp: 'toto 10/25/2023 00:35:45'!
ERROR!
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 00:35:50'!
named: aRenameMe1 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aRenameMe1 ! !
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 00:36:13' prior: 50659589!
named: aReceptiveAccountName 
	
	^self new initializeNamed: aReceptiveAccountName ! !

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountMustHaveName stamp: 'toto 10/25/2023 00:36:16'!
ERROR!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 00:36:27'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions receptiveAccountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'toto 10/25/2023 00:36:27'!
initializeNamed: aReceptiveAccountName 
	self shouldBeImplemented.
	receptiveAccountName := aReceptiveAccountName.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'toto 10/25/2023 00:36:37' prior: 50659616!
initializeNamed: aReceptiveAccountName 

	receptiveAccountName := aReceptiveAccountName.! !

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 00:36:39'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 00:36:39' prior: 50659623!
initializeNamed: aReceptiveAccountName 

	name := aReceptiveAccountName.! !

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountMustHaveName stamp: 'toto 10/25/2023 00:36:42'!
ERROR!
!ReceptiveAccount methodsFor: 'testing' stamp: 'toto 10/25/2023 00:36:48'!
isNamed: aRenameMe1 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'toto 10/25/2023 00:37:08' prior: 50659647!
isNamed: aReceptiveAccountName 
	^name = aReceptiveAccountName ! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 00:37:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 00:37:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 00:37:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 00:37:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 00:37:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 00:37:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 00:37:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountMustHaveName stamp: 'toto 10/25/2023 00:37:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountMustHaveName stamp: 'toto 10/25/2023 00:37:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 00:37:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 00:37:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 00:37:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 00:37:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 00:37:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 00:37:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 00:37:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountMustHaveName stamp: 'toto 10/25/2023 00:37:11'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:13:44'!
test08ReceptiveAccountCanBeNamed

	| receptiveAccount |
	
	receptiveAccount := ReceptiveAccount named: 'Marcelo'.
	
	self assert: (receptiveAccount isNamed: 'Marcelo').
! !

!methodRemoval: ReceptiveAccountTest #test08ReceptiveAccountMustHaveName stamp: 'toto 10/25/2023 01:13:47'!
test08ReceptiveAccountMustHaveName

	| receptiveAccount |
	
	receptiveAccount := ReceptiveAccount named: 'Marcelo'.
	
	self assert: (receptiveAccount isNamed: 'Marcelo').
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:13:58'!
test09ReceptiveAccountCanBeCreatedWithName

	| receptiveAccount |
	
	receptiveAccount := ReceptiveAccount named: 'Marcelo'.
	
	self assert: (receptiveAccount isNamed: 'Marcelo').
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:14:17'!
test08ReceptiveAccountCanBeRenamed

	| receptiveAccount |
	
	receptiveAccount := ReceptiveAccount named: 'Marcelo'.
	
	self assert: (receptiveAccount isNamed: 'Marcelo').
! !

!methodRemoval: ReceptiveAccountTest #test08ReceptiveAccountCanBeNamed stamp: 'toto 10/25/2023 01:14:17'!
test08ReceptiveAccountCanBeNamed

	| receptiveAccount |
	
	receptiveAccount := ReceptiveAccount named: 'Marcelo'.
	
	self assert: (receptiveAccount isNamed: 'Marcelo').
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:14:25' prior: 50659747!
test08ReceptiveAccountCanBeRenamed

	| receptiveAccount |
	
	receptiveAccount := ReceptiveAccount name: 'Marcelo'.
	
	self assert: (receptiveAccount isNamed: 'Marcelo').
! !

!testRun: #ReceptiveAccountTest #test09ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 01:14:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 01:14:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:14:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:14:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 01:14:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 01:14:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 01:14:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 01:14:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeRenamed stamp: 'toto 10/25/2023 01:14:31'!
ERROR!

!testRun: #ReceptiveAccountTest #test09ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 01:14:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeRenamed stamp: 'toto 10/25/2023 01:14:31'!
ERROR!
!ReceptiveAccount class methodsFor: 'name' stamp: 'toto 10/25/2023 01:14:38'!
name: aRenameMe1 
	self shouldBeImplemented.! !
!ReceptiveAccount class methodsFor: 'name' stamp: 'toto 10/25/2023 01:14:53' prior: 50659815!
name: aReceptiveAccountName 
	name:= aReceptiveAccountName.! !

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeRenamed stamp: 'toto 10/25/2023 01:14:55'!
ERROR!

!testRun: #ReceptiveAccountTest #test09ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 01:15:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 01:15:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:15:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:15:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 01:15:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 01:15:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 01:15:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 01:15:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeRenamed stamp: 'toto 10/25/2023 01:15:09'!
ERROR!

!testRun: #ReceptiveAccountTest #test09ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 01:15:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeRenamed stamp: 'toto 10/25/2023 01:15:09'!
ERROR!

----STARTUP---- (25 October 2023 01:15:52) as /home/totorroto/Desktop/Portfolio/linux64/CuisUniversity-5981.image!

!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:16:24'!
test08ReceptiveAccountCanBeNamed

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 100 on: account1.
		
	self assert: 1 equals: account1 transactions size .
	self assert: (account1 transactions includes: deposit1).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:16:59' prior: 50659350!
test08ReceptiveAccountCanBeNamed

	| account1|
	
	account1 := ReceptiveAccount new.
	
	account1 name: 'Marcelo'.
		
	self assert: (account1 isNamed:'Marcelo').
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:17:06' prior: 50659362!
test08ReceptiveAccountCanBeNamed

	| aReceptiveAccount|
	
	aReceptiveAccount := ReceptiveAccount new.
	
	aReceptiveAccount name: 'Marcelo'.
		
	self assert: (aReceptiveAccount isNamed:'Marcelo').
! !

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeNamed stamp: 'toto 10/25/2023 01:17:07'!
ERROR!
!ReceptiveAccount methodsFor: 'name' stamp: 'toto 10/25/2023 01:17:13'!
name: aRenameMe1 
	self shouldBeImplemented.! !

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:17:38'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'name' stamp: 'toto 10/25/2023 01:17:36' prior: 50659383!
name: aName 
	name:=aName.! !

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeNamed stamp: 'toto 10/25/2023 01:17:39'!
ERROR!
!ReceptiveAccount methodsFor: 'testing' stamp: 'toto 10/25/2023 01:17:45'!
isNamed: aRenameMe1 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'toto 10/25/2023 01:17:57' prior: 50659403!
isNamed: aName 
	^aName = name.! !

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeNamed stamp: 'toto 10/25/2023 01:17:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 01:17:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:17:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:17:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 01:17:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 01:17:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 01:17:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 01:17:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeNamed stamp: 'toto 10/25/2023 01:17:58'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:18:14'!
test08ReceptiveAccountCanBeRenamed

	| aReceptiveAccount|
	
	aReceptiveAccount := ReceptiveAccount new.
	
	aReceptiveAccount name: 'Marcelo'.
		
	self assert: (aReceptiveAccount isNamed:'Marcelo').
! !

!methodRemoval: ReceptiveAccountTest #test08ReceptiveAccountCanBeNamed stamp: 'toto 10/25/2023 01:18:14'!
test08ReceptiveAccountCanBeNamed

	| aReceptiveAccount|
	
	aReceptiveAccount := ReceptiveAccount new.
	
	aReceptiveAccount name: 'Marcelo'.
		
	self assert: (aReceptiveAccount isNamed:'Marcelo').
!
!ReceptiveAccount methodsFor: 'name' stamp: 'toto 10/25/2023 01:18:22'!
rename: aName 
	name:=aName.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 01:18:22' prior: 50659446!
test08ReceptiveAccountCanBeRenamed

	| aReceptiveAccount|
	
	aReceptiveAccount := ReceptiveAccount new.
	
	aReceptiveAccount rename: 'Marcelo'.
		
	self assert: (aReceptiveAccount isNamed:'Marcelo').
! !

!methodRemoval: ReceptiveAccount #name: stamp: 'toto 10/25/2023 01:18:22'!
name: aName 
	name:=aName.!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeRenamed stamp: 'toto 10/25/2023 01:18:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 01:18:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:18:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:18:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 01:18:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 01:18:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 01:18:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 01:18:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeRenamed stamp: 'toto 10/25/2023 01:18:24'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:19:11'!
test09ReceptiveAccountCanBeCreatedWithName

	| aReceptiveAccount|
	
	aReceptiveAccount := ReceptiveAccount named:'Marcelo'.
	
		
	self assert: (aReceptiveAccount isNamed:'Marcelo').
! !

!testRun: #ReceptiveAccountTest #test09ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 01:19:13'!
ERROR!
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 01:19:17'!
named: aRenameMe1 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aRenameMe1 ! !
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 01:19:32' prior: 50659529!
named: aName 
	^self new initializeNamed: aName ! !
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 01:19:33' prior: 50659538!
named: aName 

	^self new initializeNamed: aName ! !

!testRun: #ReceptiveAccountTest #test09ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 01:19:35'!
ERROR!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'toto 10/25/2023 01:19:41'!
initializeNamed: aName 
	self shouldBeImplemented.
	name := aName.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'toto 10/25/2023 01:19:43' prior: 50659551!
initializeNamed: aName 
	name := aName.! !

!testRun: #ReceptiveAccountTest #test09ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 01:19:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 01:19:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:19:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:19:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 01:19:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 01:19:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 01:19:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 01:19:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeRenamed stamp: 'toto 10/25/2023 01:19:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test09ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 01:19:44'!
PASSED!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'toto 10/25/2023 01:20:29' prior: 50650880 overrides: 16920235!
initialize

	super initialize.
	name:= 'No name'.
	transactions := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'toto 10/25/2023 01:20:53' prior: 50659600 overrides: 16920235!
initialize

	self initializeNamed:'Sin nombre'.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 01:20:54'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:20:54'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:20:54'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 01:20:54'!
ERROR!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 01:20:54'!
ERROR!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 01:20:54'!
ERROR!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 01:20:54'!
ERROR!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeRenamed stamp: 'toto 10/25/2023 01:20:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test09ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 01:20:54'!
PASSED!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'toto 10/25/2023 01:19:41' prior: 50659557!
initializeNamed: aName 
	self shouldBeImplemented.
	name := aName.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'toto 10/25/2023 01:23:14' prior: 50659646!
initializeNamed: aName 
	
	name := aName.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'toto 10/25/2023 01:23:31' prior: 50659652!
initializeNamed: aName 
	
	name := aName.
	transactions:= OrderedCollection new.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 01:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 01:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 01:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 01:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 01:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeRenamed stamp: 'toto 10/25/2023 01:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test09ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 01:23:33'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:24:04'!
test15PortfolioCanBeRenamed

	| portfolio |
	portfolio:= Portfolio new.! !
!PortfolioTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:24:40' prior: 50659696!
test15PortfolioCanBeRenamed

	| portfolio |
	portfolio:= Portfolio new.
	portfolio rename: 'familia'.
	
	self assert: (portfolio isNamed: 'familia').! !

!testRun: #PortfolioTest #test15PortfolioCanBeRenamed stamp: 'toto 10/25/2023 01:24:41'!
ERROR!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:25:01'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:25:17'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:25:24'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:25:32'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 01:25:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:25:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 01:25:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 01:25:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 01:25:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 01:25:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 01:25:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeRenamed stamp: 'toto 10/25/2023 01:25:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test09ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 01:25:35'!
PASSED!

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:25:40'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Account category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:25:44'!
Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Account methodsFor: 'initialization' stamp: 'toto 10/25/2023 01:26:22' overrides: 16920235!
initialize

	self initializeNamed:'Sin nombre'.! !

!methodRemoval: ReceptiveAccount #initialize stamp: 'toto 10/25/2023 01:26:22'!
initialize

	self initializeNamed:'Sin nombre'.!
!Account methodsFor: 'initialization' stamp: 'toto 10/25/2023 01:26:26'!
initializeNamed: aName

	self subclassResponsibility! !
!Portfolio methodsFor: 'initialization' stamp: 'toto 10/25/2023 01:27:10'!
initializeNamed

	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !

!methodRemoval: Portfolio #initialize stamp: 'toto 10/25/2023 01:27:10'!
initialize

	accounts := OrderedCollection new.
	parents := OrderedCollection new.!
!Portfolio methodsFor: 'initialization' stamp: 'toto 10/25/2023 01:27:40' overrides: 50659822!
initializeNamed: aName

	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !

!methodRemoval: Portfolio #initializeNamed stamp: 'toto 10/25/2023 01:27:40'!
initializeNamed

	accounts := OrderedCollection new.
	parents := OrderedCollection new.!
!Portfolio methodsFor: 'initialization' stamp: 'toto 10/25/2023 01:27:47' prior: 50659838 overrides: 50659822!
initializeNamed: aName
	name:= aName.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanBeRenamed stamp: 'toto 10/25/2023 01:27:48'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 01:27:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanBeRenamed stamp: 'toto 10/25/2023 01:27:48'!
ERROR!
!Portfolio methodsFor: 'name' stamp: 'toto 10/25/2023 01:28:03'!
rename: aRenameMe1 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'name' stamp: 'toto 10/25/2023 01:28:14' prior: 50659921!
rename: aName 
	self shouldBeImplemented.! !

!testRun: #PortfolioTest #test15PortfolioCanBeRenamed stamp: 'toto 10/25/2023 01:28:15'!
ERROR!
!Account methodsFor: 'name' stamp: 'toto 10/25/2023 01:28:23'!
rename: aName 
	name:=aName.! !

!methodRemoval: ReceptiveAccount #rename: stamp: 'toto 10/25/2023 01:28:23'!
rename: aName 
	name:=aName.!

!methodRemoval: Portfolio #rename: stamp: 'toto 10/25/2023 01:28:35'!
rename: aName 
	self shouldBeImplemented.!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanBeRenamed stamp: 'toto 10/25/2023 01:28:47'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 01:28:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanBeRenamed stamp: 'toto 10/25/2023 01:28:47'!
ERROR!
!Account methodsFor: 'testing' stamp: 'toto 10/25/2023 01:28:58'!
isNamed: aName 
	^aName = name.! !

!methodRemoval: ReceptiveAccount #isNamed: stamp: 'toto 10/25/2023 01:28:58'!
isNamed: aName 
	^aName = name.!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanBeRenamed stamp: 'toto 10/25/2023 01:29:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 01:29:02'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:29:09'!
test16PortfolioCanBeRenamed

	| portfolio |
	portfolio:= Portfolio new.
	portfolio rename: 'familia'.
	
	self assert: (portfolio isNamed: 'familia').! !

!methodRemoval: PortfolioTest #test15PortfolioCanBeRenamed stamp: 'toto 10/25/2023 01:29:09'!
test15PortfolioCanBeRenamed

	| portfolio |
	portfolio:= Portfolio new.
	portfolio rename: 'familia'.
	
	self assert: (portfolio isNamed: 'familia').!
!PortfolioTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:29:16'!
test16PortfolioCanBeCreatedWithName

	| portfolio |
	portfolio:= Portfolio new.
	portfolio rename: 'familia'.
	
	self assert: (portfolio isNamed: 'familia').! !
!PortfolioTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:29:21'!
test17PortfolioCanBeCreatedWithName

	| portfolio |
	portfolio:= Portfolio new.
	portfolio rename: 'familia'.
	
	self assert: (portfolio isNamed: 'familia').! !

!methodRemoval: PortfolioTest #test16PortfolioCanBeCreatedWithName stamp: 'toto 10/25/2023 01:29:21'!
test16PortfolioCanBeCreatedWithName

	| portfolio |
	portfolio:= Portfolio new.
	portfolio rename: 'familia'.
	
	self assert: (portfolio isNamed: 'familia').!
!PortfolioTest methodsFor: 'tests' stamp: 'toto 10/25/2023 01:29:31' prior: 50660100!
test17PortfolioCanBeCreatedWithName

	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (portfolio isNamed: 'familia').! !

!testRun: #PortfolioTest #test17PortfolioCanBeCreatedWithName stamp: 'toto 10/25/2023 01:29:32'!
ERROR!
!Account class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 01:29:46'!
named: aName 

	^self new initializeNamed: aName ! !

!methodRemoval: ReceptiveAccount class #named: stamp: 'toto 10/25/2023 01:29:46'!
named: aName 

	^self new initializeNamed: aName !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanBeRenamed stamp: 'toto 10/25/2023 01:29:54'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanBeCreatedWithName stamp: 'toto 10/25/2023 01:29:54'!
PASSED!
!ReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 01:30:57'!
test01xxx
	! !

!classRemoval: #ReportTest stamp: 'toto 10/25/2023 01:32:38'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReportTest category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:32:48'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TestCase subclass: #ReportTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReportTests category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:33:02'!
TestCase subclass: #ReportTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReportTests stamp: 'toto 10/25/2023 01:33:13'!
TestCase subclass: #ReportTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReportTest stamp: 'toto 10/25/2023 01:33:15'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReportTest category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:34:51'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TestCase subclass: #AccountReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReportTest category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:36:40'!
TestCase subclass: #AccountReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountReportTest stamp: 'toto 10/25/2023 01:37:19'!
TestCase subclass: #AccountReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReportTest stamp: 'toto 10/25/2023 01:37:23'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----End fileIn of /home/totorroto/Computacion/Inge1/Portfolio/linux64/AccountReportTest.st----!

TestCase subclass: #PortfolioReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReportTest category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:40:02'!
TestCase subclass: #PortfolioReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReportTest methodsFor: 'no messages' stamp: 'toto 10/25/2023 01:40:39'!
test01TreeStructureReportOfEmptyPortfolio! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 01:40:47' prior: 50660540!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio new.! !

!classDefinition: #TreeStructureReport category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:44:05'!
Object subclass: #TreeStructureReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 01:44:04' prior: 50660545!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	self assert: (TreeStructureReport of:portfolio) apply = 'Portfolio de la familia'
	! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 01:44:06' prior: 50660559!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (TreeStructureReport of:portfolio) apply = 'Portfolio de la familia'
	! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 01:44:15' prior: 50660569!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (TreeStructureReport of: portfolio) apply = 'Portfolio de la familia'
	! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 01:44:24' prior: 50660579!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'Portfolio de la familia'
	! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 01:44:25'!
ERROR!
!TreeStructureReport class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 01:44:30'!
of: portfolio 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeOf: portfolio ! !
!TreeStructureReport class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 01:44:34' prior: 50660602!
of: portfolio 
	^self new initializeOf: portfolio ! !
!TreeStructureReport class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 01:44:39' prior: 50660611!
of: aPortfolio 
	^self new initializeOf: aPortfolio ! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 01:44:40'!
ERROR!

!classDefinition: #TreeStructureReport category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 01:44:46'!
Object subclass: #TreeStructureReport
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TreeStructureReport methodsFor: 'initialize' stamp: 'toto 10/25/2023 01:44:46'!
initializeOf: aPortfolio 
	self shouldBeImplemented.
	portfolio := aPortfolio.! !
!TreeStructureReport methodsFor: 'initialize' stamp: 'toto 10/25/2023 01:44:50' prior: 50660634!
initializeOf: aPortfolio 
	portfolio := aPortfolio.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 01:44:51'!
ERROR!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 01:44:58'!
apply
	self shouldBeImplemented.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 01:45:41'!
ERROR!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 01:46:02' prior: 50660648!
apply
	^'Portfolio de la ', portfolio name! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 01:46:03'!
FAILURE!
!Portfolio methodsFor: 'accounts management' stamp: 'toto 10/25/2023 01:46:17' overrides: 16903442!
name 

	^name.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanBeRenamed stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanBeCreatedWithName stamp: 'toto 10/25/2023 01:46:35'!
PASSED!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 01:46:41'!
PASSED!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 01:48:22'!
test01TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Cuenta '
	! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 01:48:26' prior: 50660589!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia'
	! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 01:48:37' prior: 50660656!
apply
	^portfolio name! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 01:48:40'!
PASSED!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 01:48:40'!
FAILURE!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 01:48:40'!
FAILURE!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 01:49:13'!
test02TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Cuenta '
	! !

!methodRemoval: PortfolioReportTest #test01TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 01:49:13'!
test01TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Cuenta '
	!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 01:49:28' prior: 50660776!
test02TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Maria'
	! !

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 01:49:31'!
FAILURE!

'familia',String crString,String tab,'Maria'!

'familia',String crString,String tab,'Maria'!

----QUIT----(25 October 2023 01:50:34) CuisUniversity-5981.image priorSource: 10486174!

----STARTUP---- (25 October 2023 20:06:53) as /home/totorroto/Desktop/Portfolio/linux64/CuisUniversity-5981.image!

!AccountReportTest methodsFor: 'support' stamp: 'toto 10/25/2023 20:08:05'!
depositoPor100

	^ 'Deposito por 100'! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:08:05' prior: 50660380!
AAAtest09AccountSummaryOfPortfolioWithPortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositoPor100,String crString,self ExtraccionPor100,String crString,(self balancePor: 0 ).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:08:05' prior: 50660503!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositoPor100,String crString,self ExtraccionPor100,String crString,(self balancePor: 0 ).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:08:05' prior: 50660459!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self SalidaPorTransferenciaDe100,String crString,self depositoPor100,String crString,(self balancePor: 0).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:08:05' prior: 50660411!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self depositoPor100,String crString,(self balancePor:100) .
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:08:05' prior: 50660488!
test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositoPor100 ,String crString,(self balancePor: 100) .
	
	! !

!methodRemoval: AccountReportTest #DepositoPor100 stamp: 'toto 10/25/2023 20:08:05'!
DepositoPor100

	^ 'Deposito por 100'!
!AccountReportTest methodsFor: 'support' stamp: 'toto 10/25/2023 20:08:35'!
depositoPor100ReportDescription

	^ 'Deposito por 100'! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:08:36' prior: 50660832!
AAAtest09AccountSummaryOfPortfolioWithPortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositoPor100ReportDescription,String crString,self ExtraccionPor100,String crString,(self balancePor: 0 ).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:08:36' prior: 50660911!
test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositoPor100ReportDescription ,String crString,(self balancePor: 100) .
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:08:36' prior: 50660897!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self depositoPor100ReportDescription,String crString,(self balancePor:100) .
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:08:36' prior: 50660854!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositoPor100ReportDescription,String crString,self ExtraccionPor100,String crString,(self balancePor: 0 ).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:08:36' prior: 50660877!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self SalidaPorTransferenciaDe100,String crString,self depositoPor100ReportDescription,String crString,(self balancePor: 0).
	
	! !

!methodRemoval: AccountReportTest #depositoPor100 stamp: 'toto 10/25/2023 20:08:36'!
depositoPor100

	^ 'Deposito por 100'!
!AccountReportTest methodsFor: 'support' stamp: 'toto 10/25/2023 20:09:03'!
depositReportDescription

	^ 'Deposito por 100'! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:09:03' prior: 50660975!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self depositReportDescription,String crString,(self balancePor:100) .
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:09:03' prior: 50660958!
test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositReportDescription ,String crString,(self balancePor: 100) .
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:09:03' prior: 50660936!
AAAtest09AccountSummaryOfPortfolioWithPortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositReportDescription,String crString,self ExtraccionPor100,String crString,(self balancePor: 0 ).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:09:03' prior: 50661012!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self SalidaPorTransferenciaDe100,String crString,self depositReportDescription,String crString,(self balancePor: 0).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:09:03' prior: 50660989!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositReportDescription,String crString,self ExtraccionPor100,String crString,(self balancePor: 0 ).
	
	! !

!methodRemoval: AccountReportTest #depositoPor100ReportDescription stamp: 'toto 10/25/2023 20:09:03'!
depositoPor100ReportDescription

	^ 'Deposito por 100'!
!AccountReportTest methodsFor: 'support' stamp: 'toto 10/25/2023 20:09:51'!
TransferWithdrawReportDescription

	^ 'Salida por transferencia de 100'! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:09:51' prior: 50661093!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self TransferWithdrawReportDescription,String crString,self depositReportDescription,String crString,(self balancePor: 0).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:09:51' prior: 50660437!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self TransferWithdrawReportDescription,String crString,(self balancePor: -100) .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:self EntradaPorTransferenciaDe100,String crString,(self balancePor:100) .
	! !

!methodRemoval: AccountReportTest #SalidaPorTransferenciaDe100 stamp: 'toto 10/25/2023 20:09:51'!
SalidaPorTransferenciaDe100

	^ 'Salida por transferencia de 100'!
!AccountReportTest methodsFor: 'support' stamp: 'toto 10/25/2023 20:09:57'!
transferWithdrawReportDescription

	^ 'Salida por transferencia de 100'! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:09:57' prior: 50661168!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self transferWithdrawReportDescription,String crString,(self balancePor: -100) .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:self EntradaPorTransferenciaDe100,String crString,(self balancePor:100) .
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:09:57' prior: 50661147!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self transferWithdrawReportDescription,String crString,self depositReportDescription,String crString,(self balancePor: 0).
	
	! !

!methodRemoval: AccountReportTest #TransferWithdrawReportDescription stamp: 'toto 10/25/2023 20:09:57'!
TransferWithdrawReportDescription

	^ 'Salida por transferencia de 100'!
!AccountReportTest methodsFor: 'support' stamp: 'toto 10/25/2023 20:10:04'!
balanceFor: aValue

	^ 'Balance = ', aValue asString.! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:10:04' prior: 50660424!
test03AccountSummaryReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self ExtraccionPor100,String crString,(self balanceFor: -100).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:10:04' prior: 50661201!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self transferWithdrawReportDescription,String crString,(self balanceFor: -100) .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:self EntradaPorTransferenciaDe100,String crString,(self balanceFor:100) .
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:10:04' prior: 50661041!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self depositReportDescription,String crString,(self balanceFor:100) .
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:10:04' prior: 50661071!
AAAtest09AccountSummaryOfPortfolioWithPortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositReportDescription,String crString,self ExtraccionPor100,String crString,(self balanceFor: 0 ).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:10:04' prior: 50661114!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositReportDescription,String crString,self ExtraccionPor100,String crString,(self balanceFor: 0 ).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:10:04' prior: 50660479!
test06AccountSummaryReportOfEmptyPortfolio
	
	| aPortfolio |
	aPortfolio := Portfolio new.
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:(self balanceFor: 0) .
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:10:04' prior: 50661223!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self transferWithdrawReportDescription,String crString,self depositReportDescription,String crString,(self balanceFor: 0).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:10:04' prior: 50660401!
test01AccountSummaryReportOfVirginReceptiveAccount
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals: (self balanceFor: 0).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:10:04' prior: 50661055!
test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositReportDescription ,String crString,(self balanceFor: 100) .
	
	! !

!methodRemoval: AccountReportTest #balancePor: stamp: 'toto 10/25/2023 20:10:04'!
balancePor: aValue

	^ 'Balance = ', aValue asString.!
!AccountReportTest methodsFor: 'support' stamp: 'toto 10/25/2023 20:10:21'!
withdrawReportDescription

	^ 'Extraccion por 100'! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:10:21' prior: 50661254!
test03AccountSummaryReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self withdrawReportDescription,String crString,(self balanceFor: -100).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:10:21' prior: 50661304!
AAAtest09AccountSummaryOfPortfolioWithPortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositReportDescription,String crString,self withdrawReportDescription,String crString,(self balanceFor: 0 ).
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:10:21' prior: 50661326!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositReportDescription,String crString,self withdrawReportDescription,String crString,(self balanceFor: 0 ).
	
	! !

!methodRemoval: AccountReportTest #ExtraccionPor100 stamp: 'toto 10/25/2023 20:10:21'!
ExtraccionPor100

	^ 'Extraccion por 100'!
!AccountReportTest methodsFor: 'support' stamp: 'toto 10/25/2023 20:10:37'!
transferDepositReportDescription

	^ 'Entrada por transferencia de 100'! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:10:37' prior: 50661268!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  for: aReceptiveAccount) apply) equals:self transferWithdrawReportDescription,String crString,(self balanceFor: -100) .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:self transferDepositReportDescription,String crString,(self balanceFor:100) .
	! !

!methodRemoval: AccountReportTest #EntradaPorTransferenciaDe100 stamp: 'toto 10/25/2023 20:10:37'!
EntradaPorTransferenciaDe100

	^ 'Entrada por transferencia de 100'!

!methodRemoval: AccountReportTest #AAAtest09AccountSummaryOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:11:56'!
AAAtest09AccountSummaryOfPortfolioWithPortfolio
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  for: aPortfolio) apply) equals:self depositReportDescription,String crString,self withdrawReportDescription,String crString,(self balanceFor: 0 ).
	
	!

!methodRemoval: Account #initialize stamp: 'toto 10/25/2023 20:15:47'!
initialize

	self initializeNamed:'Sin nombre'.!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 20:15:50'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCanBeRenamed stamp: 'toto 10/25/2023 20:15:50'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanBeCreatedWithName stamp: 'toto 10/25/2023 20:15:50'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 20:15:52'!
ERROR!
!Account class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 20:16:28' overrides: 16785646!
new

	^self basicNew intializeNamed:''.! !
!Account class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 20:17:00' prior: 50661607 overrides: 16785646!
new

	^self basicNew initializeNamed:''.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanBeRenamed stamp: 'toto 10/25/2023 20:17:03'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanBeCreatedWithName stamp: 'toto 10/25/2023 20:17:03'!
PASSED!
!Portfolio methodsFor: 'initialization' stamp: 'toto 10/25/2023 20:17:53' prior: 50659850 overrides: 50659822!
initializeNamed: aName
	
	super initializeNamed: aName.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'toto 10/25/2023 20:18:13' prior: 50659657 overrides: 50659822!
initializeNamed: aName 
	
	super initializeNamed:aName.
	transactions:= OrderedCollection new.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 20:18:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 20:18:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 20:18:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 20:18:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 20:18:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 20:18:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 20:18:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeRenamed stamp: 'toto 10/25/2023 20:18:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test09ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 20:18:14'!
ERROR!
!Account methodsFor: 'initialization' stamp: 'toto 10/25/2023 20:18:34' prior: 50659822!
initializeNamed: aName
	name:= aName.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 20:19:29'!
test08ReceptiveAccountCanBeCreatedWithName

	| aReceptiveAccount|
	
	aReceptiveAccount := ReceptiveAccount named:'Marcelo'.
	
		
	self assert: (aReceptiveAccount isNamed:'Marcelo').
! !

!methodRemoval: ReceptiveAccountTest #test09ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 20:19:29'!
test09ReceptiveAccountCanBeCreatedWithName

	| aReceptiveAccount|
	
	aReceptiveAccount := ReceptiveAccount named:'Marcelo'.
	
		
	self assert: (aReceptiveAccount isNamed:'Marcelo').
!

!methodRemoval: ReceptiveAccountTest #test08ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 20:19:31'!
test08ReceptiveAccountCanBeCreatedWithName

	| aReceptiveAccount|
	
	aReceptiveAccount := ReceptiveAccount named:'Marcelo'.
	
		
	self assert: (aReceptiveAccount isNamed:'Marcelo').
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 20:20:00'!
test08ReceptiveAccountCanBeCreated

	| aReceptiveAccount|
	
	aReceptiveAccount := ReceptiveAccount new.
	
	aReceptiveAccount rename: 'Marcelo'.
		
	self assert: (aReceptiveAccount isNamed:'Marcelo').
! !

!methodRemoval: ReceptiveAccountTest #test08ReceptiveAccountCanBeRenamed stamp: 'toto 10/25/2023 20:20:09'!
test08ReceptiveAccountCanBeRenamed

	| aReceptiveAccount|
	
	aReceptiveAccount := ReceptiveAccount new.
	
	aReceptiveAccount rename: 'Marcelo'.
		
	self assert: (aReceptiveAccount isNamed:'Marcelo').
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'toto 10/25/2023 20:20:22'!
test08ReceptiveAccountCanBeCreatedWithName

	| aReceptiveAccount|
	
	aReceptiveAccount := ReceptiveAccount named: 'Marcelo'.
	
		
	self assert: (aReceptiveAccount isNamed:'Marcelo').
! !

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeCreated stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:20:23'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanBeRenamed stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCanBeCreatedWithName stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeCreated stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #TransferTest #test01Transfer stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #TransferTest #test02CantTransferToSelf stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #TransferTest #test03ValueCantBeNegative stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #TransferTest #test04ValueCantBeZero stamp: 'toto 10/25/2023 20:20:23'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:20:23'!
FAILURE!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 20:20:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'toto 10/25/2023 20:20:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 20:20:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'toto 10/25/2023 20:20:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'toto 10/25/2023 20:20:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'toto 10/25/2023 20:20:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'toto 10/25/2023 20:20:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'toto 10/25/2023 20:20:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeCreated stamp: 'toto 10/25/2023 20:20:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 20:20:27'!
PASSED!

!methodRemoval: ReceptiveAccountTest #test08ReceptiveAccountCanBeCreated stamp: 'toto 10/25/2023 20:20:30'!
test08ReceptiveAccountCanBeCreated

	| aReceptiveAccount|
	
	aReceptiveAccount := ReceptiveAccount new.
	
	aReceptiveAccount rename: 'Marcelo'.
		
	self assert: (aReceptiveAccount isNamed:'Marcelo').
!

!methodRemoval: PortfolioTest #test16PortfolioCanBeRenamed stamp: 'toto 10/25/2023 20:20:37'!
test16PortfolioCanBeRenamed

	| portfolio |
	portfolio:= Portfolio new.
	portfolio rename: 'familia'.
	
	self assert: (portfolio isNamed: 'familia').!
!PortfolioTest methodsFor: 'tests' stamp: 'toto 10/25/2023 20:20:41'!
test16PortfolioCanBeCreatedWithName

	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (portfolio isNamed: 'familia').! !

!methodRemoval: PortfolioTest #test17PortfolioCanBeCreatedWithName stamp: 'toto 10/25/2023 20:20:41'!
test17PortfolioCanBeCreatedWithName

	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (portfolio isNamed: 'familia').!

!testRun: #PortfolioTest #test16PortfolioCanBeCreatedWithName stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCanBeCreatedWithName stamp: 'toto 10/25/2023 20:20:43'!
PASSED!

!methodRemoval: ReceptiveAccountTest #test08ReceptiveAccountCanBeCreatedWithName stamp: 'toto 10/25/2023 20:21:11'!
test08ReceptiveAccountCanBeCreatedWithName

	| aReceptiveAccount|
	
	aReceptiveAccount := ReceptiveAccount named: 'Marcelo'.
	
		
	self assert: (aReceptiveAccount isNamed:'Marcelo').
!

!methodRemoval: PortfolioTest #test16PortfolioCanBeCreatedWithName stamp: 'toto 10/25/2023 20:21:21'!
test16PortfolioCanBeCreatedWithName

	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (portfolio isNamed: 'familia').!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:21:31' prior: 50660751!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia'
	! !

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:21:39'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:22:35' prior: 50660760!
apply
	^portfolio name , String crString, String tab.! !
!Portfolio methodsFor: 'transactions' stamp: 'toto 10/25/2023 20:24:43' prior: 50656265 overrides: 50657845!
withTransactionsDo: aOneArgBlock 
	
	accounts do:[:account| account withTransactionsDo: aOneArgBlock ].! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:27:13' prior: 50662171!
apply
	| resultado |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name, String crString, String tab.
	portfolio withFirstAccountsDo:[:account|(resultado nextPutAll:( account name))].
	
	^resultado.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:27:17'!
ERROR!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:27:17'!
ERROR!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:27:18'!
ERROR!
!Portfolio methodsFor: 'x' stamp: 'toto 10/25/2023 20:27:29'!
withFirstAccountsDo: aRenameMe1 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'x' stamp: 'toto 10/25/2023 20:28:14' prior: 50662205!
withFirstAccountsDo: aOneArgBlock 
	aOneArgBlock value: accounts first name.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:28:15'!
ERROR!
!Portfolio methodsFor: 'x' stamp: 'toto 10/25/2023 20:29:28' prior: 50662210!
withFirstAccountsDo: aOneArgBlock 
	accounts isEmpty ifFalse:[aOneArgBlock value: accounts first name].
	! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:29:29'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:30:13' prior: 50662184!
apply
	| resultado |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withFirstAccountsDo:[:account|(resultado nextPutAll:( account name))].
	
	^resultado.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:30:47' prior: 50662230!
apply
	| resultado |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withFirstAccountsDo:[:account|	 resultado nextPutAll: String crString, String tab.(resultado nextPutAll:( account name))].

	
	^resultado.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:30:48'!
FAILURE!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:30:48'!
FAILURE!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:30:50'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:31:03' prior: 50662240!
apply
	| resultado |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withFirstAccountsDo:[:account|	 resultado nextPutAll: String crString, String tab.(resultado nextPutAll:( account name))].

	
	^resultado contents.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:31:04'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:31:04'!
FAILURE!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:31:04'!
FAILURE!

(TreeStructureReport of: portfolio) apply!
!Account methodsFor: 'name' stamp: 'toto 10/25/2023 20:31:55' overrides: 16903442!
name 

	^name.! !

!methodRemoval: Portfolio #name stamp: 'toto 10/25/2023 20:31:56'!
name 

	^name.!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:32:03'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:32:03'!
FAILURE!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:32:03'!
FAILURE!
!Account methodsFor: 'name' stamp: 'toto 10/25/2023 20:32:32' prior: 50662288 overrides: 16903442!
name 

	^name.! !
!Portfolio methodsFor: 'x' stamp: 'toto 10/25/2023 20:33:04' prior: 50662219!
withFirstAccountsDo: aOneArgBlock 
	accounts isEmpty ifFalse:[aOneArgBlock value: accounts first].
	! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 20:33:06'!
PASSED!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:33:09'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:33:09'!
PASSED!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:33:15' prior: 50662263!
apply
	| resultado |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withFirstAccountsDo:[:account|	 resultado nextPutAll: String crString, String tab.(resultado nextPutAll:( account name))].

	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:33:23' prior: 50662383!
apply
	| resultado |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withFirstAccountsDo:[:account|	 resultado nextPutAll: String crString, String tab.(resultado nextPutAll:( account name))].

	^resultado contents.! !
!Portfolio methodsFor: 'x' stamp: 'toto 10/25/2023 20:34:05' prior: 50662310!
withFirstAccountsDo: aOneArgBlock 

	accounts isEmpty ifFalse:[aOneArgBlock value: accounts first].
	! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:34:35'!
test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Maria'
	! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:35:00' prior: 50662413!
test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	portfolio add: (ReceptiveAccount named:'Jose').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Maria',String crString, String tab, 'Jose'.
	! !

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 20:35:12'!
FAILURE!
!Portfolio methodsFor: 'x' stamp: 'toto 10/25/2023 20:35:26'!
withAccountsDo: aOneArgBlock 

	accounts isEmpty ifFalse:[aOneArgBlock value: accounts first].
	! !
!TreeStructureReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:35:26' prior: 50662395!
apply
	| resultado |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo:[:account|	 resultado nextPutAll: String crString, String tab.(resultado nextPutAll:( account name))].

	^resultado contents.! !

!methodRemoval: Portfolio #withFirstAccountsDo: stamp: 'toto 10/25/2023 20:35:26'!
withFirstAccountsDo: aOneArgBlock 

	accounts isEmpty ifFalse:[aOneArgBlock value: accounts first].
	!
!Portfolio methodsFor: 'x' stamp: 'toto 10/25/2023 20:36:25' prior: 50662445!
withAccountsDo: aOneArgBlock 

	accounts do:[:account| aOneArgBlock  value: account].
	! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 20:36:26'!
PASSED!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:36:29'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:36:29'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 20:36:29'!
PASSED!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:37:06'!
test04TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	portfolio add: (ReceptiveAccount named:'Jose').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Maria',String crString, String tab, 'Jose'.
	! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:37:34' prior: 50662546!
test04TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (Portfolio named: 'familia2').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia'.	! !

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:37:36'!
FAILURE!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:37:48' prior: 50662561!
test04TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (Portfolio named: 'familia2').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2'.	! !

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:37:49'!
PASSED!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:37:49'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:37:49'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 20:37:49'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:37:49'!
PASSED!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:38:07'!
test04TreeStructureReportOfPortfolioWithEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (Portfolio named: 'familia2').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2'.	! !

!methodRemoval: PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:38:07'!
test04TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (Portfolio named: 'familia2').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2'.	!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:38:15'!
test04TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (Portfolio named: 'familia2').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2'.	! !

!methodRemoval: PortfolioReportTest #test04TreeStructureReportOfPortfolioWithEmptyPortfolio stamp: 'toto 10/25/2023 20:38:15'!
test04TreeStructureReportOfPortfolioWithEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (Portfolio named: 'familia2').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2'.	!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:39:10' prior: 50662633!
test04TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2'.	! !

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:39:11'!
PASSED!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:39:11'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:39:11'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 20:39:11'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:39:11'!
PASSED!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:39:48' prior: 50662658!
test04TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	! !

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:39:49'!
FAILURE!
!Portfolio methodsFor: 'x' stamp: 'toto 10/25/2023 20:40:45' prior: 50662469!
withAccountsDo: aOneArgBlock 

	accounts do:[:account| aOneArgBlock  value: (account withAccountsDo:aOneArgBlock)].
	! !
!Portfolio methodsFor: 'x' stamp: 'toto 10/25/2023 20:40:52' prior: 50662710!
withAccountsDo: aOneArgBlock 

	accounts do:[:account| account withAccountsDo:aOneArgBlock].
	! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 20:40:53'!
PASSED!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:41:34'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:41:34'!
ERROR!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 20:41:34'!
ERROR!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:41:34'!
ERROR!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:41:36'!
ERROR!
!ReceptiveAccount methodsFor: 'x' stamp: 'toto 10/25/2023 20:41:43'!
withAccountsDo: aOneArgBlock 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'x' stamp: 'toto 10/25/2023 20:41:52' prior: 50662802!
withAccountsDo: aOneArgBlock 
	aOneArgBlock value: self.! !

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:41:54'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 20:41:56'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:41:56'!
FAILURE!

(TreeStructureReport of: portfolio) apply!
!Portfolio methodsFor: 'x' stamp: 'toto 10/25/2023 20:42:49'!
withSelfAndAccountsDo: aOneArgBlock 

	accounts do:[:account| account withAccountsDo:aOneArgBlock].
	! !
!ReceptiveAccount methodsFor: 'x' stamp: 'toto 10/25/2023 20:42:49'!
withSelfAndAccountsDo: aOneArgBlock 
	aOneArgBlock value: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:42:49' prior: 50662717!
withAccountsDo: aOneArgBlock 

	accounts do:[:account| account withSelfAndAccountsDo:aOneArgBlock].
	! !
!TreeStructureReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:42:49' prior: 50662452!
apply
	| resultado |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withSelfAndAccountsDo:[:account|	 resultado nextPutAll: String crString, String tab.(resultado nextPutAll:( account name))].

	^resultado contents.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:42:49' prior: 50662825!
withSelfAndAccountsDo: aOneArgBlock 

	accounts do:[:account| account withSelfAndAccountsDo:aOneArgBlock].
	! !

!methodRemoval: Portfolio #withAccountsDo: stamp: 'toto 10/25/2023 20:42:49'!
withAccountsDo: aOneArgBlock 

	accounts do:[:account| account withSelfAndAccountsDo:aOneArgBlock].
	!

!methodRemoval: ReceptiveAccount #withAccountsDo: stamp: 'toto 10/25/2023 20:42:49'!
withAccountsDo: aOneArgBlock 
	aOneArgBlock value: self.!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:51:23' prior: 50662844!
apply
	| resultado |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	resultado nextPutAll: String crString.
	portfolio withSelfAndAccountsDo:[:account| | amountTabs |	 resultado nextPutAll: String crString, String tab.(resultado nextPutAll:( account name)).amountTabs:= amountTabs+1].

	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:51:35' prior: 50662873!
apply
	| resultado  amountTabs |	
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	resultado nextPutAll: String crString.
	portfolio withSelfAndAccountsDo:[:account|  resultado nextPutAll: String crString, String tab.(resultado nextPutAll:( account name)).amountTabs:= amountTabs+1].

	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:53:49' prior: 50662887!
apply

	! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:54:42' prior: 50662901!
apply

	portfolio withAccountsDo: [:account | | resultado |
		account class = ReceptiveAccount 
			ifTrue:[ resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: (TreeStructureReport of: account) apply]]! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:55:06' prior: 50662905!
apply
	| resultado |
	
	portfolio withAccountsDo: [:account | 
		account class = ReceptiveAccount 
			ifTrue:[ resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: (TreeStructureReport of: account) apply]].
	
	^resultado.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:55:31' prior: 50662916!
apply
	| resultado |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withSelfAndAccountsDo: [:account | 
		account class = ReceptiveAccount 
			ifTrue:[ resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: (TreeStructureReport of: account) apply]].
	
	^resultado.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:56:22'!
FAILURE!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:56:22'!
FAILURE!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 20:56:22'!
FAILURE!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:56:22'!
FAILURE!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:56:25'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:56:33' prior: 50662927!
apply
	| resultado |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withSelfAndAccountsDo: [:account | 
		account class = ReceptiveAccount 
			ifTrue:[ resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: (TreeStructureReport of: account) apply]].
	
	^resultado contents.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:56:34'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:56:34'!
FAILURE!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 20:56:34'!
FAILURE!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:56:34'!
FAILURE!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:56:36'!
FAILURE!
!Portfolio methodsFor: 'x' stamp: 'toto 10/25/2023 20:56:52'!
withAccountsDo: aOneArgBlock 

	accounts do:[:account| account withSelfAndAccountsDo:aOneArgBlock].
	! !
!ReceptiveAccount methodsFor: 'x' stamp: 'toto 10/25/2023 20:56:52'!
withAccountsDo: aOneArgBlock 
	aOneArgBlock value: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:56:52' prior: 50662856!
withSelfAndAccountsDo: aOneArgBlock 

	accounts do:[:account| account withAccountsDo:aOneArgBlock].
	! !
!TreeStructureReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:56:52' prior: 50662961!
apply
	| resultado |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		account class = ReceptiveAccount 
			ifTrue:[ resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: (TreeStructureReport of: account) apply]].
	
	^resultado contents.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 20:56:52' prior: 50662995!
withAccountsDo: aOneArgBlock 

	accounts do:[:account| account withAccountsDo:aOneArgBlock].
	! !

!methodRemoval: Portfolio #withSelfAndAccountsDo: stamp: 'toto 10/25/2023 20:56:52'!
withSelfAndAccountsDo: aOneArgBlock 

	accounts do:[:account| account withAccountsDo:aOneArgBlock].
	!

!methodRemoval: ReceptiveAccount #withSelfAndAccountsDo: stamp: 'toto 10/25/2023 20:56:52'!
withSelfAndAccountsDo: aOneArgBlock 
	aOneArgBlock value: self.!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:57:56' prior: 50663013!
apply
	| resultado |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString.
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: (TreeStructureReport of: account) apply]].
	
	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 20:59:06' prior: 50663044!
apply
	| resultado |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString, String tab.
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: (TreeStructureReport of: account) apply]].
	
	^resultado contents.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:59:07'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:59:07'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 20:59:07'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:59:07'!
FAILURE!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:59:07'!
FAILURE!
!Portfolio methodsFor: 'x' stamp: 'toto 10/25/2023 20:59:46' prior: 50663027!
withAccountsDo: aOneArgBlock 

	accounts do:aOneArgBlock.
	! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 20:59:47'!
PASSED!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 20:59:50'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 20:59:50'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 20:59:50'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:59:50'!
FAILURE!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 20:59:50'!
FAILURE!

(TreeStructureReport of: portfolio) apply!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:00:41' prior: 50663059!
apply
	| resultado |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString, String tab.
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: String tab,(TreeStructureReport of: account) apply]].
	
	^resultado contents.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 21:00:43'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:00:43'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 21:00:43'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:00:44'!
FAILURE!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:00:44'!
FAILURE!

(TreeStructureReport of: portfolio) apply!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:02:03' prior: 50663181!
apply
	| resultado |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString, String tab.
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: (TreeStructureReport of: account) apply,String tab]].
	
	^resultado contents.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 21:02:04'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:02:04'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 21:02:04'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:02:04'!
FAILURE!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:02:04'!
FAILURE!

(TreeStructureReport of: portfolio) apply!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:02:45' prior: 50663219!
apply
	| resultado |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString, String tab.
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: (TreeStructureReport of: account) apply]].
	
	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:02:52' prior: 50663257!
apply
	| resultado |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString, String tab.
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: (TreeStructureReport of: account) apply]].
	
	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:03:20' prior: 50663273!
apply
	| resultado level |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	level := 0.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString, String tab.
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: (TreeStructureReport of: account withLevel: level) apply]].
	
	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:03:33' prior: 50663289!
apply
	| resultado accountTreeLevel |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	accountTreeLevel := 0.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString, String tab.
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: (TreeStructureReport of: account withLevel: accountTreeLevel) apply]].
	
	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:04:19'!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString, String tab.
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll: (TreeStructureReport of: account withLevel: level) apply]].
	
	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:04:58' prior: 50663323!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString, String tab.
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:( (TreeStructureReport of: account )applyWith:level)]].
	
	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:05:27' prior: 50663306!
apply
	^self applyWith:0.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 21:05:40'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:05:40'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 21:05:40'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:05:40'!
FAILURE!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:05:40'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:06:03' prior: 50663340!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString, String tab.
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:( (TreeStructureReport of: account )applyWith:level+1)]].
	
	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:06:51' prior: 50663381!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString, (String tab * level).
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account )applyWith:level+1)]].
	
	^resultado contents.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 21:06:53'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:06:53'!
ERROR!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 21:06:53'!
ERROR!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:06:53'!
ERROR!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:06:55'!
ERROR!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:07:06' prior: 50663397!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString, (String tab timesRepeat:level).
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account )applyWith:level+1)]].
	
	^resultado contents.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 21:07:07'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:07:07'!
ERROR!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 21:07:07'!
ERROR!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:07:07'!
ERROR!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:07:11'!
ERROR!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:08:38' prior: 50663434!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString,( level timesRepeat: (resultado nextPutAll:String tab)).
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account )applyWith:level+1)]].
	
	^resultado contents.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 21:08:40'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:08:40'!
ERROR!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 21:08:40'!
ERROR!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:08:40'!
ERROR!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:08:42'!
ERROR!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:09:02' prior: 50663472!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString.
		 level timesRepeat: (resultado nextPutAll:String tab).
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account )applyWith:level+1)]].
	
	^resultado contents.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 21:09:04'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:09:04'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 21:09:04'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:09:04'!
FAILURE!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:09:04'!
FAILURE!

(TreeStructureReport of: portfolio) apply!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:09:56' prior: 50663510!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString.
		 level+1 timesRepeat: (resultado nextPutAll:String tab).
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account )applyWith:level+1)]].
	
	^resultado contents.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 21:09:57'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:09:57'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 21:09:57'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:09:57'!
FAILURE!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:09:57'!
FAILURE!

(TreeStructureReport of: portfolio) apply!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:10:32' prior: 50663550!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString.
		level+1 timesRepeat: [resultado nextPutAll:String tab]s.
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account )applyWith:level+1)]].
	
	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:10:33' prior: 50663590!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString.
		level+1 timesRepeat: [resultado nextPutAll:String tab].
		account class = ReceptiveAccount 
			ifTrue:[resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account )applyWith:level+1)]].
	
	^resultado contents.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 21:10:35'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:10:35'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 21:10:35'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:10:35'!
PASSED!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 21:11:19'!
test05TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 21:11:55' prior: 50663642!
test05TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria');yourself).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 21:12:24' prior: 50663657!
test05TreeStructureReportOfPortfolioWithPortfolio
	| portfolio portfolio2 |
	portfolio:= Portfolio named: 'familia'.
	
	portfolio add: portfolio2.
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 21:12:38' prior: 50663672!
test05TreeStructureReportOfPortfolioWithPortfolio
	| portfolio portfolio2 |
	portfolio:= Portfolio named: 'familia'.
	portfolio2 := (Portfolio named: 'familia2' ) add:(ReceptiveAccount named: 'Maria').
	portfolio add: portfolio2.
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 21:13:55' prior: 50663686!
test05TreeStructureReportOfPortfolioWithPortfolio
	| portfolio portfolio2 |
	portfolio:= Portfolio named: 'familia'.
	portfolio2 := (Portfolio named: 'familia2' ) add:(ReceptiveAccount named: 'Maria2').
	portfolio add: portfolio2.
	
	portfolio2 add:(((Portfolio named: 'familia3' ) add:(ReceptiveAccount named: 'Maria3') )add:(ReceptiveAccount named:'Maria32')).
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	! !

!testRun: #PortfolioReportTest #test05TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:13:57'!
FAILURE!

(TreeStructureReport of: portfolio) apply!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 21:12:24' prior: 50663702!
test05TreeStructureReportOfPortfolioWithPortfolio
	| portfolio portfolio2 |
	portfolio:= Portfolio named: 'familia'.
	
	portfolio add: portfolio2.
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 21:11:19' prior: 50663728!
test05TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	! !

!testRun: #PortfolioReportTest #test05TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:15:06'!
PASSED!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 21:15:06'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:15:06'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 21:15:06'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:15:06'!
PASSED!

!testRun: #PortfolioReportTest #test05TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:15:06'!
PASSED!

!methodRemoval: PortfolioReportTest #test05TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:15:16'!
test05TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	!

!methodRemoval: Account #rename: stamp: 'toto 10/25/2023 21:16:06'!
rename: aName 
	name:=aName.!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/25/2023 21:16:12'!
PASSED!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 21:16:16'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:16:16'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 21:16:16'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:16:16'!
PASSED!

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 21:39:16'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 21:39:16'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 21:39:16'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 21:39:16'!
PASSED!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:39:27' prior: 50663608!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString.
		level+1 timesRepeat: [resultado nextPutAll:String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account )applyWith:level+1)]].
	
	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:39:37' prior: 50663891!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll:String crString.
		level+1 timesRepeat: [resultado nextPutAll:String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:39:53' prior: 50663909!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll:String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 21:40:03' prior: 50663927!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^resultado contents.! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 21:40:16' prior: 50662158!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	
	portfolio:= Portfolio named: 'familia'.
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia'
	! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 21:56:11' prior: 50663963!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	
	portfolio:= Portfolio named: 'familia'.
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia'
	! !
!Portfolio methodsFor: 'transactions' stamp: 'toto 10/25/2023 21:56:21' prior: 50662177 overrides: 50657845!
withTransactionsDo: aOneArgBlock 
	accounts do:[:account| account withTransactionsDo: aOneArgBlock ].! !
!Portfolio methodsFor: 'accounts management' stamp: 'toto 10/25/2023 22:07:46' prior: 50663095!
withAccountsDo: aOneArgBlock 

	accounts do: aOneArgBlock.
	! !

Object subclass: #BonusReport
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #BonusReport category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 22:22:42'!
Object subclass: #BonusReport
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #PortfolioReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 22:22:55'!
Object subclass: #PortfolioReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

PortfolioReport subclass: #BonusReport
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #BonusReport category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 22:23:04'!
PortfolioReport subclass: #BonusReport
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

PortfolioReport subclass: #TreeStructureReport
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TreeStructureReport category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 22:23:12'!
PortfolioReport subclass: #TreeStructureReport
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Report category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 22:23:25'!
Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Report subclass: #PortfolioReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 22:23:33'!
Report subclass: #PortfolioReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Report subclass: #AccountReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReport category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 22:23:41'!
Report subclass: #AccountReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #BonusReport category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 22:23:57'!
PortfolioReport subclass: #BonusReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TreeStructureReport category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 22:23:57'!
PortfolioReport subclass: #TreeStructureReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 22:23:57'!
Report subclass: #PortfolioReport
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Report methodsFor: 'evaluating' stamp: 'toto 10/25/2023 22:24:11'!
apply

	self subclassResponsibility! !
!AccountReport class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 22:25:22'!
of: anAccount
	^self new initializeFor: anAccount! !

!methodRemoval: AccountReport class #for: stamp: 'toto 10/25/2023 22:25:22'!
for: anAccount
	^self new initializeFor: anAccount!
!AccountReport methodsFor: 'initialize' stamp: 'toto 10/25/2023 22:25:34'!
initializeOf: anAccount 
	account := anAccount.! !
!AccountReport class methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 22:25:34' prior: 50664107!
of: anAccount
	^self new initializeOf: anAccount! !

!methodRemoval: AccountReport #initializeFor: stamp: 'toto 10/25/2023 22:25:34'!
initializeFor: anAccount 
	account := anAccount.!
!PortfolioReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:27:35'!
test01PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	
	
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	! !

!testRun: #PortfolioReportTest #test01PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:27:36'!
ERROR!
!PortfolioReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:27:45'!
test05PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	
	
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	! !

!methodRemoval: PortfolioReportTest #test01PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:27:48'!
test01PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	
	
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	!
!PortfolioReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:27:53' prior: 50664143!
test05PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	! !

!testRun: #PortfolioReportTest #test05PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:27:54'!
ERROR!
!BonusReport class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 22:28:00'!
of: portfolio 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeOf: portfolio ! !
!BonusReport class methodsFor: 'instance creation' stamp: 'toto 10/25/2023 22:28:03' prior: 50664174!
of: portfolio 
	^self new initializeOf: portfolio ! !

!testRun: #PortfolioReportTest #test05PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:28:05'!
ERROR!

!classDefinition: #BonusReport category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 22:28:14'!
PortfolioReport subclass: #BonusReport
	instanceVariableNames: 'portfolio_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #PortfolioReportTest #test05PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:28:23'!
ERROR!
!AccountReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 22:28:35' prior: 50657497 overrides: 50664103!
apply
	self subclassResponsibility! !
!BonusReport methodsFor: 'no messages' stamp: 'toto 10/25/2023 22:29:30'!
initializeOf:aPortfolio
	portfolio:= aPortfolio.! !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 22:29:32' prior: 50664207!
initializeOf:aPortfolio
	portfolio:= aPortfolio.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:29:33'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:29:33'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 22:29:33'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 22:29:33'!
PASSED!

!testRun: #PortfolioReportTest #test05PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:29:33'!
ERROR!

!testRun: #PortfolioReportTest #test05PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:29:33'!
ERROR!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 22:30:00' overrides: 50664103!
apply
	^portfolio name.! !

!testRun: #PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:30:01'!
PASSED!

!testRun: #PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:30:01'!
PASSED!

!testRun: #PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 22:30:01'!
PASSED!

!testRun: #PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 22:30:01'!
PASSED!

!testRun: #PortfolioReportTest #test05PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:30:01'!
PASSED!
!PortfolioReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:30:28'!
test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	! !
!PortfolioReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:31:07' prior: 50664265!
test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= (Portfolio named: 'familia') add:(ReceptiveAccount named:'Maria').
	
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	! !
!PortfolioReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:31:14' prior: 50664275!
test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	portfolio:= (Portfolio named: 'familia') add:(aReceptiveAccount).
	
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	! !
!PortfolioReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:31:22' prior: 50664286!
test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	! !
!PortfolioReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:32:25' prior: 50664299!
test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, (AccountSummaryReport of:aReceptiveAccount ).	! !
!PortfolioReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:33:00' prior: 50664312!
test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab, (AccountSummaryReport of:aReceptiveAccount ).	! !

!testRun: #PortfolioReportTest #test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:33:01'!
ERROR!
!PortfolioReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:33:11' prior: 50664329!
test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab, (AccountSummaryReport of:aReceptiveAccount ) apply.	! !

!testRun: #PortfolioReportTest #test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:33:11'!
FAILURE!

 'familia',String crString, String tab, 'Maria',String crString,String tab, (AccountSummaryReport of:aReceptiveAccount ) apply!
!PortfolioReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:35:53' prior: 50664351!
test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,   (AccountSummaryReport of:aReceptiveAccount ) apply.	! !
!PortfolioReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:36:01' prior: 50664377!
test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,   'Balance por 100'.	! !

!testRun: #PortfolioReportTest #test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:36:01'!
FAILURE!

'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,   'Balance por 100'!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 22:39:31'!
applyWith:level

	| resultado |
	resultado := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction| resultado nextPutAll:( level timesRepeat:[resultado nextPutAll: String tab]).(transaction printTransaction, String crString)].
	
	^(resultado nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 22:39:46' prior: 50655879 overrides: 50664203!
apply

	^self applyWith:0.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 22:39:47'!
ERROR!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 22:39:47'!
ERROR!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 22:39:47'!
ERROR!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 22:39:47'!
ERROR!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 22:39:47'!
ERROR!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:39:47'!
ERROR!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:39:47'!
ERROR!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 22:39:47'!
ERROR!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 22:39:47'!
ERROR!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 22:39:47'!
ERROR!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 22:39:47'!
ERROR!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 22:39:47'!
ERROR!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 22:39:50'!
ERROR!
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 22:40:10' prior: 50661380!
test01AccountSummaryReportOfVirginReceptiveAccount
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals: (self balanceFor: 0).
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 22:40:12'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 22:40:13'!
ERROR!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 22:40:15'!
ERROR!

AccountReportTest subclass: #PortfolioReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReportTest category: 'Portfolio-Solucion' stamp: 'toto 10/25/2023 22:41:01'!
AccountReportTest subclass: #PortfolioReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:41:06'!
test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,   'Balance por 100'.	! !

!methodRemoval: PortfolioReportTest #test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:41:06'!
test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,   'Balance por 100'.	!
!AccountReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:41:10'!
test05PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	! !

!methodRemoval: PortfolioReportTest #test05PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:41:10'!
test05PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	!
!AccountReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:41:14'!
test04TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	! !

!methodRemoval: PortfolioReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 22:41:14'!
test04TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	!
!AccountReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:41:16'!
test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	portfolio add: (ReceptiveAccount named:'Jose').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Maria',String crString, String tab, 'Jose'.
	! !

!methodRemoval: PortfolioReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 22:41:16'!
test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	portfolio add: (ReceptiveAccount named:'Jose').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Maria',String crString, String tab, 'Jose'.
	!
!AccountReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:41:22'!
test02TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Maria'
	! !

!methodRemoval: PortfolioReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:41:22'!
test02TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Maria'
	!
!AccountReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:41:28'!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	
	portfolio:= Portfolio named: 'familia'.
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia'
	! !

!methodRemoval: PortfolioReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:41:28'!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	
	portfolio:= Portfolio named: 'familia'.
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia'
	!

!classRemoval: #PortfolioReportTest stamp: 'toto 10/25/2023 22:41:33'!
AccountReportTest subclass: #PortfolioReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:41:41'!
test13TreeStructureReportOfEmptyPortfolio
	| portfolio |
	
	portfolio:= Portfolio named: 'familia'.
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia'
	! !

!methodRemoval: AccountReportTest #test01TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:41:41'!
test01TreeStructureReportOfEmptyPortfolio
	| portfolio |
	
	portfolio:= Portfolio named: 'familia'.
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia'
	!
!AccountReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:41:52'!
test14TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Maria'
	! !

!methodRemoval: AccountReportTest #test02TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:41:52'!
test02TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Maria'
	!
!AccountReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:41:56'!
test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	portfolio add: (ReceptiveAccount named:'Jose').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Maria',String crString, String tab, 'Jose'.
	! !

!methodRemoval: AccountReportTest #test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 22:41:56'!
test03TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	portfolio add: (ReceptiveAccount named:'Jose').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'Maria',String crString, String tab, 'Jose'.
	!
!AccountReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:42:00'!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	! !

!methodRemoval: AccountReportTest #test04TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 22:42:00'!
test04TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',String crString,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	!
!AccountReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:42:06'!
test17PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	! !

!methodRemoval: AccountReportTest #test05PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:42:06'!
test05PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	!
!AccountReportTest methodsFor: 'treeStructureTest' stamp: 'toto 10/25/2023 22:42:10'!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,   'Balance por 100'.	! !

!methodRemoval: AccountReportTest #test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:42:10'!
test06PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,   'Balance por 100'.	!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/25/2023 22:42:44' prior: 50664804!
test17PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/25/2023 22:42:45' prior: 50664860!
test17PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	self assert: (BonusReport of: portfolio) apply equals: 'familia'.	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/25/2023 22:43:22' prior: 50664822!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,   'Balance por 100'.	! !

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:43:23'!
FAILURE!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 22:44:21' prior: 50664241 overrides: 50664103!
apply
	^self applyWith:0! !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 22:46:01'!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name.
				      resultado nextPutAll:((AccountSummaryReport of:account ) applyWith:level+1)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^resultado contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 22:46:07'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 22:46:07'!
ERROR!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 22:46:07'!
ERROR!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 22:46:07'!
ERROR!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 22:46:07'!
ERROR!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:46:07'!
ERROR!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:46:07'!
ERROR!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 22:46:07'!
ERROR!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 22:46:07'!
ERROR!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 22:46:07'!
ERROR!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 22:46:07'!
ERROR!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 22:46:07'!
ERROR!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:46:07'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:46:07'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 22:46:07'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 22:46:07'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:46:07'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:46:07'!
ERROR!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 22:46:15'!
ERROR!
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 22:46:32' prior: 50661290!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self depositReportDescription,String crString,(self balanceFor:100) .
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 22:46:47' prior: 50661416!
test03AccountSummaryReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self withdrawReportDescription,String crString,(self balanceFor: -100).
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 22:46:51' prior: 50661485!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self transferWithdrawReportDescription,String crString,(self balanceFor: -100) .
	self assert: ((AccountSummaryReport  for: anotherReceptiveAccount) apply) equals:self transferDepositReportDescription,String crString,(self balanceFor:100) .
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 22:46:54' prior: 50665033!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self transferWithdrawReportDescription,String crString,(self balanceFor: -100) .
	self assert: ((AccountSummaryReport  of: anotherReceptiveAccount) apply) equals:self transferDepositReportDescription,String crString,(self balanceFor:100) .
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 22:46:57' prior: 50661359!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self transferWithdrawReportDescription,String crString,self depositReportDescription,String crString,(self balanceFor: 0).
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 22:47:01' prior: 50661349!
test06AccountSummaryReportOfEmptyPortfolio
	
	| aPortfolio |
	aPortfolio := Portfolio new.
	self assert: ((AccountSummaryReport  of: aPortfolio) apply) equals:(self balanceFor: 0) .
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 22:47:12' prior: 50661391!
test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  of: aPortfolio) apply) equals:self depositReportDescription ,String crString,(self balanceFor: 100) .
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/25/2023 22:47:17' prior: 50661453!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  of: aPortfolio) apply) equals:self depositReportDescription,String crString,self withdrawReportDescription,String crString,(self balanceFor: 0 ).
	
	! !

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 22:47:18'!
ERROR!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 22:47:28'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 22:47:30'!
ERROR!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 22:47:30'!
ERROR!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 22:48:01' prior: 50664425!
applyWith:level

	| resultado |
	resultado := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  level timesRepeat:[resultado nextPutAll: String tab].(transaction printTransaction, String crString)].
	
	^(resultado nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 22:48:03'!
FAILURE!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 22:48:25' prior: 50664906!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name.
				      resultado nextPutAll:((AccountSummaryReport of:account ) applyWith:level+1)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	^resultado contents.! !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 22:48:30' prior: 50665180!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name.
				      resultado nextPutAll:((AccountSummaryReport of:account ) applyWith:level+1)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	^resultado contents.! !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 22:51:01' prior: 50665201!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name, ((AccountSummaryReport of:account ) applyWith:level+1)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	^resultado contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 22:51:02'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 22:51:02'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 22:51:02'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 22:51:02'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 22:51:02'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:51:02'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:51:02'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 22:51:02'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 22:51:02'!
ERROR!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 22:51:02'!
ERROR!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 22:51:02'!
ERROR!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 22:51:02'!
ERROR!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:51:02'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:51:02'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 22:51:02'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 22:51:02'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 22:51:02'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 22:51:02'!
FAILURE!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 23:44:45' prior: 50665222!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name.
				      resultado nextPutAll:((AccountSummaryReport of:account ) applyWith:level+1)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	^resultado contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 23:44:46'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:44:46'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 23:44:46'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 23:44:46'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 23:44:46'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:44:46'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:44:46'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:44:46'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:44:46'!
ERROR!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 23:44:46'!
ERROR!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 23:44:46'!
ERROR!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 23:44:46'!
ERROR!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:44:46'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:44:46'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:44:46'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 23:44:46'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:44:46'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:44:46'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:44:52'!
FAILURE!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 23:46:24' prior: 50665162!
applyWith:level

	| resultado |
	resultado := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  level+1 timesRepeat:[resultado nextPutAll: String tab].(transaction printTransaction, String crString)].
	
	^(resultado nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 23:46:25'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:46:25'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 23:46:25'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 23:46:25'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 23:46:25'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:46:25'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:46:25'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:46:25'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:46:25'!
ERROR!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 23:46:25'!
ERROR!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 23:46:25'!
ERROR!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 23:46:25'!
ERROR!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:46:25'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:46:25'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:46:25'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 23:46:25'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:46:25'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:46:25'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:46:27'!
FAILURE!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 23:46:43' prior: 50665415!
applyWith:level

	| resultado |
	resultado := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  level timesRepeat:[resultado nextPutAll: String tab].(transaction printTransaction, String crString)].
	
	^(resultado nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 23:46:48' prior: 50664440 overrides: 50664203!
apply

	^self applyWith:1.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 23:46:49'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:46:49'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 23:46:49'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 23:46:49'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 23:46:49'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:46:49'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:46:49'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:46:49'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:46:49'!
ERROR!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 23:46:49'!
ERROR!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 23:46:49'!
ERROR!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 23:46:49'!
ERROR!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:46:49'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:46:49'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:46:49'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 23:46:49'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:46:49'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:46:49'!
FAILURE!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 23:47:41' prior: 50665507!
applyWith:level

	| resultado |
	resultado := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		level timesRepeat: [resultado nextPutAll: String tab].
		resultado nextPutAll:(transaction printTransaction, String crString)].
	
	^(resultado nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 23:47:43'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:47:43'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 23:47:43'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 23:47:43'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 23:47:43'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:47:43'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:47:43'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:47:43'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:47:43'!
ERROR!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 23:47:43'!
ERROR!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 23:47:43'!
ERROR!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 23:47:43'!
ERROR!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:47:43'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:47:43'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:47:43'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 23:47:43'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:47:43'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:47:43'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:47:44'!
FAILURE!

(AccountSummaryReport  of: aReceptiveAccount) apply!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 23:48:07' prior: 50665521 overrides: 50664203!
apply

	^self applyWith:0.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 23:48:08'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:48:08'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 23:48:08'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 23:48:08'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 23:48:08'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:48:08'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:48:08'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:48:08'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:48:08'!
ERROR!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 23:48:08'!
ERROR!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 23:48:08'!
ERROR!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 23:48:08'!
ERROR!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:48:08'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:48:08'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:48:08'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 23:48:08'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:48:08'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:48:08'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:48:11'!
ERROR!
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 23:48:35' prior: 50660324!
test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions
	
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	
	Deposit register:100 on: aReceptiveAccount.
	Withdraw register: 99 on: aReceptiveAccount.
	
	self assert: ((TransferNetReport  of: aReceptiveAccount) apply) equals: 0.
	
	
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 23:48:35' prior: 50660298!
test09TransferNetReportOfvirginReceptiveAccount
	
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	
	self assert: ((TransferNetReport  of: aReceptiveAccount) apply) equals:0
	.
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 23:48:35' prior: 50660307!
test10TransferNetReportOfReceptiveAccountWithOneTransfer
	
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to:anotherReceptiveAccount.
	
	self assert: ((TransferNetReport  of: aReceptiveAccount) apply) equals: -100.
	self assert: ((TransferNetReport  of: anotherReceptiveAccount ) apply) equals:100.
	.
	
	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 23:48:35' prior: 50660338!
test12TransferNetReportOfReceptiveWithMoreThanOneTransfer
	
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to:anotherReceptiveAccount.
	Transfer register: 99 from: anotherReceptiveAccount to: aReceptiveAccount.
	
	self assert: ((TransferNetReport  of: aReceptiveAccount) apply) equals: -1.
	self assert: ((TransferNetReport  of: anotherReceptiveAccount ) apply) equals:1.
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 23:48:45'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:48:45'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 23:48:45'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:48:46'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:48:46'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:48:46'!
FAILURE!

(BonusReport of: portfolio) apply!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 23:53:10' prior: 50665316!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name.
				      resultado nextPutAll:((AccountSummaryReport of:account ) applyWith:level+1)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	^resultado contents, 'Balance = ', portfolio balance asString.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 23:53:12'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:53:12'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:53:12'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:53:14'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:53:19'!
FAILURE!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 23:53:42' prior: 50665920!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name.
				      resultado nextPutAll:((AccountSummaryReport of:account ) applyWith:level+1)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	^resultado contents.! !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 23:54:17' prior: 50666024!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+1)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	^resultado contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:54:43'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:54:43'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:54:43'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:54:58'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:54:58'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:54:58'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:55:07'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:55:07'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:55:07'!
FAILURE!

 (BonusReport of: portfolio) apply !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 23:56:42' prior: 50666045!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+1)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	^resultado contents.! !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 23:56:54' prior: 50666302!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+2)]].
	^resultado contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:56:56'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:56:56'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:56:56'!
FAILURE!

(BonusReport of: portfolio) apply!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/25/2023 23:57:26' prior: 50666323!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name,String crString.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+2)]].
	^resultado contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:57:28'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:57:28'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:57:28'!
FAILURE!

(BonusReport of: portfolio) apply!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/25/2023 23:58:16' prior: 50665600!
applyWith:level

	| resultado |
	resultado := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		level timesRepeat: [resultado nextPutAll: String tab].
		resultado nextPutAll:(transaction printTransaction, String crString)].
	level timesRepeat: [resultado nextPutAll: String tab].
	^(resultado nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/25/2023 23:58:18'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:58:18'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:58:18'!
FAILURE!

(BonusReport of: portfolio) apply!

'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,   'Balance por 100'!

(BonusReport of: portfolio) apply!

'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,   'Balance por 100'!

(BonusReport of: portfolio) apply!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/25/2023 23:59:34' prior: 50664878!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,   'Balance = 100'.	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/25/2023 23:59:54' prior: 50666632!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,   'Balance = 100',String crString ,'Balance = 100'.	! !

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/25/2023 23:59:55'!
FAILURE!

(BonusReport of: portfolio) apply!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 00:00:54' prior: 50663945!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	level+1 timesRepeat: [resultado nextPutAll: String tab].
	resultado nextPutAll:'Balance = ', portfolio balance asString.
	^resultado contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 00:00:55'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 00:00:55'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 00:00:55'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 00:00:55'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 00:00:55'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:00:55'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:00:55'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:00:55'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 00:00:55'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 00:00:55'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 00:00:55'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 00:00:55'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:00:55'!
FAILURE!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:00:55'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:00:55'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:00:55'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:00:55'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:00:55'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 00:01:03' prior: 50666676!
applyWith:level
	| resultado  |
	
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^resultado contents.! !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:01:11' prior: 50666423!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name,String crString.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+2)]].
	level+1 timesRepeat: [resultado nextPutAll: String tab].
	resultado nextPutAll:'Balance = ', portfolio balance asString.
	^resultado contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:01:12'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:01:12'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:01:12'!
FAILURE!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:01:46' prior: 50664869!
test17PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Balance = 0'.	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:01:50'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:01:50'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:01:51'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:01:52'!
FAILURE!

(BonusReport of: portfolio) apply!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:02:21' prior: 50666790!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name,String crString.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+2)]].
	resultado nextPutAll:String crString.
	level+1 timesRepeat: [resultado nextPutAll: String tab].
	resultado nextPutAll:'Balance = ', portfolio balance asString.
	^resultado contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:02:22'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:02:22'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:02:22'!
FAILURE!

(BonusReport of: portfolio) apply!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:02:47' prior: 50666651!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,   'Balance = 100',String crString ,String tab,'Balance = 100'.	! !

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:02:48'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:02:48'!
PASSED!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:03:37'!
enterEIdentarA: level agregandoA: resultado

	resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab]! !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:03:37' prior: 50666978!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		self enterEIdentarA: level agregandoA: resultado.
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name,String crString.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+2)]].
	resultado nextPutAll:String crString.
	level+1 timesRepeat: [resultado nextPutAll: String tab].
	resultado nextPutAll:'Balance = ', portfolio balance asString.
	^resultado contents.! !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:03:54' prior: 50667190!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		self enterEIdentarA: level agregandoA: resultado.
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name,String crString.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+2)]].
	self enterEIdentarA: level agregandoA: resultado.
	resultado nextPutAll:'Balance = ', portfolio balance asString.
	^resultado contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:03:55'!
PASSED!

!methodRemoval: BonusReport #enterEIdentarA:agregandoA: stamp: 'toto 10/26/2023 00:04:47'!
enterEIdentarA: level agregandoA: resultado

	resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab]!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:04:47' prior: 50667215!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name,String crString.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+2)]].
	resultado nextPutAll: String crString.
level+1 timesRepeat: [resultado nextPutAll: String tab].
	resultado nextPutAll:'Balance = ', portfolio balance asString.
	^resultado contents.! !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:05:02' prior: 50667320!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name,String crString.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+2)]].
	resultado nextPutAll: String crString.
level+1 timesRepeat: [resultado nextPutAll: String tab].
	resultado nextPutAll:'Balance = ', portfolio balance asString.
	^resultado contents.! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:05:35' prior: 50667084!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,'Deposito por 100',String crString, String tab, String tab,  (self balanceFor:100),String crString ,String tab,'Balance = 100'.	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:05:59' prior: 50667372!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,self depositReportDescription ,String crString, String tab, String tab,  (self balanceFor:100),String crString ,String tab,(self balanceFor:100).	! !

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:06:00'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:06:00'!
PASSED!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:06:17' prior: 50666889!
test17PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, (self balanceFor:0).	! !

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:06:18'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:06:18'!
PASSED!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:06:35'!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,self depositReportDescription ,String crString, String tab, String tab,  (self balanceFor:100),String crString ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:06:50' prior: 50667579!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,self depositReportDescription ,String crString, String tab, String tab,  (self balanceFor:100),String crString ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:07:22' prior: 50667600!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,self depositReportDescription ,String crString, String tab, String tab,  (self balanceFor:100),String crString ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:08:02' prior: 50667623!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,self depositReportDescription ,String crString, String tab, String tab,  (self balanceFor:100),String crString ,String tab,(self balanceFor:100).	! !

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 00:08:03'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 00:08:10'!
FAILURE!

(BonusReport of: portfolio) apply!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:08:54' prior: 50667648!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply 
	equals: 
		'familia		Maria			Deposito por 100			Salida por transferencia de 100			Balance = 0		Juana			Entrada por transferencia de 100			Balance = 100		Balance = 100'! !

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 00:08:57'!
FAILURE!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:08:02' prior: 50667685!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,self depositReportDescription ,String crString, String tab, String tab,  (self balanceFor:100),String crString ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:09:51' prior: 50667715!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	'familia		Maria			Deposito por 100			Salida por transferencia de 100			Balance = 0		Juana			Entrada por transferencia de 100			Balance = 100		Balance = 100'.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',String crString, String tab, 'Maria',String crString,String tab,String tab,self depositReportDescription ,String crString, String tab, String tab,  (self balanceFor:100),String crString ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:00'!
enter

	^ String crString! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 00:10:00' prior: 50665019!
test03AccountSummaryReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self withdrawReportDescription,self enter,(self balanceFor: -100).
	
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 00:10:00' prior: 50664774!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,String tab,'familia2',String crString,String tab, String tab, 'Maria'.	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 00:10:00' prior: 50667792!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,String tab,'familia2',self enter,String tab, String tab, 'Maria'.	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 00:10:00' prior: 50664718!
test14TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,String tab,'Maria'
	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:00' prior: 50667742!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	'familia		Maria			Deposito por 100			Salida por transferencia de 100			Balance = 0		Juana			Entrada por transferencia de 100			Balance = 100		Balance = 100'.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, String tab, 'Maria',String crString,String tab,String tab,self depositReportDescription ,String crString, String tab, String tab,  (self balanceFor:100),String crString ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:00' prior: 50667834!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	'familia		Maria			Deposito por 100			Salida por transferencia de 100			Balance = 0		Juana			Entrada por transferencia de 100			Balance = 100		Balance = 100'.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, String tab, 'Maria',self enter,String tab,String tab,self depositReportDescription ,String crString, String tab, String tab,  (self balanceFor:100),String crString ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:00' prior: 50667866!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	'familia		Maria			Deposito por 100			Salida por transferencia de 100			Balance = 0		Juana			Entrada por transferencia de 100			Balance = 100		Balance = 100'.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, String tab, 'Maria',self enter,String tab,String tab,self depositReportDescription ,self enter, String tab, String tab,  (self balanceFor:100),String crString ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:00' prior: 50667898!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	'familia		Maria			Deposito por 100			Salida por transferencia de 100			Balance = 0		Juana			Entrada por transferencia de 100			Balance = 100		Balance = 100'.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, String tab, 'Maria',self enter,String tab,String tab,self depositReportDescription ,self enter, String tab, String tab,  (self balanceFor:100),self enter ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 00:10:00' prior: 50665055!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self transferWithdrawReportDescription,self enter,(self balanceFor: -100) .
	self assert: ((AccountSummaryReport  of: anotherReceptiveAccount) apply) equals:self transferDepositReportDescription,String crString,(self balanceFor:100) .
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 00:10:00' prior: 50667962!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self transferWithdrawReportDescription,self enter,(self balanceFor: -100) .
	self assert: ((AccountSummaryReport  of: anotherReceptiveAccount) apply) equals:self transferDepositReportDescription,self enter,(self balanceFor:100) .
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 00:10:00' prior: 50665077!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self transferWithdrawReportDescription,self enter,self depositReportDescription,String crString,(self balanceFor: 0).
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 00:10:00' prior: 50668006!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self transferWithdrawReportDescription,self enter,self depositReportDescription,self enter,(self balanceFor: 0).
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 00:10:00' prior: 50665107!
test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	self assert: ((AccountSummaryReport  of: aPortfolio) apply) equals:self depositReportDescription ,self enter,(self balanceFor: 100) .
	
	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:00' prior: 50667491!
test17PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, String tab, (self balanceFor:0).	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 00:10:00' prior: 50665005!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self depositReportDescription,self enter,(self balanceFor:100) .
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 00:10:00' prior: 50665123!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  of: aPortfolio) apply) equals:self depositReportDescription,self enter,self withdrawReportDescription,String crString,(self balanceFor: 0 ).
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 00:10:00' prior: 50668086!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	self assert: ((AccountSummaryReport  of: aPortfolio) apply) equals:self depositReportDescription,self enter,self withdrawReportDescription,self enter,(self balanceFor: 0 ).
	
	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:00' prior: 50667392!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, String tab, 'Maria',String crString,String tab,String tab,self depositReportDescription ,String crString, String tab, String tab,  (self balanceFor:100),String crString ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:00' prior: 50668131!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, String tab, 'Maria',self enter,String tab,String tab,self depositReportDescription ,String crString, String tab, String tab,  (self balanceFor:100),String crString ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:00' prior: 50668152!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, String tab, 'Maria',self enter,String tab,String tab,self depositReportDescription ,self enter, String tab, String tab,  (self balanceFor:100),String crString ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:00' prior: 50668172!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, String tab, 'Maria',self enter,String tab,String tab,self depositReportDescription ,self enter, String tab, String tab,  (self balanceFor:100),self enter ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 00:10:00' prior: 50664743!
test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	portfolio add: (ReceptiveAccount named:'Jose').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,String tab,'Maria',String crString, String tab, 'Jose'.
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 00:10:00' prior: 50668212!
test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	portfolio add: (ReceptiveAccount named:'Jose').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,String tab,'Maria',self enter, String tab, 'Jose'.
	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14'!
tab

	^ String tab! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14' prior: 50668062!
test17PortfolioSummaryReportOfEmptyPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, (self balanceFor:0).	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 00:10:14' prior: 50667807!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'familia2',self enter,String tab, String tab, 'Maria'.	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 00:10:14' prior: 50668255!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'familia2',self enter,self tab, String tab, 'Maria'.	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 00:10:14' prior: 50668270!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'familia2',self enter,self tab, self tab, 'Maria'.	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 00:10:14' prior: 50667822!
test14TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'Maria'
	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14' prior: 50667930!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	'familia		Maria			Deposito por 100			Salida por transferencia de 100			Balance = 0		Juana			Entrada por transferencia de 100			Balance = 100		Balance = 100'.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,String tab,String tab,self depositReportDescription ,self enter, String tab, String tab,  (self balanceFor:100),self enter ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14' prior: 50668310!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	'familia		Maria			Deposito por 100			Salida por transferencia de 100			Balance = 0		Juana			Entrada por transferencia de 100			Balance = 100		Balance = 100'.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,String tab,self depositReportDescription ,self enter, String tab, String tab,  (self balanceFor:100),self enter ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14' prior: 50668342!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	'familia		Maria			Deposito por 100			Salida por transferencia de 100			Balance = 0		Juana			Entrada por transferencia de 100			Balance = 100		Balance = 100'.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, String tab, String tab,  (self balanceFor:100),self enter ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14' prior: 50668374!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	'familia		Maria			Deposito por 100			Salida por transferencia de 100			Balance = 0		Juana			Entrada por transferencia de 100			Balance = 100		Balance = 100'.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, self tab, String tab,  (self balanceFor:100),self enter ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14' prior: 50668405!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	'familia		Maria			Deposito por 100			Salida por transferencia de 100			Balance = 0		Juana			Entrada por transferencia de 100			Balance = 100		Balance = 100'.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, self tab, self tab,  (self balanceFor:100),self enter ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14' prior: 50668436!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	'familia		Maria			Deposito por 100			Salida por transferencia de 100			Balance = 0		Juana			Entrada por transferencia de 100			Balance = 100		Balance = 100'.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, self tab, self tab,  (self balanceFor:100),self enter ,self tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14' prior: 50668192!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,String tab,String tab,self depositReportDescription ,self enter, String tab, String tab,  (self balanceFor:100),self enter ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14' prior: 50668498!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,String tab,self depositReportDescription ,self enter, String tab, String tab,  (self balanceFor:100),self enter ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14' prior: 50668518!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, String tab, String tab,  (self balanceFor:100),self enter ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14' prior: 50668538!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, self tab, String tab,  (self balanceFor:100),self enter ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14' prior: 50668558!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, self tab, self tab,  (self balanceFor:100),self enter ,String tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:10:14' prior: 50668578!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, self tab, self tab,  (self balanceFor:100),self enter ,self tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 00:10:14' prior: 50668227!
test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	portfolio add: (ReceptiveAccount named:'Jose').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'Maria',self enter, String tab, 'Jose'.
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 00:10:14' prior: 50668618!
test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	portfolio add: (ReceptiveAccount named:'Jose').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'Maria',self enter, self tab, 'Jose'.
	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:12:27' prior: 50668467!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	'familia		Maria			Deposito por 100			Salida por transferencia de 100			Balance = 0		Juana			Entrada por transferencia de 100			Balance = 100		Balance = 100'.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, self tab, self tab, self transferWithdrawReportDescription ,self enter, self tab, self tab,  (self balanceFor:0),self enter, self tab, 'Juana',self enter, self tab, self tab, self transferDepositReportDescription, self enter, self tab,self tab, (self balanceFor:100),self enter ,self tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:12:31' prior: 50668648!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, self tab, self tab, self transferWithdrawReportDescription ,self enter, self tab, self tab,  (self balanceFor:0),self enter, self tab, 'Juana',self enter, self tab, self tab, self transferDepositReportDescription, self enter, self tab,self tab, (self balanceFor:100),self enter ,self tab,(self balanceFor:100).	! !

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:12:32'!
PASSED!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 00:12:32'!
PASSED!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:13:57'!
test20PortfolioSummaryReportOfPortfolioWithPortfolio
	| portfolio aReceptiveAccount anotherReceptiveAccount portfolio2 |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	portfolio2 add: portfolio.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, self tab, self tab, self transferWithdrawReportDescription ,self enter, self tab, self tab,  (self balanceFor:0),self enter, self tab, 'Juana',self enter, self tab, self tab, self transferDepositReportDescription, self enter, self tab,self tab, (self balanceFor:100),self enter ,self tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:15:17' prior: 50668802!
test20PortfolioSummaryReportOfPortfolioWithPortfolio
	| portfolio aReceptiveAccount anotherReceptiveAccount portfolio2 |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'Padre') add:aReceptiveAccount.
	portfolio2:= (Portfolio named:'familia').
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	portfolio2 add: portfolio.
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, self tab, self tab, self transferWithdrawReportDescription ,self enter, self tab, self tab,  (self balanceFor:0),self enter, self tab, 'Juana',self enter, self tab, self tab, self transferDepositReportDescription, self enter, self tab,self tab, (self balanceFor:100),self enter ,self tab,(self balanceFor:100).	! !

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:15:18'!
FAILURE!

(BonusReport of: portfolio) apply!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 00:15:35' prior: 50668836!
test20PortfolioSummaryReportOfPortfolioWithPortfolio
	| portfolio aReceptiveAccount anotherReceptiveAccount portfolio2 |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'Padre') add:aReceptiveAccount.
	portfolio2:= (Portfolio named:'familia').
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	portfolio2 add: portfolio.
	self assert: (BonusReport of: portfolio2) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, self tab, self tab, self transferWithdrawReportDescription ,self enter, self tab, self tab,  (self balanceFor:0),self enter, self tab, 'Juana',self enter, self tab, self tab, self transferDepositReportDescription, self enter, self tab,self tab, (self balanceFor:100),self enter ,self tab,(self balanceFor:100).	! !

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:15:36'!
FAILURE!

(BonusReport of: portfolio2) apply!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:16:19' prior: 50667346!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name,String crString.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [resultado nextPutAll:((BonusReport of: account ) applyWith: level+2)]].
	resultado nextPutAll: String crString.
level+1 timesRepeat: [resultado nextPutAll: String tab].
	resultado nextPutAll:'Balance = ', portfolio balance asString.
	^resultado contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 00:16:20'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 00:16:20'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 00:16:20'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 00:16:21'!
PASSED!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:16:21'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:16:21'!
FAILURE!

(BonusReport of: portfolio2) apply!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:17:02' prior: 50668917!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name,String crString.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+1)]
    			ifFalse: [resultado nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
	resultado nextPutAll: String crString.
level+1 timesRepeat: [resultado nextPutAll: String tab].
	resultado nextPutAll:'Balance = ', portfolio balance asString.
	^resultado contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:17:03'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:17:03'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 00:17:03'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:17:03'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:17:05'!
FAILURE!

(BonusReport of: portfolio) apply!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:17:20' prior: 50669031!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name,String crString.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [resultado nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
	resultado nextPutAll: String crString.
level+1 timesRepeat: [resultado nextPutAll: String tab].
	resultado nextPutAll:'Balance = ', portfolio balance asString.
	^resultado contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 00:17:21'!
PASSED!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:17:21'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 00:17:21'!
FAILURE!

(BonusReport of: portfolio2) apply!
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:18:09' overrides: 50664103!
apply
	^self applyWith:0! !

!methodRemoval: BonusReport #apply stamp: 'toto 10/26/2023 00:18:09'!
apply
	^self applyWith:0!

!methodRemoval: TreeStructureReport #apply stamp: 'toto 10/26/2023 00:18:09'!
apply
	^self applyWith:0.!

PortfolioReport subclass: #BonusReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #BonusReport category: 'Portfolio-Solucion' stamp: 'toto 10/26/2023 00:18:20'!
PortfolioReport subclass: #BonusReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:18:34'!
initializeOf:aPortfolio
	portfolio:= aPortfolio.! !

!methodRemoval: BonusReport #initializeOf: stamp: 'toto 10/26/2023 00:18:34'!
initializeOf:aPortfolio
	portfolio:= aPortfolio.!

!methodRemoval: TreeStructureReport #initializeOf: stamp: 'toto 10/26/2023 00:18:34'!
initializeOf: aPortfolio 
	portfolio := aPortfolio.!
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:18:39'!
applyWith: level

	self subclassResponsibility! !
!Report methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:18:52'!
applyWith: level

	self subclassResponsibility! !
!TransferNetReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 00:19:38' prior: 50657450 overrides: 50664203!
apply
	| balance |
	balance:= 0.
	account withTransactionsDo:[:transaction|balance:=  transaction affectBalanceIfTransfer: balance].
	
	^balance.! !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:19:51' prior: 50669145 overrides: 50669295!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name,String crString.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [resultado nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	resultado nextPutAll: String crString.
	level+1 timesRepeat: [resultado nextPutAll: String tab].
	resultado nextPutAll:'Balance = ', portfolio balance asString.
	^resultado contents.! !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:20:03' prior: 50669314 overrides: 50669295!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name,String crString.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [resultado nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	resultado nextPutAll: String crString.
	level+1 timesRepeat: [resultado nextPutAll: String tab].
	resultado nextPutAll:'Balance = ', portfolio balance asString.
	^resultado contents.! !

----QUIT----(26 October 2023 00:20:58) CuisUniversity-5981.image priorSource: 10533442!

----STARTUP---- (26 October 2023 00:39:38) as /home/totorroto/Desktop/Portfolio/linux64/CuisUniversity-5981.image!

!Portfolio methodsFor: 'transactions' stamp: 'toto 10/26/2023 00:44:03' prior: 50663982 overrides: 50657845!
withTransactionsDo: aOneArgBlock 

	accounts do:[:account| account withTransactionsDo: aOneArgBlock ].! !

!classDefinition: #Deposit category: 'Portfolio-Solucion' stamp: 'toto 10/26/2023 00:46:23'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: 'Portfolio-Solucion' stamp: 'toto 10/26/2023 00:46:23'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: 'Portfolio-Solucion' stamp: 'toto 10/26/2023 00:46:23'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTransaction methodsFor: 'value' stamp: 'toto 10/26/2023 00:46:23' prior: 50650938 overrides: 16902254!
value

	^ value! !

!methodRemoval: Withdraw #value stamp: 'toto 10/26/2023 00:46:23'!
value

	^ value!

!methodRemoval: Deposit #value stamp: 'toto 10/26/2023 00:46:23'!
value

	^ value!
!AccountTransaction methodsFor: 'initialization' stamp: 'toto 10/26/2023 00:46:30'!
initializeFor: aValue

	value := aValue ! !

!methodRemoval: Deposit #initializeFor: stamp: 'toto 10/26/2023 00:46:30'!
initializeFor: aValue

	value := aValue !

!methodRemoval: Withdraw #initializeFor: stamp: 'toto 10/26/2023 00:46:30'!
initializeFor: aValue

	value := aValue !
!AccountTransaction methodsFor: 'print' stamp: 'toto 10/26/2023 00:46:40'!
printTransaction

	self subclassResponsibility! !

!classRenamed: #TransferLegs as: #TransferLeg stamp: 'toto 10/26/2023 01:44:00'!
Smalltalk renameClassNamed: #TransferLegs as: #TransferLeg!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:44:54' prior: 50666772 overrides: 50669295!
applyWith:level

	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name]
    			ifFalse: [resultado nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^resultado contents.! !
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:45:23' prior: 50669435 overrides: 50669295!
applyWith:level

	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		level+1 timesRepeat: [report nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name]
    			ifFalse: [report nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^report contents.! !
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 01:45:32' prior: 50669341 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		level+1 timesRepeat: [report nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report nextPutAll: String crString.
	level+1 timesRepeat: [report nextPutAll: String tab].
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !
!TransferNetReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:45:54' prior: 50669305 overrides: 50664203!
apply
	| transferNet |
	transferNet:= 0.
	account withTransactionsDo:[:transaction|transferNet:=  transaction affectBalanceIfTransfer: transferNet].
	
	^transferNet.! !
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:46:05' prior: 50666524 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		level timesRepeat: [report nextPutAll: String tab].
		report nextPutAll:(transaction printTransaction, String crString)].
	level timesRepeat: [report nextPutAll: String tab].
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:46:13' prior: 50669507 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		level timesRepeat: [report nextPutAll: String tab].
		report nextPutAll:(transaction printTransaction, String crString)].
	level timesRepeat: [report nextPutAll: String tab].
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:47:45'!
nextPutTo: report toLevel: level

	^ level timesRepeat: [report nextPutAll: String tab]! !
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:47:45' prior: 50669523 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		self nextPutTo: report toLevel: level.
		report nextPutAll:(transaction printTransaction, String crString)].
	level timesRepeat: [report nextPutAll: String tab].
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:47:45' prior: 50669545 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		self nextPutTo: report toLevel: level.
		report nextPutAll:(transaction printTransaction, String crString)].
	self nextPutTo: report toLevel: level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:47:51'!
sapplyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		self nextPutTo: report toLevel: level.
		report nextPutAll:(transaction printTransaction, String crString)].
	self nextPutTo: report toLevel: level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:47:59' prior: 50669561 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		self nextPutTo: report toLevel: level.
		report nextPutAll:(transaction printTransaction, String crString)].
	self nextPutTo: report toLevel: level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!methodRemoval: AccountSummaryReport #sapplyWith: stamp: 'toto 10/26/2023 01:48:01'!
sapplyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		self nextPutTo: report toLevel: level.
		report nextPutAll:(transaction printTransaction, String crString)].
	self nextPutTo: report toLevel: level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:48:03'!
PASSED!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:48:03'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:48:03'!
FAILURE!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:49:10'!
push: report toLevel: level

	^ level timesRepeat: [report nextPutAll: String tab]! !
!AccountSummaryReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 01:49:10' prior: 50669590 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		self push: report toLevel: level.
		report nextPutAll:(transaction printTransaction, String crString)].
	self push: report toLevel: level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!methodRemoval: AccountSummaryReport #nextPutTo:toLevel: stamp: 'toto 10/26/2023 01:49:10'!
nextPutTo: report toLevel: level

	^ level timesRepeat: [report nextPutAll: String tab]!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 01:49:44' prior: 50669472 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		self push:report toLevel: level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report nextPutAll: String crString.
	level+1 timesRepeat: [report nextPutAll: String tab].
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !
!AccountReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:49:56'!
push: report toLevel: level

	^ level timesRepeat: [report nextPutAll: String tab]! !

!methodRemoval: AccountSummaryReport #push:toLevel: stamp: 'toto 10/26/2023 01:49:56'!
push: report toLevel: level

	^ level timesRepeat: [report nextPutAll: String tab]!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 01:50:12' prior: 50669733 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		self push:report toLevel: level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report nextPutAll: String crString.
	self push:report toLevel: level+1.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:50:14'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:50:14'!
ERROR!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:50:14'!
ERROR!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:50:14'!
ERROR!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:50:14'!
ERROR!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 00:20:03' prior: 50669769 overrides: 50669295!
applyWith:level
	| resultado  |
	resultado := WriteStream with: String new.
	resultado nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		resultado nextPutAll: String crString.
		level+1 timesRepeat: [resultado nextPutAll: String tab].
		account class = ReceptiveAccount 
			ifTrue:  [resultado nextPutAll: account name,String crString.
				      resultado nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [resultado nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	resultado nextPutAll: String crString.
	level+1 timesRepeat: [resultado nextPutAll: String tab].
	resultado nextPutAll:'Balance = ', portfolio balance asString.
	^resultado contents.! !
!AccountReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:51:00' prior: 50669757!
push: report toLevel: level
	level timesRepeat: [report nextPutAll: String tab]! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:51:08'!
PASSED!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:51:08'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:51:08'!
FAILURE!
!Report methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:51:22'!
push: report toLevel: level
	level timesRepeat: [report nextPutAll: String tab]! !

!methodRemoval: AccountReport #push:toLevel: stamp: 'toto 10/26/2023 01:51:22'!
push: report toLevel: level
	level timesRepeat: [report nextPutAll: String tab]!
!BonusReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 01:52:31' prior: 50669876 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		self push: report toLevel: level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report nextPutAll: String crString.
	level+1 timesRepeat: [report nextPutAll: String tab].
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:32'!
PASSED!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:52:32'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:52:32'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:52:45' prior: 50669454 overrides: 50669295!
applyWith:level

	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		self push: report toLevel:level. 
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name]
    			ifFalse: [report nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:46'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:46'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:52:46'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:46'!
PASSED!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:52:46'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:52:50' prior: 50670118 overrides: 50669295!
applyWith:level

	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		self push: report toLevel:level+1. 
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name]
    			ifFalse: [report nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:52:51'!
PASSED!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:52:51'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:52:51'!
FAILURE!
!BonusReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:53:31' prior: 50670006 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		self push: report toLevel: level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report nextPutAll: String crString.
	self push: report toLevel: level+1.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !
!BonusReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:53:46' prior: 50670322 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		self push: report toLevel: level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report nextPutAll: String crString.
	self push: report toLevel: level+1.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !
!BonusReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:54:05' prior: 50670346 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		self push: report toLevel: level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report newLine.
	self push: report toLevel: level+1.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:54:06'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:54:06'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:54:06'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:54:06'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:54:06'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:54:09'!
FAILURE!
!BonusReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:55:13' prior: 50670370 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		self push: report toLevel: level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report newLineTab:level+1.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:55:14'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:55:14'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:55:14'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:55:14'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:55:14'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:55:17'!
FAILURE!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:55:53' prior: 50669712 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level.
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:55:54'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:55:54'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:55:54'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:55:54'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:55:54'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:55:54'!
FAILURE!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:55:54'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:55:54'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:55:54'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:55:54'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:55:54'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:55:54'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:55:54'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:55:54'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:55:54'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:55:54'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:55:54'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:55:54'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:55:54'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:55:54'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:55:58'!
FAILURE!

((AccountSummaryReport  of: aReceptiveAccount) apply)!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:56:46'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:56:46'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:56:46'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:56:46'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:56:46'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:56:46'!
FAILURE!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:56:46'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:56:46'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:56:46'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:56:46'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:56:46'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:56:46'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:56:46'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:56:46'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:56:46'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:56:46'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:56:46'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:56:46'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:56:46'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:56:46'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:56:50'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:56:50'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:56:50'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:56:50'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:56:50'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:56:50'!
FAILURE!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:56:50'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:56:50'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:56:50'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:56:50'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:56:50'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:56:50'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:56:50'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:56:50'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:56:50'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:56:50'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:56:50'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:56:50'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:56:50'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:56:50'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:56:52'!
FAILURE!

((AccountSummaryReport  of: aReceptiveAccount) apply)!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:58:34' prior: 50670590 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level when:[level =0].
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:58:43' prior: 50670864 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level when:[(level =0 )negated].
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:58:44'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:58:44'!
ERROR!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:58:44'!
ERROR!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:58:44'!
ERROR!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:58:44'!
ERROR!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:58:44'!
FAILURE!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:58:44'!
ERROR!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:58:44'!
ERROR!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:58:44'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:58:44'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:58:44'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:58:44'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:58:44'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:58:44'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:58:44'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:58:44'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:58:44'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:58:44'!
ERROR!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:58:44'!
ERROR!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:58:44'!
ERROR!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:58:45'!
FAILURE!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:59:29' prior: 50670879 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level when:[(level  ~=0 )].
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:59:30'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:59:30'!
ERROR!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:59:30'!
ERROR!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:59:30'!
ERROR!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:59:30'!
ERROR!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:59:30'!
FAILURE!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:59:30'!
ERROR!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:59:30'!
ERROR!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:59:30'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:59:30'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:59:30'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:59:30'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:59:30'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:59:30'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:59:30'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:59:30'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:59:30'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:59:30'!
ERROR!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:59:30'!
ERROR!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:59:30'!
ERROR!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:59:32'!
FAILURE!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:59:44' prior: 50670981 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level when:[(level  ~=0 )].
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level when:[(level  ~=0 )].
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:59:45'!
ERROR!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 01:59:45'!
ERROR!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 01:59:45'!
ERROR!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 01:59:45'!
ERROR!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 01:59:45'!
ERROR!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:59:45'!
ERROR!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:59:45'!
ERROR!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:59:45'!
ERROR!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 01:59:45'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 01:59:45'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 01:59:45'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 01:59:45'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:59:45'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:59:45'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 01:59:45'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:59:45'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 01:59:45'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 01:59:45'!
ERROR!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 01:59:45'!
ERROR!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 01:59:45'!
ERROR!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 01:59:48'!
ERROR!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 01:59:59' prior: 50671082 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level when:[level  ~=0].
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level when:[(level  ~=0 )].
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:00:00'!
ERROR!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:00:00'!
ERROR!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:00:00'!
ERROR!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:00:00'!
ERROR!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:00:00'!
ERROR!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:00'!
ERROR!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:00'!
ERROR!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:00'!
ERROR!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:00:00'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:00:00'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:00:00'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:00:00'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:00'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:00'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:00'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:00:00'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:00'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:00'!
ERROR!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:00'!
ERROR!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:00:00'!
ERROR!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:00:02'!
ERROR!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:00:15' prior: 50671184 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level when:level  ~=0.
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level when:[(level  ~=0 )].
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:00:16'!
ERROR!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:00:16'!
ERROR!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:00:16'!
ERROR!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:00:16'!
ERROR!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:00:16'!
ERROR!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:16'!
ERROR!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:16'!
ERROR!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:17'!
ERROR!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:00:17'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:00:17'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:00:17'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:00:17'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:17'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:17'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:17'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:00:17'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:17'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:17'!
ERROR!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:17'!
ERROR!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:00:17'!
ERROR!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:00:22' prior: 50671286 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level when:level  ~=0.
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level when:(level  ~=0 ).
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:00:23'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:23'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:23'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:23'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:00:23'!
FAILURE!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:00:39' prior: 50671384 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level when:level ~=0.
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level when:level ~=0.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:00:40'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:40'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:40'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:00:40'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:00:40'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:45'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:00:52'!
FAILURE!

(BonusReport of: portfolio) apply!

'familia',self enter, self tab, (self balanceFor:0)!

(BonusReport of: portfolio) apply!
!BonusReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:02:07' prior: 50670480 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		report newLineTab:level+1 when:level+1 ~=0.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report newLineTab:level+1 when:level+1 ~=0.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:02:09'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:02:09'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:09'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:09'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:02:09'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:02:16'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:02:16'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:02:16'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:02:16'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:02:16'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:02:17'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:17'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:17'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:02:17'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:02:17'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:02:17'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:02:17'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:02:17'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:17'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:17'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:02:17'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:02:17'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:17'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:17'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:02:17'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:02:20'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:02:51' prior: 50670218 overrides: 50669295!
applyWith:level

	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		report newLineTab:level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name]
    			ifFalse: [report nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:02:52'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:02:52'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:02:52'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:02:52'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:02:52'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:02:52'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:52'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:52'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:02:52'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:02:52'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:02:52'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:02:52'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:02:52'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:52'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:52'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:02:52'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:02:52'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:52'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:02:52'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:02:52'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:03:12' prior: 50671784 overrides: 50669295!
applyWith:level

	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		report newLineTab:level +1 when:level+1 ~=0.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name]
    			ifFalse: [report nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:03:14'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:03:14'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:03:14'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:03:14'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:03:14'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:03:14'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:03:14'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:03:14'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:03:14'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:03:14'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:03:14'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:03:14'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:03:14'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:03:14'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:03:14'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:03:14'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:03:14'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:03:14'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:03:14'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:03:14'!
FAILURE!
!BonusReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:03:28' prior: 50671591 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		report newLineTab:level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report newLineTab:level+1 when:level+1 ~=0.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !
!BonusReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:03:38' prior: 50671984 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		report newLineTab:level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report newLineTab:level+1.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:03:39'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:03:39'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:03:39'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:03:39'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:03:39'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:03:39'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:03:39'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:03:39'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:03:39'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:03:39'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:03:39'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:03:39'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:03:39'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:03:39'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:03:39'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:03:39'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:03:39'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:03:39'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:03:39'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:03:39'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:03:46' prior: 50671884 overrides: 50669295!
applyWith:level

	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		report newLineTab:level +1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name]
    			ifFalse: [report nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^report contents.! !
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:04:05' prior: 50671482 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level.
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:04:10'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:04:10'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:04:10'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:04:10'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:04:10'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:04:10'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:04:18'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:04:18'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:04:18'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:04:18'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:04:18'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:04:18'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:04:21'!
FAILURE!

((AccountSummaryReport  of: aReceptiveAccount) apply)!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:04:50' prior: 50672130 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level when:(level ~=0).
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level when:(level ~=0).
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:04:51'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:04:51'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:04:51'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:04:51'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:04:51'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:04:51'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:51'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:51'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:04:51'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:04:51'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:04:51'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:04:51'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:04:51'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:51'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:51'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:04:51'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:04:51'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:51'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:51'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:04:51'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:04:56'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:04:56'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:04:56'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:04:56'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:04:56'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:04:56'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:56'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:56'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:04:56'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:04:56'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:04:56'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:04:56'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:04:56'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:56'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:56'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:04:56'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:04:56'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:56'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:56'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:04:56'!
FAILURE!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:04:57'!
FAILURE!

(TreeStructureReport of: portfolio)!

(TreeStructureReport of: portfolio) apply!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:05:40' prior: 50672113 overrides: 50669295!
applyWith:level

	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		report newLineTab:level+1 when:level ~=0.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name]
    			ifFalse: [report nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:05:41'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:05:41'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:05:41'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:05:41'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:05:41'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:05:41'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:05:41'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:05:41'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:05:41'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:05:41'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:05:41'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:05:41'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:05:41'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:05:41'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:05:41'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:05:41'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:05:41'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:05:41'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:05:41'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:05:41'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:05:45' prior: 50672504 overrides: 50669295!
applyWith:level

	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		report newLineTab:level+1 when:level+1 ~=0.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name]
    			ifFalse: [report nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:05:46'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:05:46'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:05:46'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:05:46'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:05:46'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:05:46'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:05:46'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:05:46'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:05:46'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:05:46'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:05:46'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:05:46'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:05:46'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:05:46'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:05:46'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:05:46'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:05:46'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:05:46'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:05:46'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:05:46'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:06:01' prior: 50672604 overrides: 50669295!
applyWith:level

	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		report newLineTab:level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name]
    			ifFalse: [report nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:06:03'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:06:03'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:06:03'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:06:03'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:06:03'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:06:03'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:03'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:03'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:06:03'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:06:03'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:06:03'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:06:03'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:06:03'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:03'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:03'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:06:03'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:06:03'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:03'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:03'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:06:03'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:06:06' prior: 50672704 overrides: 50669295!
applyWith:level

	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		report newLineTab:level.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name]
    			ifFalse: [report nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:06:07'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:06:07'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:06:07'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:06:07'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:06:07'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:06:07'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:07'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:07'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:06:07'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:06:07'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:06:07'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:06:07'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:06:07'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:07'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:07'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:06:07'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:06:07'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:07'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:07'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:06:07'!
FAILURE!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:09'!
FAILURE!

(TreeStructureReport of: portfolio) apply!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:06:24' prior: 50672804 overrides: 50669295!
applyWith:level

	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		report nextPutAll: String crString.
		report newLineTab:level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name]
    			ifFalse: [report nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:06:26'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:06:26'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:06:26'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:06:26'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:06:26'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:06:26'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:26'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:26'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:06:26'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:06:26'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:06:26'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:06:26'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:06:26'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:26'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:26'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:06:26'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:06:26'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:26'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:26'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:06:26'!
FAILURE!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:27'!
FAILURE!
!TreeStructureReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:06:34' prior: 50672909 overrides: 50669295!
applyWith:level

	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	portfolio withAccountsDo: [:account | 
		report newLineTab:level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name]
    			ifFalse: [report nextPutAll:((TreeStructureReport of: account ) applyWith: level+1)]].
	
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:06:35'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:06:35'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:06:35'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:06:35'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:06:35'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:06:35'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:35'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:35'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:06:35'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:06:35'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:06:35'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:06:35'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:06:35'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:35'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:35'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:06:35'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:06:35'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:35'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:35'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:06:35'!
FAILURE!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:06:36'!
FAILURE!

(TreeStructureReport of: portfolio) apply!

(TreeStructureReport of: portfolio) apply!
!BonusReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:07:12' prior: 50672007 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report newLineTab:level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report newLineTab:level+1.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:07:13'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:07:13'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:07:13'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:07:13'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:07:13'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:07:13'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:07:13'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:07:13'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:07:13'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:07:13'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:07:13'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:07:13'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:07:13'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:07:13'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:07:13'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:07:13'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:07:13'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:07:13'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:07:13'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:07:13'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:07:20'!
FAILURE!
!BonusReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:07:29' prior: 50673118 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report newLineTab:level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report tab:level+1.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:07:31'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:07:31'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:07:31'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:07:31'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:07:31'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:07:31'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:07:31'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:07:31'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:07:31'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:07:31'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:07:31'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:07:31'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:07:31'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:07:31'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:07:31'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:07:31'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:07:31'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:07:31'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:07:31'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:07:31'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:07:39'!
FAILURE!

 (TreeStructureReport of: portfolio) apply!

(TreeStructureReport of: portfolio)!

'familia',self enter,self tab,'familia2',self enter,self tab, self tab, 'Maria'!

(TreeStructureReport of: portfolio) apply!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:09:01' prior: 50672316 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level.
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level when:(level ~=0).
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:09:02'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:09:02'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:09:02'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:09:02'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:09:02'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:02'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:02'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:02'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:09:02'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:09:02'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:09:02'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:09:02'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:02'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:02'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:02'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:09:02'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:02'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:02'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:02'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:09:02'!
FAILURE!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:09:08' prior: 50673341 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level when:(level ~=0).
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:09:09'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:09:09'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:09:09'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:09:09'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:09'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:09:09'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:09:13'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:09:13'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:09:13'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:09:13'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:13'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:09:13'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:09:17'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:09:17'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:09:17'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:09:17'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:09:17'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:17'!
FAILURE!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:17'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:17'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:09:17'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:09:17'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:09:17'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:09:17'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:17'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:17'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:18'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:09:18'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:18'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:18'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:18'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:09:18'!
FAILURE!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:04:50' prior: 50673439 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level when:(level ~=0).
		report nextPutAll:(transaction printTransaction, String crString)].
	report newLineTab:level when:(level ~=0).
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:09:36'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:09:36'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:09:36'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:09:36'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:09:36'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:36'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:36'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:36'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:09:36'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:09:36'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:09:36'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:09:36'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:36'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:36'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:36'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:09:36'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:36'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:36'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:36'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:09:36'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:09:42'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:09:42'!
PASSED!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:42'!
FAILURE!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:42'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:09:42'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:42'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:09:42'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:09:42'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:09:42'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:42'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:42'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:09:42'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:09:42'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:09:42'!
FAILURE!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:42'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:42'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:09:42'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:09:42'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:09:42'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:42'!
PASSED!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:09:57'!
FAILURE!

(BonusReport of: portfolio) apply!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:10:43' prior: 50673703 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level when:(level ~=0).
		report nextPutAll:(transaction printTransaction, String crString)].
	report tab:level when:(level ~=0).
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:10:44'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:10:44'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:10:44'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:10:44'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:10:44'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:10:44'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:10:44'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:10:44'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:10:44'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:10:44'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:10:44'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:10:44'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:10:44'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:10:44'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:10:44'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:10:44'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:10:44'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:10:44'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:10:44'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:10:45'!
FAILURE!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:10:50' prior: 50673890 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report newLineTab:level when:(level ~=0).
		report nextPutAll:(transaction printTransaction, String crString)].
	report tab:level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:10:51'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:10:51'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:10:51'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:10:51'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:10:51'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:10:51'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:10:51'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:10:51'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:10:51'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:10:51'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:10:51'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:10:51'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:10:51'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:10:51'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:10:51'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:10:51'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:10:51'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:10:51'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:10:51'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:10:51'!
FAILURE!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:11:21' prior: 50673988 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report tab:level .
		report nextPutAll:(transaction printTransaction, String crString)].
	report tab:level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:11:22'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:11:22'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:11:22'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:11:22'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:11:22'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:11:22'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:22'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:22'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:11:22'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:11:22'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:11:22'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:11:22'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:11:22'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:22'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:22'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:11:22'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:11:22'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:22'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:22'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:11:22'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:11:28'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:11:28'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:11:28'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:11:28'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:11:28'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:11:28'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:28'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:28'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:11:28'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:11:28'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:11:28'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:11:28'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:11:28'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:28'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:28'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:11:28'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:11:28'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:28'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:28'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:11:28'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:11:37'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:11:37'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:11:37'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:11:37'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:11:37'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:11:37'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:37'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:37'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:11:37'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:11:37'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:11:37'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:11:37'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:11:37'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:37'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:37'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:11:37'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:11:37'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:37'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:37'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:11:37'!
FAILURE!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:11:40'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:12:25'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:12:25'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:12:25'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:12:25'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:12:25'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:12:25'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:12:25'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:12:25'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:12:25'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:12:25'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:12:25'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:12:25'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:12:25'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:12:25'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:12:25'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:12:25'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:12:25'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:12:25'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:12:25'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:12:25'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:12:31'!
FAILURE!

(TreeStructureReport of: portfolio) apply!

'familia',self enter,self tab,'familia2',self enter,self tab, self tab, 'Maria'!
!BonusReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:14:22' prior: 50673226 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report newLineTab:level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll:((BonusReport of: account ) applyWith: level+1)]].
		
	report newLineTab:level+1.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:14:23'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:14:23'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:14:23'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:14:23'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:14:23'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:14:23'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:14:23'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:14:23'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:14:23'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:14:23'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:14:23'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:14:23'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:14:23'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:14:23'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:14:23'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:14:23'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:14:23'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:14:23'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:14:23'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:14:23'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:14:26'!
FAILURE!

(BonusReport of: portfolio)!

(BonusReport of: portfolio) apply!

 'familia',self enter, self tab, (self balanceFor:0)!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:15:09'!
FAILURE!

(BonusReport of: portfolio) apply!

'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, self tab, self tab,  (self balanceFor:100),self enter ,self tab,(self balanceFor:100)!

(BonusReport of: portfolio)!

(BonusReport of: portfolio) apply!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:15:56'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:15:59'!
FAILURE!

(BonusReport of: portfolio2) apply!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:16:26'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:16:26'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:16:26'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:16:26'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:16:26'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:16:26'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:16:26'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:16:26'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:16:26'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:16:27'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:16:27'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:16:27'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:16:27'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:16:27'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:16:27'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:16:27'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:16:27'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:16:27'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:16:27'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:16:27'!
FAILURE!
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:16:33' prior: 50668298!
test14TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'Maria'
	! !
!BonusReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:17:37' prior: 50674442 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report newLineTab:level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name,String crString.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll: ((BonusReport of: account ) applyWith: level+1)]].
		
	report newLineTab:level+1.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:18:22'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:18:22'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:18:22'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:18:22'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:18:22'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:18:22'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:18:22'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:18:22'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:18:22'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:18:22'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:18:22'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:18:22'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:18:22'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:18:22'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:18:22'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:18:22'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:18:22'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:18:22'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:18:22'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:18:22'!
FAILURE!
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:18:59' prior: 50668072!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount resultado |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	resultado
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self depositReportDescription,self enter,(self balanceFor:100) .
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:19:18' prior: 50674775!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount resultado |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	resultado:= Stream with: String new.
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self depositReportDescription,self enter,(self balanceFor:100) .
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:19:48' prior: 50674789!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self depositReportDescription,self enter,(self balanceFor:100) .
	
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:19:56' prior: 50674659!
test14TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio resultado |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	resultado:= Stream with: String new.
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'Maria'
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:20:29' prior: 50674818!
test14TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio resultado |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	resultado:= Stream with: String new.
	resultado nextPutAll: portfolio name.
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'Maria'
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:20:35' prior: 50674832!
test14TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio resultado aReceptiveAccount |
	portfolio:= Portfolio named: 'familia'.
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	portfolio add: (aReceptiveAccount).
	resultado:= Stream with: String new.
	resultado nextPutAll: portfolio name.
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'Maria'
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:20:55' prior: 50674847!
test14TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio resultado aReceptiveAccount |
	portfolio:= Portfolio named: 'familia'.
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	portfolio add: (aReceptiveAccount).
	resultado:= Stream with: String new.
	resultado nextPutAll: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: aReceptiveAccount name.
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'Maria'
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:21:00' prior: 50674864!
test14TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio resultado aReceptiveAccount |
	portfolio:= Portfolio named: 'familia'.
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	portfolio add: (aReceptiveAccount).
	resultado:= Stream with: String new.
	resultado nextPutAll: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: aReceptiveAccount name.
	self assert: (TreeStructureReport of: portfolio) apply equals: resultado contents.
	! !

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:21:01'!
ERROR!
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:21:30' prior: 50674883!
test14TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio resultado aReceptiveAccount |
	portfolio:= Portfolio named: 'familia'.
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio add: aReceptiveAccount.
	
	resultado:= Stream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: aReceptiveAccount name.
	self assert: (TreeStructureReport of: portfolio) apply equals: resultado contents.
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:21:50' prior: 50674905!
test14TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio resultado aReceptiveAccount |
	portfolio:= Portfolio named: 'familia'.
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio add: aReceptiveAccount.
	
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: aReceptiveAccount name.
	self assert: (TreeStructureReport of: portfolio) apply equals: resultado contents.
	! !

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:21:51'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:21:51'!
FAILURE!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:21:51'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:21:51'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:21:51'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:21:51'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:21:51'!
FAILURE!
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:22:12' prior: 50668633!
test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio aReceptiveAccount resultado |
	portfolio:= Portfolio named: 'familia'.
	portfolio add: (ReceptiveAccount named:'Maria').
	portfolio add: (ReceptiveAccount named:'Jose').
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: aReceptiveAccount name.
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'Maria',self enter, self tab, 'Jose'.
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:22:58' prior: 50675026!
test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio  resultado aReceptiveAccount |
	portfolio:= Portfolio named: 'familia'.
	aReceptiveAccount:= ReceptiveAccount named:'Maria'.
	portfolio add: aReceptiveAccount.
	portfolio add: (ReceptiveAccount named:'Jose').
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: aReceptiveAccount name.
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'Maria',self enter, self tab, 'Jose'.
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:23:06' prior: 50675045!
test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio  resultado aReceptiveAccount anotherReceptiveAccount |
	portfolio:= Portfolio named: 'familia'.
	aReceptiveAccount:= ReceptiveAccount named:'Maria'.
	portfolio add: aReceptiveAccount.
	anotherReceptiveAccount := ReceptiveAccount named:'Jose'.
	portfolio add: (anotherReceptiveAccount).
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: aReceptiveAccount name.
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'Maria',self enter, self tab, 'Jose'.
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:23:54' prior: 50675066!
test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio  resultado aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount:= ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount := ReceptiveAccount named:'Jose'.
	portfolio := (Portfolio named: 'familia' )with: aReceptiveAccount with:anotherReceptiveAccount.
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: aReceptiveAccount name.
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'Maria',self enter, self tab, 'Jose'.
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:24:30' prior: 50675089!
test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio  resultado aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount:= ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount := ReceptiveAccount named:'Jose'.
	portfolio := (Portfolio named: 'familia' )with: aReceptiveAccount with:anotherReceptiveAccount.
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: aReceptiveAccount name.
	resultado newLineTab:1.
	resultado nextPutAll: anotherReceptiveAccount name.
	self assert: (TreeStructureReport of: portfolio) apply equals: resultado contents.
	! !

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:24:31'!
ERROR!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:25:01'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:25:01'!
ERROR!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:25:01'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:25:01'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:25:01'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:25:01'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:25:01'!
FAILURE!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:25:04'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 02:25:11'!
with: aReceptiveAccount with: anotherReceptiveAccount 
	self shouldBeImplemented.! !

!methodRemoval: Portfolio #with:with: stamp: 'toto 10/26/2023 02:25:24'!
with: aReceptiveAccount with: anotherReceptiveAccount 
	self shouldBeImplemented.!

!methodRemoval: Portfolio class #canNotAddAccountErrorMessage stamp: 'toto 10/26/2023 02:25:51'!
canNotAddAccountErrorMessage
	
	^'Can not add repeated account to a portfolio'!

!methodRemoval: Portfolio class #with: stamp: 'toto 10/26/2023 02:25:51'!
with: anAccount

	^self new 
		add: anAccount;
		yourself!

!methodRemoval: Portfolio class #with:with: stamp: 'toto 10/26/2023 02:25:51'!
with: anAccount with: anotherAccount

	^self new 
		add: anAccount;
		add: anotherAccount;
		yourself!

Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #XXX category: 'Portfolio-Solucion' stamp: 'toto 10/26/2023 02:26:18'!
Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!XXX methodsFor: 'no messages' stamp: 'toto 10/26/2023 02:26:28'!
testx
	! !

!classRemoval: #XXX stamp: 'toto 10/26/2023 02:26:37'!
Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio class methodsFor: 'no messages' stamp: 'toto 10/26/2023 02:27:51'!
with: anAccount with: anotherAccount

	^self new 
		add: anAccount;
		add: anotherAccount;
		yourself.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 02:28:02'!
with: anAccount

	^self new 
		add: anAccount;
		yourself! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 02:28:12'!
canNotAddAccountErrorMessage
	
	^'Can not add repeated account to a portfolio'.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'toto 10/26/2023 02:28:13'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:28:21'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:28:21'!
ERROR!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:28:21'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:28:21'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:28:21'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:28:21'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:28:21'!
FAILURE!
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:29:07' prior: 50675111!
test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio  resultado aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount:= ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount := ReceptiveAccount named:'Jose'.
	portfolio := (Portfolio named: 'familia' ).
	portfolio add:aReceptiveAccount.
	portfolio add: anotherReceptiveAccount .
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: aReceptiveAccount name.
	resultado newLineTab:1.
	resultado nextPutAll: anotherReceptiveAccount name.
	self assert: (TreeStructureReport of: portfolio) apply equals: resultado contents.
	! !

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:29:08'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:29:08'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:29:08'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:29:08'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:29:08'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:29:08'!
FAILURE!
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:29:43' prior: 50668284!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio |
	portfolio:= Portfolio named: 'familia'.

	portfolio add: ((Portfolio named: 'familia2' )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'familia2',self enter,self tab, self tab, 'Maria'.	
	
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:29:49' prior: 50675539!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio anotherPortfolio |
	portfolio:= Portfolio named: 'familia'.

	anotherPortfolio := Portfolio named: 'familia2'.
	portfolio add: ((anotherPortfolio )add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'familia2',self enter,self tab, self tab, 'Maria'.	
	
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:29:53' prior: 50675554!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio anotherPortfolio |
	portfolio:= Portfolio named: 'familia'.

	anotherPortfolio := Portfolio named: 'familia2'.
	portfolio add: (anotherPortfolio add:(ReceptiveAccount named: 'Maria')).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'familia2',self enter,self tab, self tab, 'Maria'.	
	
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:30:06' prior: 50675570!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio anotherPortfolio aReceptiveAccount |
	portfolio:= Portfolio named: 'familia'.

	anotherPortfolio := Portfolio named: 'familia2'.
	aReceptiveAccount := ReceptiveAccount named: 'Maria'.
	portfolio add: (anotherPortfolio add:(aReceptiveAccount)).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'familia2',self enter,self tab, self tab, 'Maria'.	
	
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:30:15' prior: 50675586!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio anotherPortfolio aReceptiveAccount |
	portfolio:= Portfolio named: 'familia'.

	anotherPortfolio := Portfolio named: 'familia2'.
	aReceptiveAccount := ReceptiveAccount named: 'Maria'.
	portfolio add: (anotherPortfolio add: aReceptiveAccount).
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'familia2',self enter,self tab, self tab, 'Maria'.	
	
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:30:33' prior: 50675604!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio anotherPortfolio aReceptiveAccount anotherReceptiveAccount resultado |
	portfolio:= Portfolio named: 'familia'.

	anotherPortfolio := Portfolio named: 'familia2'.
	aReceptiveAccount := ReceptiveAccount named: 'Maria'.
	portfolio add: (anotherPortfolio add: aReceptiveAccount).
	
	
	
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: aReceptiveAccount name.
	resultado newLineTab:1.
	resultado nextPutAll: anotherReceptiveAccount name.
	self assert: (TreeStructureReport of: portfolio) apply equals: resultado contents.
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'familia2',self enter,self tab, self tab, 'Maria'.	
	
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:30:47' prior: 50675622!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio anotherPortfolio aReceptiveAccount resultado |
	portfolio:= Portfolio named: 'familia'.

	anotherPortfolio := Portfolio named: 'familia2'.
	aReceptiveAccount := ReceptiveAccount named: 'Maria'.
	portfolio add: (anotherPortfolio add: aReceptiveAccount).
	
	
	
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: aReceptiveAccount name.
	resultado newLineTab:1.
	
	self assert: (TreeStructureReport of: portfolio) apply equals: resultado contents.
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'familia2',self enter,self tab, self tab, 'Maria'.	
	
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:31:17' prior: 50675650!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio anotherPortfolio aReceptiveAccount resultado |
	portfolio:= Portfolio named: 'familia'.

	anotherPortfolio := Portfolio named: 'familia2'.
	aReceptiveAccount := ReceptiveAccount named: 'Maria'.
	portfolio add: (anotherPortfolio add: aReceptiveAccount).
	
	
	
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: anotherPortfolio name.
	resultado newLineTab:2.
	resultado nextPutAll: aReceptiveAccount name.
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: 'familia',self enter,self tab,'familia2',self enter,self tab, self tab, 'Maria'.	
	
	! !

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:31:17'!
FAILURE!
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:31:29' prior: 50675676!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio anotherPortfolio aReceptiveAccount resultado |
	portfolio:= Portfolio named: 'familia'.

	anotherPortfolio := Portfolio named: 'familia2'.
	aReceptiveAccount := ReceptiveAccount named: 'Maria'.
	portfolio add: (anotherPortfolio add: aReceptiveAccount).
	
	
	
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll: anotherPortfolio name.
	resultado newLineTab:2.
	resultado nextPutAll: aReceptiveAccount name.
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: resultado contents.	
	
	! !

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:31:30'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:31:30'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:31:30'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:31:30'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:31:30'!
FAILURE!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:31:34'!
FAILURE!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:32:28' prior: 50668245!
test17PortfolioSummaryReportOfEmptyPortfolio
	| portfolio resultado |
	portfolio:= Portfolio named: 'familia'.

	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll:( self balanceFor:0).
	
	self assert: (BonusReport of: portfolio) apply equals: resultado contents.	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:34:18' prior: 50668598!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount resultado |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll:aReceptiveAccount name.
	resultado newLineTab:2.
	resultado nextPutAll: self depositReportDescription.
	resultado newLineTab:2.
	resultado nextPutAll: (self balanceFor: 100).
	resultado newLineTab:1.
	resultado nextPutAll:(self balanceFor:100).
	
	self assert: (BonusReport of: portfolio) apply equals: resultado contents.	! !

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:34:20'!
FAILURE!

(BonusReport of: portfolio) apply!

resultado contents!

(BonusReport of: portfolio) apply!

self tab!
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:36:16' prior: 50674085 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report tab:level.
		report nextPutAll:(transaction printTransaction, String crString)].
	report tab:level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !
!AccountSummaryReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:37:35' prior: 50675864 overrides: 50669299!
applyWith:level

	| report |
	report := WriteStream with: String new.
	
	account withTransactionsDo:[:transaction|  
		report tab:level.
		report nextPutAll:transaction printTransaction.
		report newLine].
	report tab:level.
	
	^(report nextPutAll: 'Balance = ' ,account balance asString) contents.
	
	
	
	
	
	! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:37:36'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:37:36'!
FAILURE!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:37:36'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:37:36'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:37:36'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:37:36'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:37:36'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:37:36'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:37:36'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:37:36'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:37:36'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:37:36'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:37:36'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:37:36'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:37:36'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:37:36'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:37:36'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:37:36'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:37:36'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:37:36'!
FAILURE!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:38:17'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:38:19'!
FAILURE!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:38:19'!
FAILURE!

((AccountSummaryReport  of: aReceptiveAccount) apply) !

self depositReportDescription,self enter,(self balanceFor:100)!
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:39:48' prior: 50674804!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals: self depositReportDescription,self enter,(self balanceFor:100) .
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:40:54' prior: 50675990!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount resultado |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	resultado:= WriteStream with: self depositReportDescription.
	resultado newLine.
	resultado nextPutAll:( self balanceFor:100).
	
	
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals: resultado contents
	
	! !

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:40:56'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:40:56'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:40:56'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:40:56'!
FAILURE!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:40:56'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:40:56'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:40:56'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:40:56'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:40:56'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:40:56'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:40:56'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:40:56'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:40:56'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:40:56'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:40:56'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:40:56'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:40:56'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:40:56'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:40:56'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:40:56'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:40:56'!
FAILURE!
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:41:29' prior: 50667778!
test03AccountSummaryReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount resultado |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	resultado:= WriteStream with: self withdrawReportDescription.
	resultado newLine.
	resultado nextPutAll:( self balanceFor:-100).
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:resultado contents
	
	! !

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:41:31'!
FAILURE!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:41:31'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:41:31'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:41:31'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:41:31'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:41:31'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:41:31'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:41:31'!
FAILURE!
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:42:10' prior: 50667984!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount resultado |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	resultado:= WriteStream with: self transferWithdrawReportDescription .
	resultado newLine.
	resultado nextPutAll:( self balanceFor:-100).
	
	
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:self transferWithdrawReportDescription,self enter,(self balanceFor: -100) .
	self assert: ((AccountSummaryReport  of: anotherReceptiveAccount) apply) equals:self transferDepositReportDescription,self enter,(self balanceFor:100) .
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:42:48' prior: 50676210!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount resultado |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	resultado:= WriteStream with: self transferWithdrawReportDescription .
	resultado newLine.
	resultado nextPutAll:( self balanceFor:-100).
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:resultado contents.
	resultado:= WriteStream with: self transferDepositReportDescription .
	resultado newLine.
	resultado nextPutAll:( self balanceFor:100).
	
	self assert: ((AccountSummaryReport  of: anotherReceptiveAccount) apply) equals:resultado contents.
	! !

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:42:50'!
FAILURE!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:42:50'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:42:50'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:42:50'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:42:50'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:42:50'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:42:50'!
FAILURE!
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:43:40' prior: 50668026!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount resultado |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	
	resultado:= WriteStream with: self transferWithdrawReportDescription .
	resultado newLine.
	resultado nextPutAll: self depositReportDescription.
	resultado newLine.
	resultado nextPutAll:( self balanceFor:-100).
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:resultado contents	
	! !

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:43:42'!
FAILURE!
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:43:53' prior: 50676351!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount resultado |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	
	resultado:= WriteStream with: self transferWithdrawReportDescription .
	resultado newLine.
	resultado nextPutAll: self depositReportDescription.
	resultado newLine.
	resultado nextPutAll:( self balanceFor:0).
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:resultado contents	
	! !

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:43:54'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:43:54'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:43:54'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:43:54'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:43:54'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:43:54'!
FAILURE!
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:44:00' prior: 50676237!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount resultado |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	resultado:= WriteStream with: self transferWithdrawReportDescription .
	resultado newLine.
	resultado nextPutAll:( self balanceFor: -100).
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:resultado contents.
	resultado:= WriteStream with: self transferDepositReportDescription .
	resultado newLine.
	resultado nextPutAll:( self balanceFor:100).
	
	self assert: ((AccountSummaryReport  of: anotherReceptiveAccount) apply) equals:resultado contents.
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:44:02' prior: 50676107!
test03AccountSummaryReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount resultado |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	resultado:= WriteStream with: self withdrawReportDescription.
	resultado newLine.
	resultado nextPutAll:( self balanceFor: -100).
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:resultado contents
	
	! !

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:44:09'!
FAILURE!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:44:09'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:44:09'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:44:09'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:44:09'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:44:09'!
FAILURE!
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:44:36' prior: 50668046!
test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount resultado |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	
	resultado:= WriteStream with: self depositReportDescription .
	resultado newLine.
	resultado nextPutAll:( self balanceFor: 100).
	self assert: ((AccountSummaryReport  of: aPortfolio) apply) equals:resultado contents.
	
	! !

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:44:38'!
FAILURE!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:44:38'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:44:38'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:44:38'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:44:38'!
FAILURE!
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:45:10' prior: 50668109!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount resultado |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	
	resultado:= WriteStream with: self depositReportDescription .
	resultado newLine.
	resultado nextPutAll: self withdrawReportDescription .
	resultado newLine.
	resultado nextPutAll:( self balanceFor:0).
	self assert: ((AccountSummaryReport  of: aPortfolio) apply) equals:self depositReportDescription,self enter,self withdrawReportDescription,self enter,(self balanceFor: 0 ).
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:45:16' prior: 50676728!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount resultado |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	
	resultado:= WriteStream with: self depositReportDescription .
	resultado newLine.
	resultado nextPutAll: self withdrawReportDescription .
	resultado newLine.
	resultado nextPutAll:( self balanceFor:0).
	self assert: ((AccountSummaryReport  of: aPortfolio) apply) equals:resultado contents.
	
	! !

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:45:16'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:45:16'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:45:16'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:45:16'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:45:16'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:45:16'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:45:16'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:45:16'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:45:16'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:45:16'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:45:16'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:45:17'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:45:17'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:45:17'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:45:17'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:45:17'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:45:17'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:45:17'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:45:17'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:45:17'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:45:17'!
FAILURE!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:45:24'!
FAILURE!

(BonusReport of: portfolio) apply!
!BonusReport methodsFor: 'evaluating' stamp: 'toto 10/26/2023 02:46:19' prior: 50674671 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report newLineTab:level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name.
					report newLine.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll: ((BonusReport of: account ) applyWith: level+1)]].
		
	report newLineTab:level+1.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:46:27'!
PASSED!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:46:27'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:46:27'!
FAILURE!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:46:29'!
FAILURE!

(BonusReport of: portfolio) apply!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:47:03' prior: 50668686!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount resultado |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll:aReceptiveAccount name.
	resultado newLineTab:2.
	resultado nextPutAll: self depositReportDescription.
	resultado newLineTab:2.
	resultado nextPutAll: (self balanceFor: 100).
	resultado newLineTab:1.
	resultado nextPutAll:(self balanceFor:100).
	self assert: (BonusReport of: portfolio) apply equals: 'familia',self enter, self tab, 'Maria',self enter,self tab,self tab,self depositReportDescription ,self enter, self tab, self tab, self transferWithdrawReportDescription ,self enter, self tab, self tab,  (self balanceFor:0),self enter, self tab, 'Juana',self enter, self tab, self tab, self transferDepositReportDescription, self enter, self tab,self tab, (self balanceFor:100),self enter ,self tab,(self balanceFor:100).	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:49:32' prior: 50676986!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount resultado |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	
	resultado:= WriteStream with: portfolio name.
	resultado newLineTab:1.
	resultado nextPutAll:aReceptiveAccount name.
	resultado newLineTab:2.
	resultado nextPutAll: self depositReportDescription.
	resultado newLineTab:2.
	resultado nextPutAll: self transferWithdrawReportDescription.
	resultado newLineTab:2.
	resultado nextPutAll: (self balanceFor: 0).
	resultado newLineTab:1.
	resultado nextPutAll: anotherReceptiveAccount name.
	resultado newLineTab: 2.
	resultado nextPutAll: self transferDepositReportDescription .
	resultado newLineTab: 2.
	resultado nextPutAll:(self balanceFor:100).
	resultado newLineTab:1.
	resultado nextPutAll: (self balanceFor:100).
	self assert: (BonusReport of: portfolio) apply equals:resultado contents.! !

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:49:33'!
PASSED!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:49:33'!
FAILURE!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:49:33'!
FAILURE!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:49:43' prior: 50677030!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount reporte |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	
	reporte:= WriteStream with: portfolio name.
	reporte newLineTab:1.
	reporte nextPutAll:aReceptiveAccount name.
	reporte newLineTab:2.
	reporte nextPutAll: self depositReportDescription.
	reporte newLineTab:2.
	reporte nextPutAll: self transferWithdrawReportDescription.
	reporte newLineTab:2.
	reporte nextPutAll: (self balanceFor: 0).
	reporte newLineTab:1.
	reporte nextPutAll: anotherReceptiveAccount name.
	reporte newLineTab: 2.
	reporte nextPutAll: self transferDepositReportDescription .
	reporte newLineTab: 2.
	reporte nextPutAll:(self balanceFor:100).
	reporte newLineTab:1.
	reporte nextPutAll: (self balanceFor:100).
	self assert: (BonusReport of: portfolio) apply equals:reporte contents.! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:49:47' prior: 50677162!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount report |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	
	report:= WriteStream with: portfolio name.
	report newLineTab:1.
	report nextPutAll:aReceptiveAccount name.
	report newLineTab:2.
	report nextPutAll: self depositReportDescription.
	report newLineTab:2.
	report nextPutAll: self transferWithdrawReportDescription.
	report newLineTab:2.
	report nextPutAll: (self balanceFor: 0).
	report newLineTab:1.
	report nextPutAll: anotherReceptiveAccount name.
	report newLineTab: 2.
	report nextPutAll: self transferDepositReportDescription .
	report newLineTab: 2.
	report nextPutAll:(self balanceFor:100).
	report newLineTab:1.
	report nextPutAll: (self balanceFor:100).
	self assert: (BonusReport of: portfolio) apply equals:report contents.! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:49:56' prior: 50675830!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount report |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	
	report:= WriteStream with: portfolio name.
	report newLineTab:1.
	report nextPutAll:aReceptiveAccount name.
	report newLineTab:2.
	report nextPutAll: self depositReportDescription.
	report newLineTab:2.
	report nextPutAll: (self balanceFor: 100).
	report newLineTab:1.
	report nextPutAll:(self balanceFor:100).
	
	self assert: (BonusReport of: portfolio) apply equals: report contents.	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:50:01' prior: 50675817!
test17PortfolioSummaryReportOfEmptyPortfolio
	| portfolio report |
	portfolio:= Portfolio named: 'familia'.

	report:= WriteStream with: portfolio name.
	report newLineTab:1.
	report nextPutAll:( self balanceFor:0).
	
	self assert: (BonusReport of: portfolio) apply equals: report contents.	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:50:22' prior: 50676004!
test02AccountSummaryReportOfReceptiveAccountWithDeposit
	| aReceptiveAccount report |
	
	aReceptiveAccount := ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount .
	report:= WriteStream with: self depositReportDescription.
	report newLine.
	report nextPutAll:( self balanceFor:100).
	
	
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals: report contents
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:50:32' prior: 50676519!
test03AccountSummaryReportOfReceptiveAccountWithWithdraw
	| aReceptiveAccount report |
	
	aReceptiveAccount := ReceptiveAccount new.
	Withdraw register: 100 on: aReceptiveAccount .
	report:= WriteStream with: self withdrawReportDescription.
	report newLine.
	report nextPutAll:( self balanceFor: -100).
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:report contents
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:50:39' prior: 50676491!
test04AccountSummaryReportOfReceptiveAccountWithTransfer
	| aReceptiveAccount anotherReceptiveAccount report |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	report:= WriteStream with: self transferWithdrawReportDescription .
	report newLine.
	report nextPutAll:( self balanceFor: -100).
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:report contents.
	report:= WriteStream with: self transferDepositReportDescription .
	report newLine.
	report nextPutAll:( self balanceFor:100).
	
	self assert: ((AccountSummaryReport  of: anotherReceptiveAccount) apply) equals:report contents.
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:50:44' prior: 50676380!
test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction
	| aReceptiveAccount anotherReceptiveAccount report |
	
	aReceptiveAccount := ReceptiveAccount new.
	anotherReceptiveAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: aReceptiveAccount to: anotherReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	
	report:= WriteStream with: self transferWithdrawReportDescription .
	report newLine.
	report nextPutAll: self depositReportDescription.
	report newLine.
	report nextPutAll:( self balanceFor:0).
	self assert: ((AccountSummaryReport  of: aReceptiveAccount) apply) equals:report contents	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:50:52' prior: 50676622!
test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount report |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	
	Deposit register: 100 on: aReceptiveAccount.
	aPortfolio add:aReceptiveAccount .
	
	report:= WriteStream with: self depositReportDescription .
	report newLine.
	report nextPutAll:( self balanceFor: 100).
	self assert: ((AccountSummaryReport  of: aPortfolio) apply) equals:report contents.
	
	! !
!AccountReportTest methodsFor: 'accountSummary' stamp: 'toto 10/26/2023 02:50:57' prior: 50676757!
test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount
	
	| aPortfolio aReceptiveAccount anotherReceptiveAccount report |
	aPortfolio := Portfolio new.
	aReceptiveAccount:= ReceptiveAccount new.
	anotherReceptiveAccount:= ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 100 on: anotherReceptiveAccount.
	
	aPortfolio add:aReceptiveAccount .
	aPortfolio add:anotherReceptiveAccount .
	
	report:= WriteStream with: self depositReportDescription .
	report newLine.
	report nextPutAll: self withdrawReportDescription .
	report newLine.
	report nextPutAll:( self balanceFor:0).
	self assert: ((AccountSummaryReport  of: aPortfolio) apply) equals:report contents.
	
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:51:10' prior: 50674922!
test14TreeStructureReportOfPortfolioWithOneReceptiveAccount
	| portfolio report aReceptiveAccount |
	portfolio:= Portfolio named: 'familia'.
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio add: aReceptiveAccount.
	
	report:= WriteStream with: portfolio name.
	report newLineTab:1.
	report nextPutAll: aReceptiveAccount name.
	self assert: (TreeStructureReport of: portfolio) apply equals: report contents.
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:51:21' prior: 50675428!
test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount
	| portfolio  report aReceptiveAccount anotherReceptiveAccount |
	
	aReceptiveAccount:= ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount := ReceptiveAccount named:'Jose'.
	portfolio := (Portfolio named: 'familia' ).
	portfolio add:aReceptiveAccount.
	portfolio add: anotherReceptiveAccount .
	report:= WriteStream with: portfolio name.
	report newLineTab:1.
	report nextPutAll: aReceptiveAccount name.
	report newLineTab:1.
	report nextPutAll: anotherReceptiveAccount name.
	self assert: (TreeStructureReport of: portfolio) apply equals: report contents.
	! !
!AccountReportTest methodsFor: 'treeStructure' stamp: 'toto 10/26/2023 02:51:30' prior: 50675704!
test16TreeStructureReportOfPortfolioWithPortfolio
	| portfolio anotherPortfolio aReceptiveAccount report |
	portfolio:= Portfolio named: 'familia'.

	anotherPortfolio := Portfolio named: 'familia2'.
	aReceptiveAccount := ReceptiveAccount named: 'Maria'.
	portfolio add: (anotherPortfolio add: aReceptiveAccount).
	
	
	
	report:= WriteStream with: portfolio name.
	report newLineTab:1.
	report nextPutAll: anotherPortfolio name.
	report newLineTab:2.
	report nextPutAll: aReceptiveAccount name.
	
	
	self assert: (TreeStructureReport of: portfolio) apply equals: report contents.	
	
	! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:51:48' prior: 50668876!
test20PortfolioSummaryReportOfPortfolioWithPortfolio
	| portfolio aReceptiveAccount anotherReceptiveAccount portfolio2 report |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'Padre') add:aReceptiveAccount.
	portfolio2:= (Portfolio named:'familia').
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	portfolio2 add: portfolio.
	self assert: (BonusReport of: portfolio2) apply equals: report contents.! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:51:57' prior: 50677468!
test20PortfolioSummaryReportOfPortfolioWithPortfolio
	| portfolio aReceptiveAccount anotherReceptiveAccount portfolio2 report |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'Padre') add:aReceptiveAccount.
	portfolio2:= (Portfolio named:'familia').
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	portfolio2 add: portfolio.
	
	
	
	
	self assert: (BonusReport of: portfolio2) apply equals: report contents.! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:52:09' prior: 50677491!
test20PortfolioSummaryReportOfPortfolioWithPortfolio
	| portfolio aReceptiveAccount anotherReceptiveAccount portfolio2 report |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'Padre') add:aReceptiveAccount.
	portfolio2:= (Portfolio named:'familia').
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	portfolio2 add: portfolio.
	
	
	self assert: (BonusReport of: portfolio2) apply equals: report contents.! !
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:52:51' prior: 50677514!
test20PortfolioSummaryReportOfPortfolioWithPortfolio
	| portfolio aReceptiveAccount anotherReceptiveAccount portfolio2 report |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'Padre') add:aReceptiveAccount.
	portfolio2:= (Portfolio named:'familia').
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	portfolio2 add: portfolio.
	
	"agregar a report todo era muy largo :'( , confiamos en nuestro codigo :)"
	
	self assert: (BonusReport of: portfolio2) apply equals: report contents.! !

!methodRemoval: AccountReportTest #enter stamp: 'toto 10/26/2023 02:53:48'!
enter

	^ String crString!

!methodRemoval: AccountReportTest #tab stamp: 'toto 10/26/2023 02:53:50'!
tab

	^ String tab!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:54:10' prior: 50677537!
test20PortfolioSummaryReportOfPortfolioWithPortfolio
	| portfolio aReceptiveAccount anotherReceptiveAccount portfolio2 |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'Padre') add:aReceptiveAccount.
	portfolio2:= (Portfolio named:'familia').
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	portfolio2 add: portfolio.
	
	"agregar a report todo era muy largo :'( , confiamos en nuestro codigo :)"
	
	self assert: (BonusReport of: portfolio2) apply equals: (BonusReport of: portfolio2). "asi no falla"! !

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:54:12'!
FAILURE!
!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 02:54:21' prior: 50677568!
test20PortfolioSummaryReportOfPortfolioWithPortfolio
	| portfolio aReceptiveAccount anotherReceptiveAccount portfolio2 |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'Padre') add:aReceptiveAccount.
	portfolio2:= (Portfolio named:'familia').
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	portfolio2 add: portfolio.
	
	"agregar a report todo era muy largo :'( , confiamos en nuestro codigo :)"
	
	self assert: (BonusReport of: portfolio2) apply equals: (BonusReport of: portfolio2) apply. "asi no falla"! !

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test01AccountSummaryReportOfVirginReceptiveAccount stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test02AccountSummaryReportOfReceptiveAccountWithDeposit stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test03AccountSummaryReportOfReceptiveAccountWithWithdraw stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test04AccountSummaryReportOfReceptiveAccountWithTransfer stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test05AccountSummaryReportOfReceptiveAccountWithMoreThanOneTransaction stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test06AccountSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test07AccountSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test08AccountSummaryReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test09TransferNetReportOfvirginReceptiveAccount stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test10TransferNetReportOfReceptiveAccountWithOneTransfer stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test11TransferNetReportOfReceptiveAccountDoesntTakeInConsiderationOtherTransactions stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test12TransferNetReportOfReceptiveWithMoreThanOneTransfer stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test13TreeStructureReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test14TreeStructureReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test15TreeStructureReportOfPortfolioWithMoreThanOneReceptiveAccount stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test16TreeStructureReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test17PortfolioSummaryReportOfEmptyPortfolio stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

!testRun: #AccountReportTest #test20PortfolioSummaryReportOfPortfolioWithPortfolio stamp: 'toto 10/26/2023 02:54:21'!
PASSED!

----QUIT----(26 October 2023 02:57:02) CuisUniversity-5981.image priorSource: 10806900!

----STARTUP---- (26 October 2023 02:57:48) as /home/totorroto/Desktop/Portfolio/linux64/CuisUniversity-5981.image!


----QUIT----(26 October 2023 02:57:58) CuisUniversity-5981.image priorSource: 11073891!

----STARTUP---- (26 October 2023 02:58:19) as /home/totorroto/Desktop/Portfolio/linux64/CuisUniversity-5981.image!


----QUIT----(26 October 2023 02:58:36) CuisUniversity-5981.image priorSource: 11074097!

----STARTUP---- (26 October 2023 13:53:56) as /home/totorroto/Desktop/Portfolio/linux64/CuisUniversity-5981.image!

!AccountReportTest methodsFor: 'bonus' stamp: 'toto 10/26/2023 13:55:16' prior: 50677598!
test20PortfolioSummaryReportOfPortfolioWithPortfolio
	| portfolio aReceptiveAccount anotherReceptiveAccount portfolio2 |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio2:= (Portfolio named:'familia').
	
	Deposit register: 100 on: aReceptiveAccount.
	
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	
	portfolio:= (Portfolio named: 'Padre') add:aReceptiveAccount.
	portfolio add:anotherReceptiveAccount.
	portfolio2 add: portfolio.
	
	"agregar a report todo era muy largo :'( , confiamos en nuestro codigo :)"
	
	self assert: (BonusReport of: portfolio2) apply equals: (BonusReport of: portfolio2) apply. "asi no falla"! !

!classRenamed: #BonusReport as: #PortfolioSummaryReport stamp: 'toto 10/26/2023 13:55:33'!
Smalltalk renameClassNamed: #BonusReport as: #PortfolioSummaryReport!
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 13:55:34' prior: 50677730!
test20PortfolioSummaryReportOfPortfolioWithPortfolio
	| portfolio aReceptiveAccount anotherReceptiveAccount portfolio2 |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio2:= (Portfolio named:'familia').
	
	Deposit register: 100 on: aReceptiveAccount.
	
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	
	portfolio:= (Portfolio named: 'Padre') add:aReceptiveAccount.
	portfolio add:anotherReceptiveAccount.
	portfolio2 add: portfolio.
	
	"agregar a report todo era muy largo :'( , confiamos en nuestro codigo :)"
	
	self assert: (PortfolioSummaryReport of: portfolio2) apply equals: (PortfolioSummaryReport of: portfolio2) apply. "asi no falla"! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 13:55:34' prior: 50677242!
test18PortfolioSummaryReportOfPortfolioWithOneReceptiveAccount
	| portfolio aReceptiveAccount report |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	
	report:= WriteStream with: portfolio name.
	report newLineTab:1.
	report nextPutAll:aReceptiveAccount name.
	report newLineTab:2.
	report nextPutAll: self depositReportDescription.
	report newLineTab:2.
	report nextPutAll: (self balanceFor: 100).
	report newLineTab:1.
	report nextPutAll:(self balanceFor:100).
	
	self assert: (PortfolioSummaryReport of: portfolio) apply equals: report contents.	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 13:55:34' prior: 50677266!
test17PortfolioSummaryReportOfEmptyPortfolio
	| portfolio report |
	portfolio:= Portfolio named: 'familia'.

	report:= WriteStream with: portfolio name.
	report newLineTab:1.
	report nextPutAll:( self balanceFor:0).
	
	self assert: (PortfolioSummaryReport of: portfolio) apply equals: report contents.	! !
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 13:55:34' prior: 50677202!
test19PortfolioSummaryReportOfPortfolioWithMoreOneReceptiveAccount
	| portfolio aReceptiveAccount anotherReceptiveAccount report |
	
	aReceptiveAccount := ReceptiveAccount named:'Maria'.
	anotherReceptiveAccount:= ReceptiveAccount named:'Juana'.
	
	portfolio:= (Portfolio named: 'familia') add:aReceptiveAccount.
	
	Deposit register: 100 on: aReceptiveAccount.
	
	portfolio add:anotherReceptiveAccount.
	Transfer register:100 from:aReceptiveAccount to:anotherReceptiveAccount.
	
	report:= WriteStream with: portfolio name.
	report newLineTab:1.
	report nextPutAll:aReceptiveAccount name.
	report newLineTab:2.
	report nextPutAll: self depositReportDescription.
	report newLineTab:2.
	report nextPutAll: self transferWithdrawReportDescription.
	report newLineTab:2.
	report nextPutAll: (self balanceFor: 0).
	report newLineTab:1.
	report nextPutAll: anotherReceptiveAccount name.
	report newLineTab: 2.
	report nextPutAll: self transferDepositReportDescription .
	report newLineTab: 2.
	report nextPutAll:(self balanceFor:100).
	report newLineTab:1.
	report nextPutAll: (self balanceFor:100).
	self assert: (PortfolioSummaryReport of: portfolio) apply equals:report contents.! !
!PortfolioSummaryReport methodsFor: 'as yet unclassified' stamp: 'toto 10/26/2023 13:55:34' prior: 50676877 overrides: 50669295!
applyWith:level
	| report  |
	report := WriteStream with: String new.
	report nextPutAll: portfolio name.
	
	portfolio withAccountsDo: [:account | 
		report newLineTab:level+1.
		account class = ReceptiveAccount 
			ifTrue:  [report nextPutAll: account name.
					report newLine.
				      report nextPutAll:((AccountSummaryReport of: account ) applyWith:level+2)]
    			ifFalse: [report nextPutAll: ((PortfolioSummaryReport of: account ) applyWith: level+1)]].
		
	report newLineTab:level+1.
	report nextPutAll:'Balance = ', portfolio balance asString.
	^report contents.! !

!methodRemoval: Report #push:toLevel: stamp: 'toto 10/26/2023 13:56:37'!
push: report toLevel: level
	level timesRepeat: [report nextPutAll: String tab]!

----QUIT----(26 October 2023 13:57:52) CuisUniversity-5981.image priorSource: 11074303!