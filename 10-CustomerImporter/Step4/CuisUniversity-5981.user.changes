

----QUIT----(13 August 2023 19:14:09) CuisUniversity-5981.image priorSource: 5713367!

----STARTUP---- (13 August 2023 19:14:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5981.image!


----QUIT----(13 August 2023 19:14:10) CuisUniversity-5981.image priorSource: 10197065!

----STARTUP---- (26 November 2023 23:30:13) as C:\Users\ivanb\Desktop\Cuis\windows64 (1)\windows64\CuisUniversity-5981.image!


----End fileIn of C:\Users\ivanb\Desktop\Cuis\windows64 (1)\windows64\CustomerImporter-3.st----!

!classRenamed: #ImportTest as: #CustomerImportTest stamp: 'IB 11/26/2023 23:32:01'!
Smalltalk renameClassNamed: #ImportTest as: #CustomerImportTest!

TestCase subclass: #SupplierImportTest
	instanceVariableNames: 'system'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #SupplierImportTest category: 'CustomerImporter' stamp: 'IB 11/26/2023 23:32:58'!
TestCase subclass: #SupplierImportTest
	instanceVariableNames: 'system'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'IB 11/26/2023 23:35:40'!
Object subclass: #SupplierImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!SupplierImportTest methodsFor: 'no messages' stamp: 'IB 11/26/2023 23:35:29'!
test09CannotImportEmptyLine

	self
		shouldFailImporting: self emptyLine
		messageText: SupplierImporter invalidRecordTypeErrorDescription
		asserting: [ self assertNoSupplierWasImported ]

	! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/26/2023 23:35:51'!
testCannotImportEmptyLine

	self
		shouldFailImporting: self emptyLine
		messageText: SupplierImporter invalidRecordTypeErrorDescription
		asserting: [ self assertNoSupplierWasImported ]

	! !

!methodRemoval: SupplierImportTest #test09CannotImportEmptyLine stamp: 'IB 11/26/2023 23:35:51'!
test09CannotImportEmptyLine

	self
		shouldFailImporting: self emptyLine
		messageText: SupplierImporter invalidRecordTypeErrorDescription
		asserting: [ self assertNoSupplierWasImported ]

	!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:36:06'!
ERROR!
!SupplierImportTest methodsFor: 'accessing' stamp: 'IB 11/26/2023 23:36:14'!
emptyLine
	self shouldBeImplemented.! !
!SupplierImportTest methodsFor: 'accessing' stamp: 'IB 11/26/2023 23:36:21' prior: 50651412!
emptyLine
	
	^'
	'! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:36:25'!
ERROR!
!SupplierImportTest methodsFor: 'accessing' stamp: 'IB 11/26/2023 23:36:35' prior: 50651417!
emptyLine

	^ReadStream on: '
'! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:36:41'!
ERROR!
!SupplierImporter class methodsFor: 'error' stamp: 'IB 11/26/2023 23:36:51'!
invalidRecordTypeErrorDescription
	self shouldBeImplemented.! !
!SupplierImporter class methodsFor: 'error' stamp: 'IB 11/26/2023 23:36:59' prior: 50651431!
invalidRecordTypeErrorDescription

	^'Invalid record type'! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:37:00'!
ERROR!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/26/2023 23:37:13'!
shouldFailImporting: aRenameMe1 messageText: aRenameMe2 asserting: aRenameMe3 
	self shouldBeImplemented.! !
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/26/2023 23:37:31' prior: 50651444!
shouldFailImporting: aReadStream messageText: anErrorMessageText asserting: anAssertionBlock

	self
		should: [ CustomerImporter valueFrom: aReadStream into: system. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anErrorMessageText equals: anError messageText.
			anAssertionBlock value ]

	! !
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/26/2023 23:37:34' prior: 50651451!
shouldFailImporting: aReadStream messageText: anErrorMessageText asserting: anAssertionBlock

	self
		should: [ CustomerImporter valueFrom: aReadStream into: system. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anErrorMessageText equals: anError messageText.
			anAssertionBlock value ]! !
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/26/2023 23:37:38' prior: 50651465!
shouldFailImporting: aReadStream messageText: anErrorMessageText asserting: anAssertionBlock

	self
		should: [ CustomerImporter valueFrom: aReadStream into: system]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anErrorMessageText equals: anError messageText.
			anAssertionBlock value ]! !
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/26/2023 23:37:39' prior: 50651479!
shouldFailImporting: aReadStream messageText: anErrorMessageText asserting: anAssertionBlock

	self
		should: [ CustomerImporter valueFrom: aReadStream into: system ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anErrorMessageText equals: anError messageText.
			anAssertionBlock value ]! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:37:41'!
ERROR!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/26/2023 23:37:54'!
assertNoSupplierWasImported
	self shouldBeImplemented.! !
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/26/2023 23:37:57' prior: 50651509!
assertNoSupplierWasImported
	
	! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/26/2023 23:38:42'!
assertNoCustomerWasImported

	^ self assert: 0 equals: system numberOfSuppliers! !

!methodRemoval: SupplierImportTest #assertNoCustomerWasImported stamp: 'IB 11/26/2023 23:38:57'!
assertNoCustomerWasImported

	^ self assert: 0 equals: system numberOfSuppliers!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/26/2023 23:39:26' prior: 50651514!
assertNoSupplierWasImported
	
	^ self assert: 0 equals: system numberOfSuppliers! !

!classDefinition: #SupplierImportTest category: 'CustomerImporter' stamp: 'IB 11/26/2023 23:39:40'!
TestCase subclass: #SupplierImportTest
	instanceVariableNames: 'supplierSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/26/2023 23:39:40' prior: 50651493!
shouldFailImporting: aReadStream messageText: anErrorMessageText asserting: anAssertionBlock

	self
		should: [ CustomerImporter valueFrom: aReadStream into: supplierSystem ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anErrorMessageText equals: anError messageText.
			anAssertionBlock value ]! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/26/2023 23:39:40' prior: 50651530!
assertNoSupplierWasImported
	
	^ self assert: 0 equals: supplierSystem numberOfSuppliers! !
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/26/2023 23:39:47' prior: 50651544!
shouldFailImporting: aReadStream messageText: anErrorMessageText asserting: anAssertionBlock

	self
		should: [ SupplierImporter valueFrom: aReadStream into: supplierSystem ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anErrorMessageText equals: anError messageText.
			anAssertionBlock value ]! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:41:15'!
ERROR!
!SupplierImporter class methodsFor: 'instance creation' stamp: 'IB 11/26/2023 23:41:22'!
valueFrom: aReadStream into: aSupplierSystem 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeValueFrom: aReadStream into: aSupplierSystem ! !
!SupplierImporter class methodsFor: 'instance creation' stamp: 'IB 11/26/2023 23:41:32' prior: 50651581!
valueFrom: aReadStream into: aCustomerSystem

	^(self from: aReadStream into: aCustomerSystem) value! !
!SupplierImporter class methodsFor: 'instance creation' stamp: 'IB 11/26/2023 23:41:39' prior: 50651591!
valueFrom: aReadStream into: aSupplierSystem

	^(self from: aReadStream into: aSupplierSystem) value! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:41:41'!
ERROR!
!SupplierImporter class methodsFor: 'instance creation' stamp: 'IB 11/26/2023 23:41:47'!
from: aReadStream into: aSupplierSystem 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFrom: aReadStream into: aSupplierSystem ! !
!SupplierImporter class methodsFor: 'instance creation' stamp: 'IB 11/26/2023 23:42:01' prior: 50651608!
from: aReadStream into: aSupplierSystem

	^self new initializeFrom: aReadStream into: aSupplierSystem! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:42:02'!
ERROR!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'IB 11/26/2023 23:42:11'!
Object subclass: #SupplierImporter
	instanceVariableNames: 'readStream'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'IB 11/26/2023 23:42:11'!
Object subclass: #SupplierImporter
	instanceVariableNames: 'readStream supplierSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!SupplierImporter methodsFor: 'initialization' stamp: 'IB 11/26/2023 23:42:11'!
initializeFrom: aReadStream into: aSupplierSystem 
	self shouldBeImplemented.
	readStream := aReadStream.
	supplierSystem := aSupplierSystem.! !
!SupplierImporter methodsFor: 'initialization' stamp: 'IB 11/26/2023 23:42:36' prior: 50651643!
initializeFrom: aReadStream into: aSupplierSystem

	readStream := aReadStream.
	supplierSystem := aSupplierSystem! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:42:39'!
FAILURE!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'IB 11/26/2023 23:43:00'!
Object subclass: #CustomerImporter
	instanceVariableNames: 'readStream newCustomer line record customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!CustomerImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/26/2023 23:43:00' prior: 50650774!
initializeFrom: aReadStream into: aCustomerSystem

	readStream := aReadStream.
	customerSystem := aCustomerSystem ! !
!CustomerImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/26/2023 23:43:00' prior: 50650794!
importCustomer

	self assertValidCustomerRecord.

	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth.
	customerSystem add: newCustomer! !
!SupplierImporter methodsFor: 'initialization' stamp: 'IB 11/26/2023 23:44:31' overrides: 16902254!
value

	self error: self class invalidRecordTypeErrorDescription! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:44:32'!
ERROR!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:44:32'!
ERROR!
!CustomerImportTest methodsFor: 'setUp/tearDown' stamp: 'IB 11/26/2023 23:45:20' prior: 50650573 overrides: 16961394!
setUp

	system := Environment current createCustomerSystem.
	system start.
	system beginTransaction! !
!SupplierImportTest methodsFor: 'running' stamp: 'IB 11/26/2023 23:45:55' overrides: 16961394!
setUp

	supplierSystem := Environment current createSupplierSystem.
	supplierSystem start.
	supplierSystem beginTransaction! !

self makeCurrent!
!DevelopmentEnvironment methodsFor: 'supplierSystem' stamp: 'IB 11/26/2023 23:46:43'!
createSupplierSystem
	self shouldBeImplemented.! !

!classDefinition: #TransientSupplierSystem category: 'CustomerImporter' stamp: 'IB 11/26/2023 23:47:28'!
Object subclass: #TransientSupplierSystem
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!DevelopmentEnvironment methodsFor: 'customer system' stamp: 'IB 11/26/2023 23:47:14' prior: 50651292 overrides: 50651228!
createCustomerSystem

	^TransientSupplierSystem new! !
!DevelopmentEnvironment methodsFor: 'customer system' stamp: 'HAW 5/22/2022 21:38:39' prior: 50651731 overrides: 50651228!
createCustomerSystem

	^TransientCustomerSystem new! !
!DevelopmentEnvironment methodsFor: 'supplierSystem' stamp: 'IB 11/26/2023 23:48:21' prior: 50651717!
createSupplierSystem
	
	^TransientSupplierSystem new	! !
!TransientSupplierSystem methodsFor: 'starting' stamp: 'IB 11/26/2023 23:49:24'!
start
	self shouldBeImplemented.! !

!classDefinition: #TransientSupplierSystem category: 'CustomerImporter' stamp: 'IB 11/26/2023 23:49:44'!
Object subclass: #TransientSupplierSystem
	instanceVariableNames: 'suppliers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!TransientSupplierSystem methodsFor: 'starting' stamp: 'IB 11/26/2023 23:49:43' prior: 50651747!
start

	suppliers := OrderedCollection new! !
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/26/2023 23:49:54'!
beginTransaction
	self shouldBeImplemented.! !
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/26/2023 23:50:03' prior: 50651764!
beginTransaction

	! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:50:04'!
ERROR!
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/26/2023 23:50:10'!
numberOfSuppliers
	self shouldBeImplemented.! !
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/26/2023 23:50:31' prior: 50651776!
numberOfSuppliers

	^suppliers size! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:50:32'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/26/2023 23:50:40'!
PASSED!

----SNAPSHOT----(26 November 2023 23:50:43) CuisUniversity-5981.image priorSource: 10197292!
!CustomerImportTest methodsFor: 'tests' stamp: 'IB 11/26/2023 23:53:42' prior: 50650378!
test01ValidDataIsImportedCorrectly

	CustomerImporter valueFrom: self validImportData into: system.

	self assertImportedRightNumberOfCustomers.
	self assertPepeSanchezWasImportedCorrecty.
	self assertJuanPerezWasImportedCorrectly ! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:00:29'!
testImportOnlyOneSupplier

	|importedSupplier|
	
	SupplierImporter valueFrom: self dataWithSingleSupplier into: supplierSystem.
	
	self assert: supplierSystem numberOfSuppliers equals: 1.
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: 123.

	self assert: importedSupplier name equals: 'Supplier1'.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: 123! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:01:24'!
dataWithSingleSupplier

	^ ReadStream on: 'S,Supplier1,D,123'! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:01:37'!
ERROR!
!CustomerImporter methodsFor: 'evaluating' stamp: 'IB 11/27/2023 00:02:42' prior: 50650781 overrides: 16902254!
value

	[ self hasLineToImport ] whileTrue: [
		self createRecord.
		self importRecord ]! !
!SupplierImporter methodsFor: 'initialization' stamp: 'IB 11/27/2023 00:04:23' prior: 50651690 overrides: 16902254!
value

	self createRecord.
	self importRecord! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:04:25'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:04:32'!
createRecord
	self shouldBeImplemented.! !
!CustomerImporter methodsFor: 'evaluating - private' stamp: 'IB 11/27/2023 00:05:28' prior: 50650849!
createRecord

	line := readStream nextLine.
	^ record := line findTokens: $,! !
!CustomerImporter methodsFor: 'evaluating - private' stamp: 'HAW 5/22/2022 18:47:26' prior: 50651851!
createRecord

	^ record := line findTokens: $,! !

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 00:05:54'!
Object subclass: #SupplierImporter
	instanceVariableNames: 'readStream supplierSystem record'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 00:05:56'!
Object subclass: #SupplierImporter
	instanceVariableNames: 'readStream supplierSystem record line'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:05:53' prior: 50651846!
createRecord

	^ record := line findTokens: $,! !
!SupplierImporter methodsFor: 'initialization' stamp: 'IB 11/27/2023 00:06:01' prior: 50651839 overrides: 16902254!
value

	line := readStream nextLine.
	self createRecord.
	self importRecord! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:06:02'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:06:08'!
importRecord
	self shouldBeImplemented.! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:07:21' prior: 50651893!
importRecord

	self assertRecordNotEmpty.

	self isSupplierRecord ifTrue: [ ^self importSupplier ].

	self error: self class invalidRecordTypeErrorDescription! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:07:22'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:07:25'!
assertRecordNotEmpty
	self shouldBeImplemented.! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:07:37' prior: 50651909!
assertRecordNotEmpty

	record isEmpty ifTrue: [ self error: self class invalidRecordTypeErrorDescription ]! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:07:38'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:07:44'!
isSupplierRecord
	self shouldBeImplemented.! !

'S'!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:08:01' prior: 50651923!
isSupplierRecord

	^ record first = 'S'! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:08:03'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:08:08'!
importSupplier
	self shouldBeImplemented.! !

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 00:10:27'!
Object subclass: #SupplierImporter
	instanceVariableNames: 'readStream supplierSystem record line newSupplier'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'IB 11/27/2023 00:10:50'!
Object subclass: #Supplier
	instanceVariableNames: 'name identificationType identificationNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:10:25' prior: 50651935!
importSupplier

	newSupplier := 
		Supplier 
			named: record second
			withIdentificationType: record fourth 
			andNumber: record fifth.
			
	supplierSystem add: newSupplier! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:10:54'!
ERROR!

record third !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:11:22' prior: 50651957!
importSupplier

	newSupplier := 
		Supplier 
			named: record second
			withIdentificationType: record third 
			andNumber: record fourth.
			
	supplierSystem add: newSupplier! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:11:23'!
ERROR!
!Supplier class methodsFor: 'instance creation' stamp: 'IB 11/27/2023 00:11:28'!
named: aRenameMe1 withIdentificationType: aRenameMe2 andNumber: aRenameMe3 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aRenameMe1 withIdentificationType: aRenameMe2 andNumber: aRenameMe3 ! !
!Supplier class methodsFor: 'instance creation' stamp: 'IB 11/27/2023 00:12:04' prior: 50651981!
named: aName withIdentificationType: anIdentificationType andNumber: anIdentificationNumber

	^self new initializeNamed: aName withIdentificationType: anIdentificationType andNumber: anIdentificationNumber ! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:12:05'!
ERROR!
!Supplier methodsFor: 'initialization' stamp: 'IB 11/27/2023 00:12:12'!
initializeNamed: aName withIdentificationType: anIdentificationType andNumber: anIdentificationNumber 
	self shouldBeImplemented.
	name := aName.
	identificationType := anIdentificationType.
	identificationNumber := anIdentificationNumber.! !
!Supplier methodsFor: 'initialization' stamp: 'IB 11/27/2023 00:12:20' prior: 50652005!
initializeNamed: aName withIdentificationType: anIdentificationType andNumber: anIdentificationNumber

	name := aName.
	identificationType := anIdentificationType.
	identificationNumber := anIdentificationNumber! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:12:21'!
ERROR!
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:12:29'!
add: aNewSupplier 
	self shouldBeImplemented.! !
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:12:51' prior: 50652029!
add: aSupplier

	suppliers add: aSupplier ! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:12:51'!
ERROR!
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:12:56'!
supplierWithIdentificationType: aRenameMe1 andNumber: aRenameMe2 
	self shouldBeImplemented.! !
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:13:21' prior: 50652042!
supplierWithIdentificationType: anIdType andNumber: anIdNumber 

	^suppliers detect: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:13:23'!
ERROR!
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:13:29'!
identificationType
	self shouldBeImplemented.
	^identificationType! !
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:13:35' prior: 50652061!
identificationType

	^identificationType! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:13:36'!
ERROR!
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:13:40'!
identificationNumber
	self shouldBeImplemented.
	^identificationNumber! !
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:13:43' prior: 50652073!
identificationNumber
	
	^identificationNumber! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:13:44'!
ERROR!

suppliers!
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:14:10' prior: 50652049!
supplierWithIdentificationType: anIdType andNumber: anIdNumber 

	^suppliers detect: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]! !

suppliers!

self!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:15:48' prior: 50651805!
testImportOnlyOneSupplier

	|importedSupplier|
	
	SupplierImporter valueFrom: self dataWithSingleSupplier into: supplierSystem.
	
	self assert: supplierSystem numberOfSuppliers equals: 1.
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.

	self assert: importedSupplier name equals: 'Supplier1'.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:15:49'!
FAILURE!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:16:15'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:16:16'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:16:16'!
FAILURE!

importedSupplier!
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:16:50'!
firstName

	^name! !

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'IB 11/27/2023 00:16:57'!
Object subclass: #Supplier
	instanceVariableNames: 'firstName identificationType identificationNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!Supplier methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 00:16:57' prior: 50652127!
firstName

	^firstName! !
!Supplier methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 00:16:57' prior: 50652016!
initializeNamed: aName withIdentificationType: anIdentificationType andNumber: anIdentificationNumber

	firstName := aName.
	identificationType := anIdentificationType.
	identificationNumber := anIdentificationNumber! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:17:08' prior: 50652097!
testImportOnlyOneSupplier

	|importedSupplier|
	
	SupplierImporter valueFrom: self dataWithSingleSupplier into: supplierSystem.
	
	self assert: supplierSystem numberOfSuppliers equals: 1.
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.

	self assert: importedSupplier firstName equals: 'Supplier1'.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:17:09'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:17:09'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:17:09'!
PASSED!

----SNAPSHOT----(27 November 2023 00:17:14) CuisUniversity-5981.image priorSource: 10244492!

----SNAPSHOT----(27 November 2023 00:17:36) CuisUniversity-5981.image priorSource: 10256961!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:18:18' prior: 50652154!
testImportOnlyOneSupplier

	|importedSupplie aStreamr|
	
	aStream := self dataWithSingleSupplier.
	SupplierImporter valueFrom: aStream into: supplierSystem.
	
	self assert: supplierSystem numberOfSuppliers equals: 1.
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.

	self assert: importedSupplier firstName equals: 'Supplier1'.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:18:28' prior: 50652187!
testImportOnlyOneSupplier

	|importedSupplier aStream|
	
	aStream := self dataWithSingleSupplier.
	SupplierImporter valueFrom: aStream into: supplierSystem.
	
	self assert: supplierSystem numberOfSuppliers equals: 1.
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.

	self assert: importedSupplier firstName equals: 'Supplier1'.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:18:43'!
import: aStream

	^ SupplierImporter valueFrom: aStream into: supplierSystem! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:18:43' prior: 50652206!
testImportOnlyOneSupplier

	|importedSupplier aStream|
	
	aStream := self dataWithSingleSupplier.
	self import: aStream.
	
	self assert: supplierSystem numberOfSuppliers equals: 1.
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.

	self assert: importedSupplier firstName equals: 'Supplier1'.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:18:48' prior: 50652230!
testImportOnlyOneSupplier

	|importedSupplier |
	
	self import: self dataWithSingleSupplier.
	
	self assert: supplierSystem numberOfSuppliers equals: 1.
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.

	self assert: importedSupplier firstName equals: 'Supplier1'.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !

----SNAPSHOT----(27 November 2023 00:19:22) CuisUniversity-5981.image priorSource: 10257055!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:19:42' prior: 50652248!
testImportOnlyOneSupplier

	|importedSupplier |
	
	self import: self dataWithSingleSupplier.
	
	self assert: supplierSystem numberOfSuppliers equals: 1.
	
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: 'Supplier1'.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:19:52' prior: 50652268!
testImportOnlyOneSupplier

	|importedSupplier aNumberOfSuppliers |
	
	self import: self dataWithSingleSupplier.
	
	aNumberOfSuppliers := 1.
	self assert: supplierSystem numberOfSuppliers equals: aNumberOfSuppliers.
	
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: 'Supplier1'.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:20:22'!
assertNumberOfSuppliersIs: aNumberOfSuppliers

	^ self assert: supplierSystem numberOfSuppliers equals: aNumberOfSuppliers! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:20:22' prior: 50652285!
testImportOnlyOneSupplier

	|importedSupplier aNumberOfSuppliers |
	
	self import: self dataWithSingleSupplier.
	
	aNumberOfSuppliers := 1.
	self assertNumberOfSuppliersIs: aNumberOfSuppliers.
	
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: 'Supplier1'.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:20:31' prior: 50652310!
testImportOnlyOneSupplier

	|importedSupplier |
	
	self import: self dataWithSingleSupplier.
	
	self assertNumberOfSuppliersIs: 1.
	
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: 'Supplier1'.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:20:42'!
assertNumberOfRegisteredSuppliersIs: aNumberOfSuppliers

	^ self assert: supplierSystem numberOfSuppliers equals: aNumberOfSuppliers! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 00:20:42' prior: 50652328!
testImportOnlyOneSupplier

	|importedSupplier |
	
	self import: self dataWithSingleSupplier.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: 'Supplier1'.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !

!methodRemoval: SupplierImportTest #assertNumberOfSuppliersIs: stamp: 'IB 11/27/2023 00:20:42'!
assertNumberOfSuppliersIs: aNumberOfSuppliers

	^ self assert: supplierSystem numberOfSuppliers equals: aNumberOfSuppliers!

----SNAPSHOT----(27 November 2023 00:20:44) CuisUniversity-5981.image priorSource: 10259637!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:20:47' prior: 50652352!
testImportOnlyOneSupplier

	|importedSupplier |
	
	self import: self dataWithSingleSupplier.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: 'Supplier1'.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:21:08' prior: 50652378!
testImportOnlyOneSupplier

	|importedSupplier aName |
	
	self import: self dataWithSingleSupplier.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	aName := 'Supplier1'.
	self assert: importedSupplier firstName equals: aName.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:21:13' prior: 50652395!
testImportOnlyOneSupplier

	|importedSupplier aName |
	
	self import: self dataWithSingleSupplier.
	
	aName := 'Supplier1'.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: aName.
	self assert: importedSupplier identificationType equals: 'D'.
	self assert: importedSupplier identificationNumber equals: '123'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:21:27' prior: 50652412!
testImportOnlyOneSupplier

	|importedSupplier aName anIdType |
	
	self import: self dataWithSingleSupplier.
	
	aName := 'Supplier1'.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: aName.
	anIdType := 'D'.
	self assert: importedSupplier identificationType equals: anIdType.
	self assert: importedSupplier identificationNumber equals: '123'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:21:40' prior: 50652429!
testImportOnlyOneSupplier

	|importedSupplier aName anIdType anIdNumber |
	
	self import: self dataWithSingleSupplier.
	
	aName := 'Supplier1'.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: aName.
	anIdType := 'D'.
	self assert: importedSupplier identificationType equals: anIdType.
	anIdNumber := '123'.
	self assert: importedSupplier identificationNumber equals: anIdNumber! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:21:48' prior: 50652447!
testImportOnlyOneSupplier

	|importedSupplier aName anIdType anIdNumber |
	
	self import: self dataWithSingleSupplier.
	
	aName := 'Supplier1'.
	anIdNumber := '123'.
	anIdType := 'D'.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: aName.
	self assert: importedSupplier identificationType equals: anIdType.
	self assert: importedSupplier identificationNumber equals: anIdNumber! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:22:26' prior: 50652467!
testImportOnlyOneSupplier

	| aName anIdType anIdNumber |
	
	self import: self dataWithSingleSupplier.
	
	aName := 'Supplier1'.
	anIdNumber := '123'.
	anIdType := 'D'.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	[|importedSupplier|importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: aName.
	self assert: importedSupplier identificationType equals: anIdType.
	self assert: importedSupplier identificationNumber equals: anIdNumber] value! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:23:29'!
assertThereIsARegisteredSupplierNamed: aName withIdType: anIdType andNumber: anIdNumber

	|importedSupplier|importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: aName.
	self assert: importedSupplier identificationType equals: anIdType.
	self assert: importedSupplier identificationNumber equals: anIdNumber! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:23:29' prior: 50652487!
testImportOnlyOneSupplier

	| aName anIdType anIdNumber |
	
	self import: self dataWithSingleSupplier.
	
	aName := 'Supplier1'.
	anIdNumber := '123'.
	anIdType := 'D'.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	[self assertThereIsARegisteredSupplierNamed: aName withIdType: anIdType andNumber: anIdNumber] value! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:23:34' prior: 50652522!
testImportOnlyOneSupplier

	| aName anIdType anIdNumber |
	
	self import: self dataWithSingleSupplier.
	
	aName := 'Supplier1'.
	anIdNumber := '123'.
	anIdType := 'D'.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	self assertThereIsARegisteredSupplierNamed: aName withIdType: anIdType andNumber: anIdNumber! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:23:35'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:23:35'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:23:35'!
PASSED!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:23:43' prior: 50652535!
testImportOnlyOneSupplier

	| anIdType anIdNumber |
	
	self import: self dataWithSingleSupplier.
	
	anIdNumber := '123'.
	anIdType := 'D'.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: anIdType andNumber: anIdNumber! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:23:47' prior: 50652557!
testImportOnlyOneSupplier

	| anIdType |
	
	self import: self dataWithSingleSupplier.
	
	anIdType := 'D'.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: anIdType andNumber: '123'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:23:51' prior: 50652569!
testImportOnlyOneSupplier

	self import: self dataWithSingleSupplier.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:23:55'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:23:55'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:23:55'!
PASSED!

----SNAPSHOT----(27 November 2023 00:23:59) CuisUniversity-5981.image priorSource: 10263175!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:25:12'!
testImportMoreThanOneSupplier

	self import: self dataWithMoreThanOneSupplier.
	
	self assertNumberOfRegisteredSuppliersIs: 2.
	self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assertThereIsARegisteredSupplierNamed: 'Supplier2' withIdType: 'D' andNumber: '456'! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:25:42'!
dataWithMoreThanOneSupplier 

	^ ReadStream on: self dataWithSingleSupplier content , '
	', 'S,Supplier1,D,123'! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:25:49' prior: 50652615!
dataWithMoreThanOneSupplier 

	^ ReadStream on: self dataWithSingleSupplier contents , '
	', 'S,Supplier1,D,123'! !

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:26:02'!
FAILURE!
!SupplierImporter methodsFor: 'initialization' stamp: 'IB 11/27/2023 00:26:38' prior: 50651885 overrides: 16902254!
value

	[line := readStream nextLine] whileTrue:[
	self createRecord.
	self importRecord]! !
!SupplierImporter methodsFor: 'initialization' stamp: 'IB 11/27/2023 00:26:40' prior: 50652633 overrides: 16902254!
value

	[line := readStream nextLine] whileTrue:[
		self createRecord.
		self importRecord]! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:26:43'!
FAILURE!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:26:43'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:26:43'!
ERROR!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:26:45'!
FAILURE!
!SupplierImporter methodsFor: 'initialization' stamp: 'IB 11/27/2023 00:27:19'!
hasLineToImport

	line := readStream nextLine.
	^line notNil! !
!SupplierImporter methodsFor: 'initialization' stamp: 'IB 11/27/2023 00:27:26' prior: 50652640 overrides: 16902254!
value

	[self hasLineToImport] whileTrue:[
		self createRecord.
		self importRecord]! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:27:30'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:27:30'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:27:30'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:27:30'!
ERROR!

self isSupplierRecord!

record!
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:28:50' prior: 50652622!
dataWithMoreThanOneSupplier 

	^ ReadStream on: self dataWithSingleSupplier contents , 'S,Supplier1,D,123'! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:28:53'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:28:53'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:28:53'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:28:53'!
FAILURE!

supplierSystem!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:29:35' prior: 50651898!
importRecord

	self assertRecordNotEmpty.
	self halt.
	self isSupplierRecord ifTrue: [ ^self importSupplier ].

	self error: self class invalidRecordTypeErrorDescription! !

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:29:43'!
FAILURE!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:30:05' prior: 50652704!
importRecord

	self assertRecordNotEmpty.
	
	self isSupplierRecord ifTrue: [ ^self importSupplier ].

	self error: self class invalidRecordTypeErrorDescription! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:30:20' prior: 50652684!
dataWithMoreThanOneSupplier 

	^ ReadStream on: self dataWithSingleSupplier contents , '
	S,Supplier1,D,123'! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:30:22'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:30:22'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:30:22'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:30:22'!
ERROR!

record!
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:31:20' prior: 50652725!
dataWithMoreThanOneSupplier 

	^ ReadStream on: self dataWithSingleSupplier contents , '
S,Supplier1,D,123'! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:31:24'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:31:24'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:31:24'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:31:24'!
FAILURE!
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:31:45' prior: 50652745!
dataWithMoreThanOneSupplier 

	^ ReadStream on: self dataWithSingleSupplier contents , '
S,Supplier2,D,234'! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:31:47'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:31:47'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:31:47'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:31:47'!
FAILURE!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:32:08'!
FAILURE!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:32:08'!
FAILURE!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 00:32:15' prior: 50652506!
assertThereIsARegisteredSupplierNamed: aName withIdType: anIdType andNumber: anIdNumber

	|importedSupplier|
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: aName.
	self assert: importedSupplier identificationType equals: anIdType.
	self assert: importedSupplier identificationNumber equals: anIdNumber! !
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 00:32:17' prior: 50652791!
assertThereIsARegisteredSupplierNamed: aName withIdType: anIdType andNumber: anIdNumber

	| importedSupplier |
	importedSupplier := supplierSystem supplierWithIdentificationType: 'D' andNumber: '123'.
	self assert: importedSupplier firstName equals: aName.
	self assert: importedSupplier identificationType equals: anIdType.
	self assert: importedSupplier identificationNumber equals: anIdNumber! !

supplierSystem!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 00:32:54' prior: 50652807!
assertThereIsARegisteredSupplierNamed: aName withIdType: anIdType andNumber: anIdNumber

	| importedSupplier |
	importedSupplier := supplierSystem supplierWithIdentificationType: anIdType andNumber: anIdNumber.
	self assert: importedSupplier firstName equals: aName.
	self assert: importedSupplier identificationType equals: anIdType.
	self assert: importedSupplier identificationNumber equals: anIdNumber! !

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:32:55'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:32:58'!
ERROR!

anIdType!

anIdNumber!

suppliers!

anIdType!

anIdNumber!

suppliers!
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:34:11' prior: 50652765!
dataWithMoreThanOneSupplier 

	^ ReadStream on: self dataWithSingleSupplier contents , '
S,Supplier2,D,456'! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:34:24'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:34:24'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:34:24'!
PASSED!

----SNAPSHOT----(27 November 2023 00:34:27) CuisUniversity-5981.image priorSource: 10270331!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:35:20'!
testDoesNotImportRecordsStartingWithSButMoreCharacters

	self
		shouldFailImporting: self invalidSupplierRecordStartData
		messageText: SupplierImporter invalidRecordTypeErrorDescription
		asserting: [ self assertNoSupplierWasImported ]

	! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:35:57'!
invalidSupplierRecordStartData

	^ ReadStream on: 'SS,Supplier1,D,123'! !

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:36:02'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:36:02'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:36:02'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:36:02'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:36:02'!
PASSED!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:36:05' prior: 50652867!
testDoesNotImportRecordsStartingWithSButMoreCharacters

	self
		shouldFailImporting: self invalidSupplierRecordStartData
		messageText: SupplierImporter invalidRecordTypeErrorDescription
		asserting: [ self assertNoSupplierWasImported ]! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:37:38'!
testCanNotImportAddressWithoutSupplier

	self
		should: [ SupplierImporter valueFrom: self addressWithoutSupplierData into: supplierSystem. ]
		raise: Error - MessageNotUnderstood
		withMessageText: CustomerImporter canNotImportAddressWithoutCustomerErrorDescription

	! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:37:50' prior: 50652911!
testCanNotImportAddressWithoutSupplier

	self
		should: [ SupplierImporter valueFrom: self addressWithoutSupplierData into: supplierSystem. ]
		raise: Error - MessageNotUnderstood
		withMessageText: SupplierImporter canNotImportAddressWithoutSupplierErrorDescription

	! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:38:06' prior: 50652923!
testCanNotImportAddressWithoutSupplier

	self
		should: [ self import: self addressWithoutSupplierData ]
		raise: Error - MessageNotUnderstood
		withMessageText: SupplierImporter canNotImportAddressWithoutSupplierErrorDescription

	! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:38:08'!
ERROR!
!SupplierImporter class methodsFor: 'error' stamp: 'IB 11/27/2023 00:38:15'!
canNotImportAddressWithoutSupplierErrorDescription
	self shouldBeImplemented.! !
!SupplierImporter class methodsFor: 'error' stamp: 'IB 11/27/2023 00:38:39' prior: 50652949!
canNotImportAddressWithoutSupplierErrorDescription
	
	^'Cannot import address without supplier'! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:38:40'!
ERROR!
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:38:50'!
addressWithoutSupplierData
	self shouldBeImplemented.! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:39:12' prior: 50652965!
addressWithoutSupplierData

	^ReadStream on: 'A,San Martin,3322,Olivos,1636,BsAs'! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:39:13'!
FAILURE!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:39:38' prior: 50652716!
importRecord

	self assertRecordNotEmpty.
	
	self isSupplierRecord ifTrue: [ ^self importSupplier ].
	self isAddressRecord ifTrue: [ ^self importAddress ].

	self error: self class invalidRecordTypeErrorDescription! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:39:43'!
ERROR!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:39:44'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:39:44'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:39:44'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:39:44'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:39:46'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:39:46'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:39:46'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:39:46'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:39:46'!
ERROR!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:39:48'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:39:48'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:39:48'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:39:48'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:39:48'!
ERROR!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:39:49'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:39:54'!
isAddressRecord
	self shouldBeImplemented.! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:40:00' prior: 50653044!
isAddressRecord

	^ record first = 'A'! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:40:01'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:40:15'!
importAddress
	self shouldBeImplemented.! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:40:48' prior: 50653057!
importAddress

	self assertSupplierWasImported! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:40:51'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:41:09'!
assertSupplierWasImported
	self shouldBeImplemented.! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:41:26' prior: 50653070!
assertSupplierWasImported

	^ newSupplier ifNil: [ self error: self class canNotImportAddressWithoutSupplierErrorDescription ]! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:41:27'!
PASSED!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 00:41:30'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 00:41:30'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 00:41:30'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 00:41:30'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 00:41:30'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 00:41:30'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 00:41:30'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 00:41:30'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 00:41:30'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:41:37'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:41:37'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:41:37'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:41:37'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:41:37'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:41:40'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:41:40'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:41:40'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:41:40'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:41:40'!
PASSED!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 00:42:50' prior: 50652823!
assertThereIsARegisteredSupplierNamed: aName withIdType: anIdType andNumber: anIdNumber

	| importedSupplier |
	importedSupplier := supplierSystem supplierWithIdentificationType: anIdType andNumber: anIdNumber.
	self assert: importedSupplier firstName equals: aName.
	self assert: importedSupplier identificationType equals: anIdType.
	self assert: importedSupplier identificationNumber equals: anIdNumber.
	^importedSupplier! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:43:50'!
testImportOneAddress

	|importedSupplier|
	
	self import: self dataWithOneAddress.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier addresses equals: 1.
	self halt
	! !

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:43:51'!
ERROR!
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:43:58'!
dataWithOneAddress
	self shouldBeImplemented.! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:45:00' prior: 50653186!
dataWithOneAddress
	ReadStream on: self dataWithSingleSupplier contents , '
S,Supplier2,D,456','
A,San Martin,3322,Olivos,1636,BsAs'! !

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:45:01'!
ERROR!
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:45:11' prior: 50653191!
dataWithOneAddress
	
	^ReadStream on: self dataWithSingleSupplier contents , '
S,Supplier2,D,456','
A,San Martin,3322,Olivos,1636,BsAs'! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:45:12'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:45:12'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:45:12'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:45:12'!
PASSED!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:45:12'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:45:12'!
PASSED!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:45:12'!
FAILURE!
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:45:25' prior: 50653202!
dataWithOneAddress
	
	^ReadStream on: self dataWithSingleSupplier contents , '
A,San Martin,3322,Olivos,1636,BsAs'! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:45:27'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:45:27'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:45:27'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:45:27'!
PASSED!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:45:27'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:45:27'!
PASSED!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:45:27'!
ERROR!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:45:36'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:45:36'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:45:36'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:45:36'!
PASSED!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:45:36'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:45:36'!
PASSED!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:45:36'!
ERROR!
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:45:39'!
addresses
	self shouldBeImplemented.! !

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'IB 11/27/2023 00:45:42'!
Object subclass: #Supplier
	instanceVariableNames: 'firstName identificationType identificationNumber addresses'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:45:41' prior: 50653285!
addresses

	^ addresses! !

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:45:43'!
FAILURE!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:46:55' prior: 50653062!
importAddress

	|address|
	self assertSupplierWasImported.
	address := Address new.
	newSupplier addAddress: address.
	address streetName: record second.
	address streetNumber: record third asNumber .
	address town: record fourth.
	address zipCode: record fifth asNumber .
	address province: record sixth! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:47:11' prior: 50653305!
importAddress

	|address|
	
	self assertSupplierWasImported.
	
	address := Address new.
	newSupplier addAddress: address.
	address streetName: record second.
	address streetNumber: record third asNumber .
	address town: record fourth.
	address zipCode: record fifth asNumber.
	address province: record sixth! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:47:20'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:47:20'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:47:20'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:47:20'!
PASSED!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:47:20'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:47:20'!
PASSED!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:47:20'!
ERROR!
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:47:25'!
addAddress: address 
	self shouldBeImplemented.! !
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:47:29' prior: 50653353!
addAddress: anAddress

	addresses add: anAddress ! !

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:47:32'!
ERROR!
!Supplier methodsFor: 'initialization' stamp: 'IB 11/27/2023 00:47:47' overrides: 16920235!
initialize

	super initialize.
	addresses := OrderedCollection new.! !
!Supplier methodsFor: 'initialization' stamp: 'IB 11/27/2023 00:47:48' prior: 50653366 overrides: 16920235!
initialize

	super initialize.
	addresses := OrderedCollection new! !
!Supplier methodsFor: 'initialization' stamp: 'IB 11/27/2023 00:47:50' prior: 50653372 overrides: 16920235!
initialize

	super initialize.
	addresses := OrderedCollection new.! !
!Supplier methodsFor: 'initialization' stamp: 'IB 11/27/2023 00:48:05' prior: 50652144!
initializeNamed: aName withIdentificationType: anIdentificationType andNumber: anIdentificationNumber

	addresses := OrderedCollection new.
	firstName := aName.
	identificationType := anIdentificationType.
	identificationNumber := anIdentificationNumber! !

!methodRemoval: Supplier #initialize stamp: 'IB 11/27/2023 00:48:10'!
initialize

	super initialize.
	addresses := OrderedCollection new.!

----SNAPSHOT----(27 November 2023 00:48:14) CuisUniversity-5981.image priorSource: 10278811!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:48:16'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:48:16'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:48:16'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:48:16'!
PASSED!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:48:16'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:48:16'!
PASSED!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:48:16'!
FAILURE!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:48:32' prior: 50653170!
testImportOneAddress

	|importedSupplier|
	
	self import: self dataWithOneAddress.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier addresses size equals: 1.
	self halt
	! !

importedSupplier addresses first!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:48:46'!
FAILURE!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:48:55'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:48:55'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:48:55'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:48:55'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:48:55'!
PASSED!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 00:49:33'!
assertAddressOf: importedSupplier at: aStreetName hasNumber: aNumber town: aTown zipCode: aZipCode province: aProvince

	| importedAddress |

	importedAddress := importedSupplier addressAt: aStreetName ifNone: [ self fail ].
	self assert: aStreetName equals: importedAddress streetName.
	self assert: aNumber equals: importedAddress streetNumber.
	self assert: aTown equals: importedAddress town.
	self assert: aZipCode equals: importedAddress zipCode.
	self assert: aProvince equals: importedAddress province.

	! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:50:40' prior: 50653424!
testImportOneAddress

	|importedSupplier|
	
	self import: self dataWithOneAddress.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier addresses size equals: 1.
	self assertAddressOf: importedSupplier at: 'San Martin' hasNumber: 3322 town: 'Olivos' zipCode: 1636 province: 'BsAs'! !

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:50:42'!
ERROR!
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:50:56'!
addressAt: aStreetName ifNone: aRenameMe1 
	self shouldBeImplemented.! !
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:51:03' prior: 50653496!
addressAt: aStreetName ifNone: aNoneBlock

	^addresses detect: [ :address | address isAt: aStreetName ] ifNone: aNoneBlock ! !

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:51:04'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:51:04'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:51:04'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:51:04'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:51:04'!
PASSED!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:51:04'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:51:04'!
PASSED!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:51:06'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:51:06'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:51:06'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:51:06'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:51:06'!
PASSED!

!testRun: #SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:51:06'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:51:06'!
PASSED!

----SNAPSHOT----(27 November 2023 00:51:09) CuisUniversity-5981.image priorSource: 10295916!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:52:28'!
testImportAddress

	|importedSupplier|
	
	self import: self dataWithOneAddress.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier addresses size equals: 1.
	self assertAddressOf: importedSupplier at: 'San Martin' hasNumber: 3322 town: 'Olivos' zipCode: 1636 province: 'BsAs'! !

!methodRemoval: SupplierImportTest #testImportOneAddress stamp: 'IB 11/27/2023 00:52:28'!
testImportOneAddress

	|importedSupplier|
	
	self import: self dataWithOneAddress.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier addresses size equals: 1.
	self assertAddressOf: importedSupplier at: 'San Martin' hasNumber: 3322 town: 'Olivos' zipCode: 1636 province: 'BsAs'!

----SNAPSHOT----(27 November 2023 00:52:32) CuisUniversity-5981.image priorSource: 10300880!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:53:39'!
testDoesNotImportRecordsStartingWithNButMoreCharacters

	self
		shouldFailImporting: self invalidAddressRecordStartData
		messageText: SupplierImporter invalidRecordTypeErrorDescription
		asserting: [ self assertImportedOneSupplierWithoutAddresses ]! !

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNButMoreCharacters stamp: 'IB 11/27/2023 00:53:42'!
ERROR!
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:53:49'!
invalidAddressRecordStartData
	self shouldBeImplemented.! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:54:14' prior: 50653606!
invalidAddressRecordStartData

	^ReadStream on: self dataWithSingleSupplier,'
AA,San Martin,3322,Olivos,1636,BsAs'! !

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNButMoreCharacters stamp: 'IB 11/27/2023 00:54:15'!
ERROR!
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:54:22' prior: 50653611!
invalidAddressRecordStartData

	^ReadStream on: self dataWithSingleSupplier contents,'
AA,San Martin,3322,Olivos,1636,BsAs'! !

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNButMoreCharacters stamp: 'IB 11/27/2023 00:54:23'!
ERROR!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 00:54:39'!
assertImportedOneSupplierWithoutAddresses
	self shouldBeImplemented.! !
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 00:54:59' prior: 50653633!
assertImportedOneSupplierWithoutAddresses
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'! !
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 00:55:31' prior: 50653639!
assertImportedOneSupplierWithoutAddresses
	
	|importedSupplier|
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier addresses isEmpty! !

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNButMoreCharacters stamp: 'IB 11/27/2023 00:55:34'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:55:34'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:55:34'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNButMoreCharacters stamp: 'IB 11/27/2023 00:55:34'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:55:34'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 00:55:34'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:55:34'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:55:34'!
PASSED!

----SNAPSHOT----(27 November 2023 00:55:37) CuisUniversity-5981.image priorSource: 10301983!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 00:55:54' prior: 50653648!
assertImportedOneSupplierWithoutAddresses
	
	|importedSupplier|
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier addresses isEmpty! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:56:06' prior: 50652580!
testImportOnlyOneSupplier

	self import: self dataWithSingleSupplier.
	
	self assertImportedOneSupplierWithoutAddresses! !

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:56:08'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:56:08'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:56:08'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNButMoreCharacters stamp: 'IB 11/27/2023 00:56:08'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:56:08'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 00:56:08'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:56:08'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:56:08'!
PASSED!

----SNAPSHOT----(27 November 2023 00:56:11) CuisUniversity-5981.image priorSource: 10305160!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:56:49'!
testDoesNotImportRecordsStartingWithAButMoreCharacters

	self
		shouldFailImporting: self invalidAddressRecordStartData
		messageText: SupplierImporter invalidRecordTypeErrorDescription
		asserting: [ self assertImportedOneSupplierWithoutAddresses ]! !

!methodRemoval: SupplierImportTest #testDoesNotImportRecordsStartingWithNButMoreCharacters stamp: 'IB 11/27/2023 00:56:49'!
testDoesNotImportRecordsStartingWithNButMoreCharacters

	self
		shouldFailImporting: self invalidAddressRecordStartData
		messageText: SupplierImporter invalidRecordTypeErrorDescription
		asserting: [ self assertImportedOneSupplierWithoutAddresses ]!

----SNAPSHOT----(27 November 2023 00:56:55) CuisUniversity-5981.image priorSource: 10306741!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 00:57:35'!
testCanNotImportNewCustomerWithoutSupplier

	self
		should: [ self import: self newCustomerWithoutSupplierData ]
		raise: Error - MessageNotUnderstood
		withMessageText: SupplierImporter canNotImportCustomerWithoutSupplierErrorDescription

	! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 00:58:14'!
newCustomerWithoutSupplierData

	^ ReadStream on: 'NC,Pepe,Sanchez,D,22333444'! !

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 00:58:22'!
ERROR!
!SupplierImporter class methodsFor: 'error' stamp: 'IB 11/27/2023 00:58:27'!
canNotImportCustomerWithoutSupplierErrorDescription
	self shouldBeImplemented.! !
!SupplierImporter class methodsFor: 'error' stamp: 'IB 11/27/2023 00:58:49' prior: 50653784!
canNotImportCustomerWithoutSupplierErrorDescription
	
	^'No se puede importar un nuevo customer sin dar de alta un supplier primero'! !

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 00:58:53'!
FAILURE!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:59:30' prior: 50652980!
importRecord

	self assertRecordNotEmpty.
	
	self isSupplierRecord ifTrue: [ ^self importSupplier ].
	self isAddressRecord ifTrue: [ ^self importAddress ].
	self isNewCustomerRecord ifTrue: [ ^self importNewCustomer ].

	self error: self class invalidRecordTypeErrorDescription! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 00:59:37'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 00:59:37'!
ERROR!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 00:59:37'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 00:59:37'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 00:59:37'!
ERROR!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 00:59:37'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 00:59:37'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 00:59:38'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 00:59:39'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 00:59:43'!
isNewCustomerRecord
	self shouldBeImplemented.! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:00:09' prior: 50653843!
isNewCustomerRecord

	^ record first = 'NC'! !

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:00:11'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:00:19'!
importNewCustomer
	self shouldBeImplemented.! !

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:01:21'!
Object subclass: #SupplierImporter
	instanceVariableNames: 'readStream supplierSystem record line newSupplier customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:01:19' prior: 50653856!
importNewCustomer

	| newCustomer |
	
	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth.
	customerSystem add: newCustomer.
	newSupplier addCustomer: newCustomer! !
!SupplierImporter class methodsFor: 'instance creation' stamp: 'IB 11/27/2023 01:02:25'!
from: aReadStream into: aSupplierSystem workingWith: aCustomerSystem

	^self new initializeFrom: aReadStream into: aSupplierSystem  workingWith: aCustomerSystem! !

!methodRemoval: SupplierImporter class #from:into: stamp: 'IB 11/27/2023 01:02:32'!
from: aReadStream into: aSupplierSystem

	^self new initializeFrom: aReadStream into: aSupplierSystem!
!SupplierImporter class methodsFor: 'instance creation' stamp: 'IB 11/27/2023 01:02:37' prior: 50653883!
from: aReadStream into: aSupplierSystem workingWith: aCustomerSystem

	^self new initializeFrom: aReadStream into: aSupplierSystem workingWith: aCustomerSystem! !
!SupplierImporter methodsFor: 'initialization' stamp: 'IB 11/27/2023 01:02:57'!
initializeFrom: aReadStream into: aSupplierSystem workingWith: aCustomerSystem

	readStream := aReadStream.
	supplierSystem := aSupplierSystem.
	customerSystem := aCustomerSystem! !

!methodRemoval: SupplierImporter #initializeFrom:into: stamp: 'IB 11/27/2023 01:03:03'!
initializeFrom: aReadStream into: aSupplierSystem

	readStream := aReadStream.
	supplierSystem := aSupplierSystem!
!SupplierImporter class methodsFor: 'importing' stamp: 'IB 11/27/2023 01:03:19'!
valueFrom: aReadStream into: aSupplierSystem workingWith: aCustomerSystem

	^(self from: aReadStream into: aSupplierSystem workingWith: aCustomerSystem) value! !

!methodRemoval: SupplierImporter class #valueFrom:into: stamp: 'IB 11/27/2023 01:03:25'!
valueFrom: aReadStream into: aSupplierSystem

	^(self from: aReadStream into: aSupplierSystem) value!

!classDefinition: #SupplierImportTest category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:03:42'!
TestCase subclass: #SupplierImportTest
	instanceVariableNames: 'supplierSystem customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!SupplierImportTest methodsFor: 'support' stamp: 'IB 11/27/2023 01:03:41' prior: 50652224!
import: aStream

	^ SupplierImporter valueFrom: aStream into: supplierSystem workingWith: customerSystem! !
!SupplierImportTest methodsFor: 'running' stamp: 'IB 11/27/2023 01:04:17' prior: 50651709 overrides: 16961394!
setUp

	supplierSystem := Environment current createSupplierSystem.
	supplierSystem start.
	supplierSystem beginTransaction.
	customerSystem := Environment current createCustomerSystem.
	supplierSystem start.
	supplierSystem beginTransaction.! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:04:22'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:04:22'!
ERROR!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:04:22'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:04:22'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:04:22'!
ERROR!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:04:22'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:04:22'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:04:22'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:04:23'!
ERROR!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 01:04:45'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 01:04:45'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 01:04:45'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:04:45'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 01:04:45'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 01:04:45'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 01:04:45'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 01:04:45'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 01:04:45'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:04:49'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:04:49'!
ERROR!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:04:49'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:04:49'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:04:49'!
ERROR!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:04:49'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:04:49'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:04:49'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:04:50'!
ERROR!
!SupplierImportTest methodsFor: 'running' stamp: 'IB 11/27/2023 01:05:37' prior: 50653951 overrides: 16961394!
setUp

	supplierSystem := Environment current createSupplierSystem.
	supplierSystem start.
	supplierSystem beginTransaction.
	customerSystem := Environment current createCustomerSystem.
	customerSystem start.
	customerSystem beginTransaction.! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:05:38'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:05:38'!
ERROR!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:05:38'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:05:38'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:05:38'!
ERROR!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:05:38'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:05:38'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:05:38'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:05:40'!
ERROR!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:06:08'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:06:08'!
ERROR!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:06:08'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:06:08'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:06:08'!
ERROR!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:06:08'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:06:08'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:06:08'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:06:09'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:06:17' prior: 50653870!
importNewCustomer

	| newCustomer |
	
	self assertSupplierWasImported.
	
	newCustomer := Customer new.
	newCustomer firstName: record second.
	newCustomer lastName: record third.
	newCustomer identificationType: record fourth.
	newCustomer identificationNumber: record fifth.
	customerSystem add: newCustomer.
	newSupplier addCustomer: newCustomer! !

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:06:18'!
FAILURE!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:06:23'!
FAILURE!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:06:51' prior: 50653075!
assertSupplierWasImported

	^ newSupplier ifNil: [ self error: self class canNotImportWithoutSupplierErrorDescription ]! !
!SupplierImporter class methodsFor: 'error' stamp: 'IB 11/27/2023 01:07:04'!
canNotImportWithoutSupplierErrorDescription
	
	^'Cannot import without supplier'! !

!methodRemoval: SupplierImporter class #canNotImportAddressWithoutSupplierErrorDescription stamp: 'IB 11/27/2023 01:07:52'!
canNotImportAddressWithoutSupplierErrorDescription
	
	^'Cannot import address without supplier'!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:08:00'!
ERROR!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:08:00'!
FAILURE!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:08:00'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:08:00'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:08:00'!
ERROR!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:08:00'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:08:00'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:08:00'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:08:01'!
ERROR!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 01:08:09' prior: 50652935!
testCanNotImportAddressWithoutSupplier

	self
		should: [ self import: self addressWithoutSupplierData ]
		raise: Error - MessageNotUnderstood
		withMessageText: SupplierImporter canNotImportWithoutSupplierErrorDescription

	! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:08:11'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:08:12'!
FAILURE!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 01:08:44' prior: 50653764!
testCanNotImportNewCustomerWithoutSupplier

	self
		should: [ self import: self newCustomerWithoutSupplierData ]
		raise: Error - MessageNotUnderstood
		withMessageText: SupplierImporter canNotImportWithoutSupplierErrorDescription

	! !

!methodRemoval: SupplierImporter class #canNotImportCustomerWithoutSupplierErrorDescription stamp: 'IB 11/27/2023 01:08:51'!
canNotImportCustomerWithoutSupplierErrorDescription
	
	^'No se puede importar un nuevo customer sin dar de alta un supplier primero'!

----SNAPSHOT----(27 November 2023 01:08:53) CuisUniversity-5981.image priorSource: 10307540!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:08:56'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:08:56'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:08:56'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:08:56'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:08:56'!
ERROR!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:08:56'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:08:56'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:08:56'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:08:57'!
ERROR!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:09:13'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:09:13'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:09:13'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:09:13'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:09:13'!
ERROR!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:09:13'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:09:13'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:09:13'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:09:14'!
ERROR!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 01:09:27' prior: 50651564!
shouldFailImporting: aReadStream messageText: anErrorMessageText asserting: anAssertionBlock

	self
		should: [ SupplierImporter valueFrom: aReadStream into: supplierSystem workingWith: customerSystem ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anErrorMessageText equals: anError messageText.
			anAssertionBlock value ]! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:09:28'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:09:29'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:09:29'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:09:32'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:09:32'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:09:32'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:09:32'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:09:32'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:09:32'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:09:32'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:09:32'!
PASSED!

----SNAPSHOT----(27 November 2023 01:09:35) CuisUniversity-5981.image priorSource: 10322864!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 01:10:15'!
testDoesNotImportRecordsStartingWithNCButMoreCharacters

	self
		shouldFailImporting: self invalidNewCustomerRecordStartData
		messageText: SupplierImporter invalidRecordTypeErrorDescription
		asserting: [ self assertImportedOneSupplierWithoutCustomer ]! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 01:10:51'!
invalidNewCustomerRecordStartData

	^ ReadStream on: self dataWithSingleSupplier contents, '
NC,Pepe,Sanchez,D,22333444'! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:10:52'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:10:52'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:10:52'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:10:52'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:10:52'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:10:52'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:10:52'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:10:52'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:10:52'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:10:52'!
ERROR!
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 01:11:12' prior: 50654372!
invalidNewCustomerRecordStartData

	^ ReadStream on: self dataWithSingleSupplier contents, '
NCA,Pepe,Sanchez,D,22333444'! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:11:21'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:11:21'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:11:21'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:11:21'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:11:21'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:11:21'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:11:21'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:11:21'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:11:21'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:11:21'!
ERROR!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 01:11:29'!
assertImportedOneSupplierWithoutCustomer
	self shouldBeImplemented.! !
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 01:12:07' prior: 50654457!
assertImportedOneSupplierWithoutCustomer
	
	|importedSupplier|
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier customers isEmpty! !

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:12:09'!
ERROR!
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:12:16'!
customers
	self shouldBeImplemented.! !

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:12:25'!
Object subclass: #Supplier
	instanceVariableNames: 'firstName identificationType identificationNumber addresses customers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:12:23' prior: 50654478!
customers
	
	^customers! !
!Supplier methodsFor: 'initialization' stamp: 'IB 11/27/2023 01:12:43' prior: 50653383!
initializeNamed: aName withIdentificationType: anIdentificationType andNumber: anIdentificationNumber

	addresses := OrderedCollection new.
	customers := OrderedCollection new.
	firstName := aName.
	identificationType := anIdentificationType.
	identificationNumber := anIdentificationNumber! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:12:48'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:12:48'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:12:48'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:12:48'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:12:48'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:12:48'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:12:48'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:12:48'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:12:48'!
PASSED!

----SNAPSHOT----(27 November 2023 01:12:50) CuisUniversity-5981.image priorSource: 10326622!

Object subclass: #Customer
	instanceVariableNames: 'firstName lastName identificationType identificationNumber addresses'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Customer category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:13:47'!
Object subclass: #Customer
	instanceVariableNames: 'firstName lastName identificationType identificationNumber addresses'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 01:13:49'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 01:13:49'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 01:13:49'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:13:49'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 01:13:49'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 01:13:49'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 01:13:49'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 01:13:49'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 01:13:49'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:13:51'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:13:51'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:13:51'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:13:52'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:13:52'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:13:52'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:13:52'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:13:52'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:13:52'!
PASSED!

----SNAPSHOT----(27 November 2023 01:13:54) CuisUniversity-5981.image priorSource: 10332402!

Object subclass: #Party
	instanceVariableNames: 'firstName identificationType identificationNumber addresses customers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Party category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:14:02'!
Object subclass: #Party
	instanceVariableNames: 'firstName identificationType identificationNumber addresses customers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

Object subclass: #Party
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Party category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:14:06'!
Object subclass: #Party
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

Party subclass: #Supplier
	instanceVariableNames: 'firstName identificationType identificationNumber addresses customers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:14:17'!
Party subclass: #Supplier
	instanceVariableNames: 'firstName identificationType identificationNumber addresses customers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

Party subclass: #Customer
	instanceVariableNames: 'firstName lastName identificationType identificationNumber addresses'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Customer category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:14:31'!
Party subclass: #Customer
	instanceVariableNames: 'firstName lastName identificationType identificationNumber addresses'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:15:08'!
Party subclass: #Supplier
	instanceVariableNames: 'identificationType identificationNumber addresses customers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Customer category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:15:08'!
Party subclass: #Customer
	instanceVariableNames: 'lastName identificationType identificationNumber addresses'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Party category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:15:08'!
Object subclass: #Party
	instanceVariableNames: 'firstName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!Party methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:15:08'!
firstName

	^firstName! !

!methodRemoval: Supplier #firstName stamp: 'IB 11/27/2023 01:15:08'!
firstName

	^firstName!

!methodRemoval: Customer #firstName stamp: 'IB 11/27/2023 01:15:08'!
firstName

	^firstName !

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 01:15:12'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 01:15:12'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 01:15:13'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:15:13'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 01:15:13'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 01:15:13'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 01:15:13'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 01:15:13'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 01:15:13'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:15:15'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:15:15'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:15:15'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:15:15'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:15:15'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:15:15'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:15:15'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:15:15'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:15:15'!
PASSED!

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:15:28'!
Party subclass: #Supplier
	instanceVariableNames: 'identificationType identificationNumber customers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Customer category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:15:28'!
Party subclass: #Customer
	instanceVariableNames: 'lastName identificationType identificationNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Party category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:15:28'!
Object subclass: #Party
	instanceVariableNames: 'firstName addresses'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!Party methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:15:28'!
addAddress: anAddress

	addresses add: anAddress ! !

!methodRemoval: Supplier #addAddress: stamp: 'IB 11/27/2023 01:15:28'!
addAddress: anAddress

	addresses add: anAddress !
!Party methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:15:35'!
addressAt: aStreetName ifNone: aNoneBlock

	^addresses detect: [ :address | address isAt: aStreetName ] ifNone: aNoneBlock ! !

!methodRemoval: Supplier #addressAt:ifNone: stamp: 'IB 11/27/2023 01:15:35'!
addressAt: aStreetName ifNone: aNoneBlock

	^addresses detect: [ :address | address isAt: aStreetName ] ifNone: aNoneBlock !

!methodRemoval: Customer #addressAt:ifNone: stamp: 'IB 11/27/2023 01:15:35'!
addressAt: aStreetName ifNone: aNoneBlock

	^addresses detect: [ :address | address isAt: aStreetName ] ifNone: aNoneBlock !
!Party methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:15:42'!
addresses

	^ addresses! !

!methodRemoval: Supplier #addresses stamp: 'IB 11/27/2023 01:15:42'!
addresses

	^ addresses!

!methodRemoval: Customer #addresses stamp: 'IB 11/27/2023 01:15:42'!
addresses

	^ addresses!

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:15:51'!
Party subclass: #Supplier
	instanceVariableNames: 'identificationType customers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Customer category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:15:51'!
Party subclass: #Customer
	instanceVariableNames: 'lastName identificationType'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Party category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:15:51'!
Object subclass: #Party
	instanceVariableNames: 'firstName addresses identificationNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!Party methodsFor: 'identification' stamp: 'IB 11/27/2023 01:15:51'!
identificationNumber

	^identificationNumber ! !

!methodRemoval: Customer #identificationNumber stamp: 'IB 11/27/2023 01:15:51'!
identificationNumber

	^identificationNumber !

!methodRemoval: Supplier #identificationNumber stamp: 'IB 11/27/2023 01:16:10'!
identificationNumber
	
	^identificationNumber!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:16:12'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:16:12'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:16:12'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:16:12'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:16:12'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:16:12'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:16:12'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:16:12'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:16:12'!
PASSED!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 01:16:14'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 01:16:14'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 01:16:14'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:16:14'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 01:16:14'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 01:16:14'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 01:16:14'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 01:16:14'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 01:16:14'!
PASSED!

!classDefinition: #Supplier category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:16:20'!
Party subclass: #Supplier
	instanceVariableNames: 'customers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Customer category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:16:20'!
Party subclass: #Customer
	instanceVariableNames: 'lastName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Party category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:16:20'!
Object subclass: #Party
	instanceVariableNames: 'firstName addresses identificationNumber identificationType'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!Party methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:16:20'!
identificationType

	^identificationType! !

!methodRemoval: Supplier #identificationType stamp: 'IB 11/27/2023 01:16:20'!
identificationType

	^identificationType!

!methodRemoval: Customer #identificationType stamp: 'IB 11/27/2023 01:16:27'!
identificationType

	^identificationType !
!Party methodsFor: 'addresses' stamp: 'IB 11/27/2023 01:16:34'!
isAddressesEmpty

	^addresses isEmpty ! !

!methodRemoval: Customer #isAddressesEmpty stamp: 'IB 11/27/2023 01:16:34'!
isAddressesEmpty

	^addresses isEmpty !
!Party methodsFor: 'addresses' stamp: 'IB 11/27/2023 01:16:48' prior: 50654805!
addAddress: anAddress

	addresses add: anAddress ! !

!methodRemoval: Customer #addAddress: stamp: 'IB 11/27/2023 01:16:48'!
addAddress: anAddress

	addresses add: anAddress !
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 01:18:24' prior: 50651677!
importCustomer

	self assertValidCustomerRecord.

	newCustomer := 
		Customer 
			withFirstName: record second 
			andLast: record third 
			withIdentificationType: record fourth 
			andNumber: record fifth.
	customerSystem add: newCustomer! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:18:51' prior: 50654131!
importNewCustomer

	| newCustomer |
	
	self assertSupplierWasImported.
	
	newCustomer := 
		Customer 
			withFirstName: record second 
			andLast: record third 
			withIdentificationType: record fourth 
			andNumber: record fifth.
	customerSystem add: newCustomer.
	newSupplier addCustomer: newCustomer! !
!Customer class methodsFor: 'no messages' stamp: 'IB 11/27/2023 01:19:45'!
withFirstName: aFirstName
			andLast: aLastName
			withIdentificationType: aIdentificationType
			andNumber: aIdentificationNumber
			
			^self new initializeWithFirstName: aFirstName
			andLast: aLastName
			withIdentificationType: aIdentificationType
			andNumber: aIdentificationNumber! !
!Customer methodsFor: 'initialization' stamp: 'IB 11/27/2023 01:20:43'!
initializeWithFirstName: aFirstName
			andLast: aLastName
			withIdentificationType: aIdentificationType
			andNumber: aIdentificationNumber

	addresses := OrderedCollection new.
	firstName := aFirstName.
	lastName := aLastName.
	identificationNumber := aIdentificationNumber.
	identificationType := aIdentificationType! !

!methodRemoval: Customer #initialize stamp: 'IB 11/27/2023 01:20:50'!
initialize

	super initialize.
	addresses := OrderedCollection new.!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 01:20:54'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 01:20:54'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 01:20:54'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:20:54'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 01:20:54'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 01:20:54'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 01:20:54'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 01:20:54'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 01:20:54'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:20:56'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:20:56'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:20:56'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:20:56'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:20:56'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:20:56'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:20:56'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:20:56'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:20:56'!
PASSED!

!methodRemoval: Customer #firstName: stamp: 'IB 11/27/2023 01:21:02'!
firstName: aName

	firstName := aName!

!methodRemoval: Customer #identificationNumber: stamp: 'IB 11/27/2023 01:21:05'!
identificationNumber: anIdentificationNumber

	identificationNumber := anIdentificationNumber!

!methodRemoval: Customer #identificationType: stamp: 'IB 11/27/2023 01:21:07'!
identificationType: anIdentificationType

	identificationType := anIdentificationType!

!methodRemoval: Customer #lastName: stamp: 'IB 11/27/2023 01:21:16'!
lastName: aLastName

	lastName := aLastName
!
!Customer methodsFor: 'initialization' stamp: 'IB 11/27/2023 01:22:04'!
initializeWithFirstName: aFirstName withIdentificationType: aIdentificationType andNumber: aIdentificationNumber

	addresses := OrderedCollection new.
	firstName := aFirstName.
	identificationNumber := aIdentificationNumber.
	identificationType := aIdentificationType! !
!Party methodsFor: 'initialization' stamp: 'IB 11/27/2023 01:22:07'!
initializeWithFirstName: aFirstName withIdentificationType: aIdentificationType andNumber: aIdentificationNumber

	addresses := OrderedCollection new.
	firstName := aFirstName.
	identificationNumber := aIdentificationNumber.
	identificationType := aIdentificationType! !

!methodRemoval: Customer #initializeWithFirstName:withIdentificationType:andNumber: stamp: 'IB 11/27/2023 01:22:08'!
initializeWithFirstName: aFirstName withIdentificationType: aIdentificationType andNumber: aIdentificationNumber

	addresses := OrderedCollection new.
	firstName := aFirstName.
	identificationNumber := aIdentificationNumber.
	identificationType := aIdentificationType!
!Supplier methodsFor: 'initialization' stamp: 'IB 11/27/2023 01:22:36' prior: 50654495!
initializeNamed: aName withIdentificationType: anIdentificationType andNumber: anIdentificationNumber

	self initializeWithFirstName: aName withIdentificationType: anIdentificationType andNumber: anIdentificationNumber.
	customers := OrderedCollection new! !
!Customer methodsFor: 'initialization' stamp: 'IB 11/27/2023 01:22:59' prior: 50655028!
initializeWithFirstName: aFirstName
			andLast: aLastName
			withIdentificationType: aIdentificationType
			andNumber: aIdentificationNumber

	self initializeWithFirstName: aFirstName withIdentificationType: aIdentificationType andNumber: aIdentificationNumber.
	lastName := aLastName! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:23:01'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:23:01'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:23:01'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:23:01'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:23:01'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:23:01'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:23:01'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:23:01'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:23:01'!
PASSED!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 01:23:03'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 01:23:03'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 01:23:03'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:23:03'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 01:23:03'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 01:23:03'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 01:23:03'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 01:23:03'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 01:23:03'!
PASSED!

----SNAPSHOT----(27 November 2023 01:23:05) CuisUniversity-5981.image priorSource: 10335082!

----SNAPSHOT----(27 November 2023 01:24:45) CuisUniversity-5981.image priorSource: 10355247!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 01:26:41'!
testImportNewCustomer

	|importedSupplier|
	
	self import: self dataWithOneNewCustomer.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier customers size equals: 1.
	self assertCustomerOf: importedSupplier withFirstName: '' andLast: '' withIdentificationType: '' andNumber: ''! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 01:27:33'!
dataWithOneNewCustomer

	^ ReadStream on: self dataWithSingleSupplier contents, '
', self newCustomerWithoutSupplierData! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 01:27:36' prior: 50655274!
dataWithOneNewCustomer

	^ ReadStream on: self dataWithSingleSupplier contents, '
', self newCustomerWithoutSupplierData contents! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:27:36'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:27:36'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:27:36'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:27:36'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:27:36'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:27:36'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:27:36'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:27:36'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:27:36'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:27:36'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:27:36'!
ERROR!
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:27:42'!
addCustomer: newCustomer 
	self shouldBeImplemented.! !
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:27:52' prior: 50655325!
addCustomer: aCustomer

	customers add: aCustomer! !

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:27:53'!
ERROR!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 01:27:58'!
assertCustomerOf: importedSupplier withFirstName: aRenameMe1 andLast: aRenameMe2 withIdentificationType: aRenameMe3 andNumber: aRenameMe4 
	self shouldBeImplemented.! !
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 01:30:23' prior: 50655337!
assertCustomerOf: importedSupplier withFirstName: aFirstName andLast: aLastName withIdentificationType: aIdentificationType andNumber: aIdentificationNumber 
	
	| importedCustomer |

	importedCustomer := importedSupplier customerWithIdentificationType: aIdentificationType andNumber: aIdentificationNumber ifNone: [ self fail ].
	self assert: importedCustomer firstName equals: aFirstName.
	self assert: importedCustomer lastName equals: aLastName

	! !

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:30:24'!
ERROR!
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:30:29'!
customerWithIdentificationType: aIdentificationType andNumber: aIdentificationNumber ifNone: aRenameMe1 
	self shouldBeImplemented.! !
!Supplier methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:31:33' prior: 50655366!
customerWithIdentificationType: aIdentificationType andNumber: aIdentificationNumber ifNone: aBlock

 	^customers detect: [ :customer |  customer identificationType = aIdentificationType and: [customer identificationNumber = aIdentificationNumber]] ifNone: aBlock! !

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:31:35'!
FAILURE!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:31:41'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:31:41'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:31:41'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:31:41'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:31:41'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:31:41'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:31:41'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:31:41'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:31:41'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:31:41'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:31:41'!
FAILURE!

----SNAPSHOT----(27 November 2023 01:32:10) CuisUniversity-5981.image priorSource: 10355341!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:33:04'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:33:04'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:33:04'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:33:04'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:33:04'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:33:04'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:33:04'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:33:04'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:33:04'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:33:04'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:33:04'!
FAILURE!

importedSupplier!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 01:34:14' prior: 50655258!
testImportNewCustomer

	|importedSupplier|
	
	self import: self dataWithOneNewCustomer.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier customers size equals: 1.
	self assertCustomerOf: importedSupplier withFirstName: 'Pepe' andLast: 'Sanchez' withIdentificationType: 'D' andNumber: '22333444'! !

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:34:15'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:34:15'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:34:15'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:34:15'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:34:15'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:34:15'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:34:15'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:34:15'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:34:15'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:34:15'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:34:15'!
PASSED!

----SNAPSHOT----(27 November 2023 01:34:19) CuisUniversity-5981.image priorSource: 10360759!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 01:35:44'!
testImportExistingCustomer

	|importedSupplier|
	
	self import: self dataWithOneCustomer.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	customerSystem customers size equals: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier customers size equals: 1.
	self assertCustomerOf: importedSupplier withFirstName: 'Pepe' andLast: 'Sanchez' withIdentificationType: 'D' andNumber: '22333444'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 01:36:02' prior: 50655523!
testImportExistingCustomer

	|importedSupplier|
	
	self import: self dataWithOneCustomer.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	customerSystem numberOfCustomers equals: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier customers size equals: 1.
	self assertCustomerOf: importedSupplier withFirstName: 'Pepe' andLast: 'Sanchez' withIdentificationType: 'D' andNumber: '22333444'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 01:36:55'!
customer

	^Customer 
			withFirstName: 'Pepe' 
			andLast: 'Sanchez'
			withIdentificationType: 'D'
			andNumber: '123'! !
!SupplierImportTest methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:37:14' prior: 50655559!
customer

	^Customer 
			withFirstName: 'Pepe' 
			andLast: 'Sanchez'
			withIdentificationType: 'D'
			andNumber: '22333444'! !
!SupplierImportTest methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:37:19' prior: 50655566!
customer

	^Customer 
		withFirstName: 'Pepe' 
		andLast: 'Sanchez'
		withIdentificationType: 'D'			andNumber: '22333444'! !
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 01:37:53' prior: 50655541!
testImportExistingCustomer

	|importedSupplier|
	
	customerSystem add: self customer.
	
	self import: self dataWithOneCustomer.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	customerSystem numberOfCustomers equals: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier customers size equals: 1.
	self assertCustomerOf: importedSupplier withFirstName: 'Pepe' andLast: 'Sanchez' withIdentificationType: 'D' andNumber: '22333444'! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 01:38:34'!
dataWithOneExistingCustomer

	^ ReadStream on: self dataWithSingleSupplier contents, '
', self newCustomerWithoutSupplierData contents! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 01:38:55' prior: 50655599!
dataWithOneExistingCustomer

	^ ReadStream on: self dataWithSingleSupplier contents, '
NC,Pepe,Sanchez,D,22333444'! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 01:38:58' prior: 50655607!
dataWithOneExistingCustomer

	^ ReadStream on: self dataWithSingleSupplier contents, '
EC,Pepe,Sanchez,D,22333444'! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:39:02'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:39:02'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:39:02'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:39:02'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:39:02'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:39:02'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:39:02'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:39:02'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:39:02'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:39:02'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:39:02'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:39:02'!
ERROR!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 01:39:15' prior: 50655580!
testImportExistingCustomer

	|importedSupplier|
	
	customerSystem add: self customer.
	
	self import: self dataWithOneExistingCustomer.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	customerSystem numberOfCustomers equals: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier customers size equals: 1.
	self assertCustomerOf: importedSupplier withFirstName: 'Pepe' andLast: 'Sanchez' withIdentificationType: 'D' andNumber: '22333444'! !

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:39:16'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:39:37' prior: 50653801!
importRecord

	self assertRecordNotEmpty.
	
	self isSupplierRecord ifTrue: [ ^self importSupplier ].
	self isAddressRecord ifTrue: [ ^self importAddress ].
	self isNewCustomerRecord ifTrue: [ ^self importNewCustomer ].
	self isExistingCustomerRecord ifTrue: [ ^self importExistingCustomer ].

	self error: self class invalidRecordTypeErrorDescription! !

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:39:40'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:39:44'!
isExistingCustomerRecord
	self shouldBeImplemented.! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:40:15' prior: 50655702!
isExistingCustomerRecord

	^ record first = 'EC'! !

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:40:16'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:40:23'!
importExistingCustomer
	self shouldBeImplemented.! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:41:29' prior: 50655715!
importExistingCustomer
	
	| newCustomer |
	
	self assertSupplierWasImported.
	
	newCustomer := customerSystem customerWithIdentificationType: record fourth number: record fifth.
	
	newSupplier addCustomer: newCustomer! !

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:41:29'!
ERROR!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 01:41:40' prior: 50655662!
testImportExistingCustomer

	|importedSupplier|
	
	customerSystem add: self customer.
	
	self import: self dataWithOneExistingCustomer.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	self assert: customerSystem numberOfCustomers equals: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier customers size equals: 1.
	self assertCustomerOf: importedSupplier withFirstName: 'Pepe' andLast: 'Sanchez' withIdentificationType: 'D' andNumber: '22333444'! !

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:41:41'!
FAILURE!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:41:45'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:41:45'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:41:45'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:41:45'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:41:45'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:41:45'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:41:45'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:41:45'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:41:45'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:41:45'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:41:45'!
PASSED!

----SNAPSHOT----(27 November 2023 01:41:48) CuisUniversity-5981.image priorSource: 10363809!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 01:42:49'!
testDoesNotImportRecordsStartingWithECButMoreCharacters

	self
		shouldFailImporting: self invalidExistingCustomerRecordStartData
		messageText: SupplierImporter invalidRecordTypeErrorDescription
		asserting: [ self assertImportedOneSupplierWithoutCustomer ]! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 01:43:03'!
invalidExistingCustomerRecordStartData

	^ ReadStream on: self dataWithSingleSupplier contents, '
ECA,Pepe,Sanchez,D,22333444'! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:43:04'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:43:04'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:43:04'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:43:04'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 01:43:05'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:43:05'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:43:05'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:43:05'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:43:05'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:43:05'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:43:05'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:43:05'!
PASSED!

----SNAPSHOT----(27 November 2023 01:43:08) CuisUniversity-5981.image priorSource: 10372565!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:43:52'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:43:52'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:43:52'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:43:52'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 01:43:52'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:43:52'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:43:52'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:43:52'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:43:52'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:43:52'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:43:52'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:43:52'!
PASSED!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 01:43:54'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 01:43:54'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 01:43:54'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:43:54'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 01:43:54'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 01:43:54'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 01:43:54'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 01:43:54'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 01:43:54'!
PASSED!

self makeCurrent!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 01:44:54'!
ERROR!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 01:44:54'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 01:44:54'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:44:54'!
FAILURE!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 01:44:54'!
FAILURE!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 01:44:54'!
FAILURE!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 01:44:54'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 01:44:55'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 01:44:55'!
PASSED!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 01:44:56'!
ERROR!

Object subclass: #Party
	instanceVariableNames: 'id firstName addresses identificationNumber identificationType'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #Party category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:45:20'!
Object subclass: #Party
	instanceVariableNames: 'id firstName addresses identificationNumber identificationType'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 01:45:25'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 01:45:25'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 01:45:25'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:45:25'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 01:45:26'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 01:45:26'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 01:45:26'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 01:45:26'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 01:45:26'!
PASSED!

----SNAPSHOT----(27 November 2023 01:45:33) CuisUniversity-5981.image priorSource: 10374546!
!IntegrationEnvironment methodsFor: 'supplier system' stamp: 'IB 11/27/2023 01:45:49'!
createSupplierSystem
	self shouldBeImplemented.! !

!classDefinition: #PersistentSupplierSystem category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:46:13'!
Object subclass: #PersistentSupplierSystem
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!IntegrationEnvironment methodsFor: 'supplier system' stamp: 'IB 11/27/2023 01:46:10' prior: 50656024!
createSupplierSystem

	^PersistentSupplierSystem new! !
!PersistentSupplierSystem methodsFor: 'starting' stamp: 'IB 11/27/2023 01:46:22'!
start
	self shouldBeImplemented.! !

!classDefinition: #PersistentSupplierSystem category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:46:55'!
Object subclass: #PersistentSupplierSystem
	instanceVariableNames: 'session'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!PersistentSupplierSystem methodsFor: 'starting' stamp: 'IB 11/27/2023 01:46:52' prior: 50656042!
start

	session := DataBaseSession for: (Array with: Address with: Customer with: Supplier).! !
!PersistentSupplierSystem methodsFor: 'starting' stamp: 'IB 11/27/2023 01:47:01'!
beginTransaction
	self shouldBeImplemented.! !
!PersistentSupplierSystem methodsFor: 'starting' stamp: 'IB 11/27/2023 01:47:08' prior: 50656061!
beginTransaction

	session beginTransaction.
! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:47:09'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:47:18'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:47:18'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:47:18'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:47:18'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 01:47:18'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:47:18'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:47:18'!
ERROR!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:47:18'!
ERROR!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:47:18'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:47:18'!
ERROR!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:47:18'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:47:18'!
ERROR!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:47:19'!
ERROR!
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:47:27'!
numberOfSuppliers
	self shouldBeImplemented.! !
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:47:48' prior: 50656118!
numberOfSuppliers

	^(session selectAllOfType: Supplier) size! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:47:49'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:47:53'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:47:53'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:47:53'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:47:53'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 01:47:53'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:47:53'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:47:53'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:47:53'!
ERROR!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:47:53'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:47:53'!
ERROR!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:47:53'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:47:53'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:47:54'!
ERROR!
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:47:59'!
add: aNewSupplier 
	self shouldBeImplemented.! !
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:48:20' prior: 50656176!
add: aSupplier 

	^session persist: aSupplier! !

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:48:21'!
ERROR!
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:48:27'!
supplierWithIdentificationType: anIdType andNumber: anIdNumber 
	self shouldBeImplemented.! !
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:48:58' prior: 50656190!
supplierWithIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]
		ofType: Supplier) anyOne! !
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:49:10' prior: 50656197!
supplierWithIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]
		ofType: Supplier) anyOne! !

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:49:11'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:49:20'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:49:20'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:49:20'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:49:20'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 01:49:21'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:49:21'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:49:21'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:49:21'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:49:22'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:49:22'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:49:23'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:49:23'!
PASSED!
!SupplierImportTest methodsFor: 'running' stamp: 'IB 11/27/2023 01:50:10' overrides: 16961402!
tearDown

	supplierSystem commit.
	supplierSystem stop.
	customerSystem commit.
	customerSystem stop
	! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:50:12'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:50:12'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:50:12'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:50:12'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 01:50:13'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:50:13'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:50:13'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:50:13'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:50:14'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:50:14'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:50:15'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:50:15'!
PASSED!

----SNAPSHOT----(27 November 2023 01:50:19) CuisUniversity-5981.image priorSource: 10379839!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:50:24'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:50:24'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:50:24'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:50:24'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 01:50:24'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:50:25'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:50:25'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:50:25'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:50:26'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:50:26'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:50:27'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:50:27'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:50:28'!
PASSED!
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:50:34'!
commit
	self shouldBeImplemented.! !
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:50:43' prior: 50656360!
commit

	session commit ! !
!PersistentSupplierSystem methodsFor: 'starting' stamp: 'IB 11/27/2023 01:50:48'!
stop
	self shouldBeImplemented.! !
!PersistentSupplierSystem methodsFor: 'starting' stamp: 'IB 11/27/2023 01:50:55' prior: 50656369!
stop

	session close! !

----SNAPSHOT----(27 November 2023 01:51:04) CuisUniversity-5981.image priorSource: 10389146!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:51:12'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:51:12'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:51:12'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:51:12'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 01:51:12'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:51:13'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:51:13'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:51:13'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:51:14'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:51:14'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:51:15'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:51:15'!
PASSED!

----SNAPSHOT----(27 November 2023 01:51:31) CuisUniversity-5981.image priorSource: 10391255!

Object subclass: #PartyImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #PartyImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:51:52'!
Object subclass: #PartyImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

PartyImporter subclass: #CustomerImporter
	instanceVariableNames: 'readStream newCustomer line record customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:52:00'!
PartyImporter subclass: #CustomerImporter
	instanceVariableNames: 'readStream newCustomer line record customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

PartyImporter subclass: #SupplierImporter
	instanceVariableNames: 'readStream supplierSystem record line newSupplier customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:52:04'!
PartyImporter subclass: #SupplierImporter
	instanceVariableNames: 'readStream supplierSystem record line newSupplier customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:52:28'!
PartyImporter subclass: #CustomerImporter
	instanceVariableNames: 'readStream newCustomer line customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:52:28'!
PartyImporter subclass: #SupplierImporter
	instanceVariableNames: 'readStream supplierSystem line newSupplier customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #PartyImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:52:28'!
Object subclass: #PartyImporter
	instanceVariableNames: 'record'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!PartyImporter methodsFor: 'evaluating - private' stamp: 'IB 11/27/2023 01:52:28'!
assertRecordNotEmpty

	record isEmpty ifTrue: [ self error: self class invalidRecordTypeErrorDescription ]! !

!methodRemoval: CustomerImporter #assertRecordNotEmpty stamp: 'IB 11/27/2023 01:52:28'!
assertRecordNotEmpty

	record isEmpty ifTrue: [ self error: self class invalidRecordTypeErrorDescription ]!

self makeCurrent!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:52:46'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:52:46'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:52:46'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:52:46'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 01:52:46'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:52:46'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:52:46'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:52:46'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:52:46'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:52:46'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:52:46'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:52:46'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:52:48'!
PASSED!
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:52:55'!
commit
	self shouldBeImplemented.! !
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:52:57' prior: 50656552!
commit
	! !
!TransientSupplierSystem methodsFor: 'starting' stamp: 'IB 11/27/2023 01:53:04'!
stop
	self shouldBeImplemented.! !
!TransientSupplierSystem methodsFor: 'starting' stamp: 'IB 11/27/2023 01:53:05' prior: 50656560!
stop
	! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:53:11'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:53:11'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:53:11'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:53:11'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 01:53:11'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:53:11'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:53:11'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:53:11'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:53:11'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:53:11'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:53:11'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:53:11'!
PASSED!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:54:12'!
PartyImporter subclass: #CustomerImporter
	instanceVariableNames: 'newCustomer line customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:54:12'!
PartyImporter subclass: #SupplierImporter
	instanceVariableNames: 'supplierSystem line newSupplier customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #PartyImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:54:13'!
Object subclass: #PartyImporter
	instanceVariableNames: 'record readStream'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:54:13'!
PartyImporter subclass: #CustomerImporter
	instanceVariableNames: 'newCustomer customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:54:13'!
PartyImporter subclass: #SupplierImporter
	instanceVariableNames: 'supplierSystem newSupplier customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #PartyImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 01:54:13'!
Object subclass: #PartyImporter
	instanceVariableNames: 'record readStream line'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!PartyImporter methodsFor: 'evaluating - private' stamp: 'IB 11/27/2023 01:54:13'!
hasLineToImport

	line := readStream nextLine.
	^line notNil! !

!methodRemoval: CustomerImporter #hasLineToImport stamp: 'IB 11/27/2023 01:54:13'!
hasLineToImport

	line := readStream nextLine.
	^line notNil!

!methodRemoval: SupplierImporter #hasLineToImport stamp: 'IB 11/27/2023 01:54:13'!
hasLineToImport

	line := readStream nextLine.
	^line notNil!
!PartyImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:54:44'!
createRecord

	^ record := line findTokens: $,! !

!methodRemoval: SupplierImporter #createRecord stamp: 'IB 11/27/2023 01:54:44'!
createRecord

	^ record := line findTokens: $,!

!methodRemoval: CustomerImporter #createRecord stamp: 'IB 11/27/2023 01:54:44'!
createRecord

	^ record := line findTokens: $,!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:55:15'!
assertPartyWasImported

	^ self assertSupplierWasImported! !
!CustomerImporter methodsFor: 'address' stamp: 'IB 11/27/2023 01:55:34'!
assertPartyWasImported
	
	^self assertCustomerWasImported! !
!PartyImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:55:43'!
assertPartyWasImported

	self subclassResponsibility! !
!CustomerImporter methodsFor: 'address' stamp: 'IB 11/27/2023 01:56:05' prior: 50650824!
importAddress

	| newAddress |

	self assertPartyWasImported.
	self assertValidAddressRecord.

	newAddress := Address new.
	newCustomer addAddress: newAddress.
	newAddress streetName: record second.
	newAddress streetNumber: record third asNumber .
	newAddress town: record fourth.
	newAddress zipCode: record fifth asNumber .
	newAddress province: record sixth! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:56:20' prior: 50653318!
importAddress

	|address|
	
	self assertPartyWasImported.
	
	address := Address new.
	newSupplier addAddress: address.
	address streetName: record second.
	address streetNumber: record third asNumber .
	address town: record fourth.
	address zipCode: record fifth asNumber.
	address province: record sixth! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:56:43' prior: 50656717!
importAddress

	|address|
	
	self assertPartyWasImported.
	self assertValidAddressRecord.
	
	address := Address new.
	newSupplier addAddress: address.
	address streetName: record second.
	address streetNumber: record third asNumber .
	address town: record fourth.
	address zipCode: record fifth asNumber.
	address province: record sixth! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:57:04'!
newParty

	^newSupplier! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:57:14' prior: 50656730!
importAddress

	|address|
	
	self assertPartyWasImported.
	self assertValidAddressRecord.
	
	address := Address new.
	self newParty addAddress: address.
	address streetName: record second.
	address streetNumber: record third asNumber .
	address town: record fourth.
	address zipCode: record fifth asNumber.
	address province: record sixth! !
!CustomerImporter methodsFor: 'address' stamp: 'IB 11/27/2023 01:57:24'!
newParty

	^newCustomer! !
!CustomerImporter methodsFor: 'address' stamp: 'IB 11/27/2023 01:57:31' prior: 50656702!
importAddress

	| newAddress |

	self assertPartyWasImported.
	self assertValidAddressRecord.

	newAddress := Address new.
	self newParty addAddress: newAddress.
	newAddress streetName: record second.
	newAddress streetNumber: record third asNumber .
	newAddress town: record fourth.
	newAddress zipCode: record fifth asNumber .
	newAddress province: record sixth! !
!PartyImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:57:38'!
newParty

	self subclassResponsibility! !
!PartyImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:57:49'!
importAddress

	|address|
	
	self assertPartyWasImported.
	self assertValidAddressRecord.
	
	address := Address new.
	self newParty addAddress: address.
	address streetName: record second.
	address streetNumber: record third asNumber .
	address town: record fourth.
	address zipCode: record fifth asNumber.
	address province: record sixth! !

!methodRemoval: SupplierImporter #importAddress stamp: 'IB 11/27/2023 01:57:49'!
importAddress

	|address|
	
	self assertPartyWasImported.
	self assertValidAddressRecord.
	
	address := Address new.
	self newParty addAddress: address.
	address streetName: record second.
	address streetNumber: record third asNumber .
	address town: record fourth.
	address zipCode: record fifth asNumber.
	address province: record sixth!

!methodRemoval: CustomerImporter #importAddress stamp: 'IB 11/27/2023 01:57:49'!
importAddress

	| newAddress |

	self assertPartyWasImported.
	self assertValidAddressRecord.

	newAddress := Address new.
	self newParty addAddress: newAddress.
	newAddress streetName: record second.
	newAddress streetNumber: record third asNumber .
	newAddress town: record fourth.
	newAddress zipCode: record fifth asNumber .
	newAddress province: record sixth!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:57:53'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:57:53'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:57:53'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:57:53'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 01:57:53'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:57:53'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:57:53'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:57:54'!
ERROR!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:57:54'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:57:54'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:57:54'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:57:54'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:57:54'!
ERROR!
!PartyImporter methodsFor: 'address' stamp: 'IB 11/27/2023 01:58:09'!
assertValidAddressRecord

	^ record size ~= 6 ifTrue: [ self error: self class invalidAddressRecordErrorDescription ]! !

!methodRemoval: CustomerImporter #assertValidAddressRecord stamp: 'IB 11/27/2023 01:58:09'!
assertValidAddressRecord

	^ record size ~= 6 ifTrue: [ self error: self class invalidAddressRecordErrorDescription ]!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 01:58:11'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 01:58:11'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 01:58:11'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:58:11'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 01:58:11'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 01:58:11'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 01:58:11'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 01:58:11'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 01:58:11'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 01:58:11'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 01:58:11'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 01:58:11'!
PASSED!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 01:58:14'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 01:58:14'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 01:58:14'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 01:58:14'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 01:58:14'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 01:58:14'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 01:58:14'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 01:58:14'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 01:58:14'!
PASSED!

----SNAPSHOT----(27 November 2023 01:58:19) CuisUniversity-5981.image priorSource: 10392678!
!PartyImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:59:26' prior: 50656494!
assertRecordNotEmpty

	record isEmpty ifTrue: [ self error: self class invalidRecordTypeErrorDescription ]! !

!methodRemoval: SupplierImporter #assertRecordNotEmpty stamp: 'IB 11/27/2023 01:59:26'!
assertRecordNotEmpty

	record isEmpty ifTrue: [ self error: self class invalidRecordTypeErrorDescription ]!
!PartyImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 01:59:46'!
isAddressRecord

	^ record first = 'A'! !

!methodRemoval: SupplierImporter #isAddressRecord stamp: 'IB 11/27/2023 01:59:46'!
isAddressRecord

	^ record first = 'A'!

!methodRemoval: CustomerImporter #isAddressRecord stamp: 'IB 11/27/2023 01:59:46'!
isAddressRecord

	^ record first = 'A'!
!PartyImporter methodsFor: 'initialization' stamp: 'IB 11/27/2023 01:59:59' overrides: 16902254!
value

	[self hasLineToImport] whileTrue:[
		self createRecord.
		self importRecord]! !

!methodRemoval: SupplierImporter #value stamp: 'IB 11/27/2023 01:59:59'!
value

	[self hasLineToImport] whileTrue:[
		self createRecord.
		self importRecord]!

!methodRemoval: CustomerImporter #value stamp: 'IB 11/27/2023 01:59:59'!
value

	[ self hasLineToImport ] whileTrue: [
		self createRecord.
		self importRecord ]!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:00:03'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:00:03'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:00:03'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:00:03'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:00:03'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:00:03'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:00:03'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:00:03'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:00:04'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:00:04'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:00:04'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:00:04'!
PASSED!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 02:00:06'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 02:00:06'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 02:00:06'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:00:06'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 02:00:06'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 02:00:06'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 02:00:06'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 02:00:06'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 02:00:06'!
PASSED!
!PartyImporter methodsFor: 'evaluating' stamp: 'IB 11/27/2023 02:02:26' prior: 50656984 overrides: 16902254!
value

	[self hasLineToImport] whileTrue:[
		self createRecord.
		self assertRecordNotEmpty.
		self importRecord]! !
!CustomerImporter methodsFor: 'evaluating - private' stamp: 'IB 11/27/2023 02:02:33' prior: 50650859!
importRecord

	self isCustomerRecord ifTrue: [ ^self importCustomer ].
	self isAddressRecord ifTrue: [ ^self importAddress ].

	self error: self class invalidRecordTypeErrorDescription! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:02:41' prior: 50655685!
importRecord
	
	self isSupplierRecord ifTrue: [ ^self importSupplier ].
	self isAddressRecord ifTrue: [ ^self importAddress ].
	self isNewCustomerRecord ifTrue: [ ^self importNewCustomer ].
	self isExistingCustomerRecord ifTrue: [ ^self importExistingCustomer ].

	self error: self class invalidRecordTypeErrorDescription! !

----SNAPSHOT----(27 November 2023 02:03:12) CuisUniversity-5981.image priorSource: 10409760!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:03:14'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:03:14'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:03:14'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:03:14'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:03:14'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:03:14'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:03:14'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:03:14'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:03:14'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:03:14'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:03:14'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:03:14'!
PASSED!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 02:03:16'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 02:03:16'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 02:03:16'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:03:16'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 02:03:16'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 02:03:16'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 02:03:16'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 02:03:16'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 02:03:16'!
PASSED!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:06:22'!
importRecordAndIfNoneMatchExecute: aBlock
	
	self isSupplierRecord ifTrue: [ ^self importSupplier ].
	self isAddressRecord ifTrue: [ ^self importAddress ].
	self isNewCustomerRecord ifTrue: [ ^self importNewCustomer ].
	self isExistingCustomerRecord ifTrue: [ ^self importExistingCustomer ].

	aBlock value! !
!PartyImporter methodsFor: 'evaluating' stamp: 'IB 11/27/2023 02:06:49' prior: 50657076 overrides: 16902254!
value

	[self hasLineToImport] whileTrue:[
		self createRecord.
		self assertRecordNotEmpty.
		self importRecordAndIfNoneMatchExecute: 
			[self error: self class invalidRecordTypeErrorDescription]]! !
!PartyImporter methodsFor: 'evaluating' stamp: 'IB 11/27/2023 02:08:16' prior: 50657198 overrides: 16902254!
value

	[self hasLineToImport] whileTrue:[
		self createRecord.
		self assertRecordNotEmpty.
		self importRecord]! !

!methodRemoval: SupplierImporter #importRecordAndIfNoneMatchExecute: stamp: 'IB 11/27/2023 02:08:22'!
importRecordAndIfNoneMatchExecute: aBlock
	
	self isSupplierRecord ifTrue: [ ^self importSupplier ].
	self isAddressRecord ifTrue: [ ^self importAddress ].
	self isNewCustomerRecord ifTrue: [ ^self importNewCustomer ].
	self isExistingCustomerRecord ifTrue: [ ^self importExistingCustomer ].

	aBlock value!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 02:09:19'!
PartyImporter subclass: #CustomerImporter
	instanceVariableNames: 'newCustomer customerSystem1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!CustomerImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:09:19' prior: 50651670!
initializeFrom: aReadStream into: aCustomerSystem

	readStream := aReadStream.
	customerSystem1 := aCustomerSystem ! !
!CustomerImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:09:19' prior: 50654993!
importCustomer

	self assertValidCustomerRecord.

	newCustomer := 
		Customer 
			withFirstName: record second 
			andLast: record third 
			withIdentificationType: record fourth 
			andNumber: record fifth.
	customerSystem1 add: newCustomer! !

CustomerImporter subclass: #SupplierImporter
	instanceVariableNames: 'supplierSystem newSupplier customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

CustomerImporter subclass: #SupplierImporter
	instanceVariableNames: 'supplierSystem newSupplier customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:09:57' prior: 50655004!
importNewCustomer

	| newCustomer1 |
	
	self assertSupplierWasImported.
	
	newCustomer1 := 
		Customer 
			withFirstName: record second 
			andLast: record third 
			withIdentificationType: record fourth 
			andNumber: record fifth.
	customerSystem add: newCustomer1.
	newSupplier addCustomer: newCustomer1! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:10:02' prior: 50655720!
importExistingCustomer
	
	| newCustomer1 |
	
	self assertSupplierWasImported.
	
	newCustomer1 := customerSystem customerWithIdentificationType: record fourth number: record fifth.
	
	newSupplier addCustomer: newCustomer1! !

CustomerImporter subclass: #SupplierImporter
	instanceVariableNames: 'supplierSystem newSupplier customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 02:10:06'!
CustomerImporter subclass: #SupplierImporter
	instanceVariableNames: 'supplierSystem newSupplier customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:10:27' prior: 50657280!
importExistingCustomer
	
	| customer |
	
	self assertSupplierWasImported.
	
	customer := customerSystem customerWithIdentificationType: record fourth number: record fifth.
	
	newSupplier addCustomer: customer! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:11:07' prior: 50657267!
importNewCustomer

	self importCustomer.
	newSupplier addCustomer: newCustomer! !
!SupplierImporter methodsFor: 'initialization' stamp: 'IB 11/27/2023 02:11:33' prior: 50653906!
initializeFrom: aReadStream into: aSupplierSystem workingWith: aCustomerSystem

	readStream := aReadStream.
	supplierSystem := aSupplierSystem.
	customerSystem1 := aCustomerSystem! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:11:40' prior: 50657305!
importExistingCustomer
	
	| customer |
	
	self assertSupplierWasImported.
	
	customer := customerSystem1 customerWithIdentificationType: record fourth number: record fifth.
	
	newSupplier addCustomer: customer! !

CustomerImporter subclass: #SupplierImporter
	instanceVariableNames: 'supplierSystem newSupplier'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #SupplierImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 02:12:09'!
CustomerImporter subclass: #SupplierImporter
	instanceVariableNames: 'supplierSystem newSupplier'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classDefinition: #CustomerImporter category: 'CustomerImporter' stamp: 'IB 11/27/2023 02:12:13'!
PartyImporter subclass: #CustomerImporter
	instanceVariableNames: 'newCustomer customerSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!CustomerImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:12:13' prior: 50657237!
initializeFrom: aReadStream into: aCustomerSystem

	readStream := aReadStream.
	customerSystem := aCustomerSystem ! !
!CustomerImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:12:13' prior: 50657244!
importCustomer

	self assertValidCustomerRecord.

	newCustomer := 
		Customer 
			withFirstName: record second 
			andLast: record third 
			withIdentificationType: record fourth 
			andNumber: record fifth.
	customerSystem add: newCustomer! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:12:13' prior: 50657330!
importExistingCustomer
	
	| customer |
	
	self assertSupplierWasImported.
	
	customer := customerSystem customerWithIdentificationType: record fourth number: record fifth.
	
	newSupplier addCustomer: customer! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:12:13' prior: 50657321!
initializeFrom: aReadStream into: aSupplierSystem workingWith: aCustomerSystem

	readStream := aReadStream.
	supplierSystem := aSupplierSystem.
	customerSystem := aCustomerSystem! !
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 02:16:44'!
decodeNewCustomer

	^ newCustomer := 
		Customer 
			withFirstName: record second 
			andLast: record third 
			withIdentificationType: record fourth 
			andNumber: record fifth! !
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 02:16:44' prior: 50657370!
importCustomer

	self assertValidCustomerRecord.

	self decodeNewCustomer.
	customerSystem add: newCustomer! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:18:51' overrides: 50657408!
importCustomer
	
	| customer |
	
	self assertSupplierWasImported.
	
	[customer := customerSystem customerWithIdentificationType: record fourth number: record fifth] on: Error do: [].
	
	newSupplier addCustomer: customer! !
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 02:19:09'!
importCustomer: aSystem

	self assertValidCustomerRecord.

	self decodeNewCustomer.
	customerSystem add: newCustomer! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:19:09' overrides: 50657425!
importCustomer: aSystem
	
	| customer |
	
	self assertSupplierWasImported.
	
	[customer := customerSystem customerWithIdentificationType: record fourth number: record fifth] on: Error do: [].
	
	newSupplier addCustomer: customer! !
!CustomerImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:19:09' prior: 50657083!
importRecord

	self isCustomerRecord ifTrue: [ ^self importCustomer: customerSystem ].
	self isAddressRecord ifTrue: [ ^self importAddress ].

	self error: self class invalidRecordTypeErrorDescription! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:19:09' prior: 50657315!
importNewCustomer

	self importCustomer: customerSystem.
	newSupplier addCustomer: newCustomer! !

!methodRemoval: CustomerImporter #importCustomer stamp: 'IB 11/27/2023 02:19:09'!
importCustomer

	self assertValidCustomerRecord.

	self decodeNewCustomer.
	customerSystem add: newCustomer!

!methodRemoval: SupplierImporter #importCustomer stamp: 'IB 11/27/2023 02:19:09'!
importCustomer
	
	| customer |
	
	self assertSupplierWasImported.
	
	[customer := customerSystem customerWithIdentificationType: record fourth number: record fifth] on: Error do: [].
	
	newSupplier addCustomer: customer!
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 02:19:25'!
importCustomerTo: aSystem

	self assertValidCustomerRecord.

	self decodeNewCustomer.
	customerSystem add: newCustomer! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:19:25' overrides: 50657474!
importCustomerTo: aSystem
	
	| customer |
	
	self assertSupplierWasImported.
	
	[customer := customerSystem customerWithIdentificationType: record fourth number: record fifth] on: Error do: [].
	
	newSupplier addCustomer: customer! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:19:25' prior: 50657453!
importNewCustomer

	self importCustomerTo: customerSystem.
	newSupplier addCustomer: newCustomer! !
!CustomerImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:19:25' prior: 50657443!
importRecord

	self isCustomerRecord ifTrue: [ ^self importCustomerTo: customerSystem ].
	self isAddressRecord ifTrue: [ ^self importAddress ].

	self error: self class invalidRecordTypeErrorDescription! !

!methodRemoval: CustomerImporter #importCustomer: stamp: 'IB 11/27/2023 02:19:25'!
importCustomer: aSystem

	self assertValidCustomerRecord.

	self decodeNewCustomer.
	customerSystem add: newCustomer!

!methodRemoval: SupplierImporter #importCustomer: stamp: 'IB 11/27/2023 02:19:25'!
importCustomer: aSystem
	
	| customer |
	
	self assertSupplierWasImported.
	
	[customer := customerSystem customerWithIdentificationType: record fourth number: record fifth] on: Error do: [].
	
	newSupplier addCustomer: customer!
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 02:19:32' prior: 50657474!
importCustomerTo: aSystem

	self assertValidCustomerRecord.

	self decodeNewCustomer.
	aSystem add: newCustomer! !
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 02:19:37' prior: 50657525!
importCustomerTo: aSystem

	self assertValidCustomerRecord.

	self decodeNewCustomer.
	
	aSystem add: newCustomer! !
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 02:20:16'!
defaultSystem

	^customerSystem! !
!CustomerImporter methodsFor: 'evaluating - private' stamp: 'IB 11/27/2023 02:20:26' prior: 50657499!
importRecord

	self isCustomerRecord ifTrue: [ ^self importCustomerTo: self defaultSystem ].
	self isAddressRecord ifTrue: [ ^self importAddress ].

	self error: self class invalidRecordTypeErrorDescription! !
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 02:21:08' prior: 50657399!
decodeNewCustomer

	newCustomer := 
		Customer 
			withFirstName: record second 
			andLast: record third 
			withIdentificationType: record fourth 
			andNumber: record fifth! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:21:49' overrides: 50657553!
decodeNewCustomer

	[newCustomer := 
		customerSystem 
			customerWithIdentificationType: record fourth 
			number: record fifth] on: Error do: [super decodeNewCustomer].! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:21:50' prior: 50657562 overrides: 50657553!
decodeNewCustomer

	[newCustomer := 
		customerSystem 
			customerWithIdentificationType: record fourth 
			number: record fifth] on: Error do: [super decodeNewCustomer]! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:22:08' overrides: 50657538!
defaultSystem

	^supplierSystem! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:22:10'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:22:10'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:22:10'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:22:10'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:22:10'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:22:10'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:22:10'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:22:10'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:22:10'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:22:10'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:22:10'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:22:10'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:22:10'!
FAILURE!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:22:57' prior: 50657571 overrides: 50657553!
decodeNewCustomer

	[newCustomer := 
		customerSystem 
			customerWithIdentificationType: record fourth 
			number: record fifth] on: Error do: [super decodeNewCustomer.
			customerSystem add: newCustomer]! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:22:58'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:22:58'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:22:58'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:22:58'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:22:58'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:22:58'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:22:58'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:22:58'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:22:58'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:22:58'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:22:58'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:22:58'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:22:58'!
FAILURE!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:23:20' prior: 50657092 overrides: 50657543!
importRecord
	
	self isSupplierRecord ifTrue: [ ^self importSupplier ].
	super importRecord! !

!methodRemoval: SupplierImporter #importNewCustomer stamp: 'IB 11/27/2023 02:23:44'!
importNewCustomer

	self importCustomerTo: customerSystem.
	newSupplier addCustomer: newCustomer!

!methodRemoval: SupplierImporter #importExistingCustomer stamp: 'IB 11/27/2023 02:23:50'!
importExistingCustomer
	
	| customer |
	
	self assertSupplierWasImported.
	
	customer := customerSystem customerWithIdentificationType: record fourth number: record fifth.
	
	newSupplier addCustomer: customer!

!methodRemoval: SupplierImporter #importCustomerTo: stamp: 'IB 11/27/2023 02:23:59'!
importCustomerTo: aSystem
	
	| customer |
	
	self assertSupplierWasImported.
	
	[customer := customerSystem customerWithIdentificationType: record fourth number: record fifth] on: Error do: [].
	
	newSupplier addCustomer: customer!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:25:15'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:25:15'!
FAILURE!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:25:15'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:25:15'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:25:15'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:25:15'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:25:15'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:25:16'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:25:16'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:25:16'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:25:16'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:25:16'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:25:17'!
FAILURE!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:25:57' overrides: 50650806!
isCustomerRecord

	^ self isExistingCustomerRecord or: [self isNewCustomerRecord]! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:25:58'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:25:58'!
FAILURE!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:25:58'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:25:58'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:25:58'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:25:58'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:25:58'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:25:58'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:25:58'!
FAILURE!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:25:58'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:25:58'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:25:58'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:25:59'!
FAILURE!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:28:02' prior: 50657630 overrides: 50657553!
decodeNewCustomer

	self assertPartyWasImported.
	[newCustomer := 
		customerSystem 
			customerWithIdentificationType: record fourth 
			number: record fifth] on: Error do: [super decodeNewCustomer.
			customerSystem add: newCustomer]! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:28:03'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:28:03'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:28:03'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:28:03'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:28:03'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:28:03'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:28:03'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:28:03'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:28:03'!
FAILURE!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:28:03'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:28:03'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:28:03'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:28:05'!
FAILURE!
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 02:29:01' prior: 50657532!
importCustomerTo: aSystem

	self assertValidCustomerRecord.

	self decodeNewCustomer.
	
	customerSystem add: newCustomer! !

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 02:29:02'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 02:29:02'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 02:29:02'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:29:02'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 02:29:02'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 02:29:02'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 02:29:02'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 02:29:02'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 02:29:02'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:29:05'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:29:05'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:29:05'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:29:05'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:29:05'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:29:05'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:29:05'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:29:05'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:29:05'!
FAILURE!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:29:05'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:29:05'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:29:05'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:29:06'!
FAILURE!
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 02:29:31' prior: 50657870!
importCustomerTo: aSystem

	self assertValidCustomerRecord.

	self decodeNewCustomer! !
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 02:30:00' prior: 50657553!
decodeNewCustomer

	newCustomer := 
		Customer 
			withFirstName: record second 
			andLast: record third 
			withIdentificationType: record fourth 
			andNumber: record fifth.
	customerSystem add: newCustomer! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:30:07' prior: 50657814 overrides: 50657962!
decodeNewCustomer

	self assertPartyWasImported.
	[newCustomer := 
		customerSystem 
			customerWithIdentificationType: record fourth 
			number: record fifth] on: Error do: [super decodeNewCustomer]! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:30:08'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:30:08'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:30:08'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:30:08'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:30:08'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:30:08'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:30:08'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:30:09'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:30:09'!
FAILURE!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:30:09'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:30:09'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:30:09'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:30:10'!
FAILURE!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:30:53' prior: 50657973 overrides: 50657962!
decodeNewCustomer

	self assertPartyWasImported.
	[newCustomer := 
		customerSystem 
			customerWithIdentificationType: record fourth 
			number: record fifth] on: Error do: [super decodeNewCustomer].
	newSupplier add: newCustomer! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:30:54'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:30:54'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:30:54'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:30:54'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:30:54'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:30:54'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:30:54'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:30:54'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:30:54'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:30:54'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:30:54'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:30:54'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:30:55'!
ERROR!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:31:03' prior: 50658028 overrides: 50657962!
decodeNewCustomer

	self assertPartyWasImported.
	[newCustomer := 
		customerSystem 
			customerWithIdentificationType: record fourth 
			number: record fifth] on: Error do: [super decodeNewCustomer].
	newSupplier addCustomer: newCustomer! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:31:04'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:31:04'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:31:04'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:31:04'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:31:04'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:31:04'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:31:04'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:31:04'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:31:04'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:31:04'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:31:04'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:31:04'!
PASSED!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 02:31:07'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 02:31:07'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 02:31:07'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:31:07'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 02:31:07'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 02:31:07'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 02:31:07'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 02:31:07'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 02:31:07'!
PASSED!

----SNAPSHOT----(27 November 2023 02:31:09) CuisUniversity-5981.image priorSource: 10414532!
!PartyImporter methodsFor: 'evaluating' stamp: 'IB 11/27/2023 02:32:13'!
importRecord

	self subclassResponsibility ! !

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 02:32:16'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 02:32:16'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 02:32:16'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:32:16'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 02:32:16'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 02:32:16'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 02:32:16'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 02:32:16'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 02:32:16'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:32:18'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:32:18'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:32:18'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:32:18'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:32:18'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:32:18'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:32:18'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:32:18'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:32:18'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:32:18'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:32:18'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:32:18'!
PASSED!

----SNAPSHOT----(27 November 2023 02:32:21) CuisUniversity-5981.image priorSource: 10448613!
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 02:33:11'!
importCustomerTo

	self assertValidCustomerRecord.

	self decodeNewCustomer! !
!CustomerImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:33:11' prior: 50657543 overrides: 50658173!
importRecord

	self isCustomerRecord ifTrue: [ ^self importCustomerTo].
	self isAddressRecord ifTrue: [ ^self importAddress ].

	self error: self class invalidRecordTypeErrorDescription! !

!methodRemoval: CustomerImporter #importCustomerTo: stamp: 'IB 11/27/2023 02:33:11'!
importCustomerTo: aSystem

	self assertValidCustomerRecord.

	self decodeNewCustomer!
!CustomerImporter methodsFor: 'customer' stamp: 'IB 11/27/2023 02:33:22'!
importCustomer

	self assertValidCustomerRecord.

	self decodeNewCustomer! !
!CustomerImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:33:22' prior: 50658263 overrides: 50658173!
importRecord

	self isCustomerRecord ifTrue: [ ^self importCustomer].
	self isAddressRecord ifTrue: [ ^self importAddress ].

	self error: self class invalidRecordTypeErrorDescription! !

!methodRemoval: CustomerImporter #importCustomerTo stamp: 'IB 11/27/2023 02:33:22'!
importCustomerTo

	self assertValidCustomerRecord.

	self decodeNewCustomer!

!methodRemoval: CustomerImporter #defaultSystem stamp: 'IB 11/27/2023 02:33:33'!
defaultSystem

	^customerSystem!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:34:28' prior: 50658084 overrides: 50657962!
decodeNewCustomer

	self assertSupplierWasImported.
	
	[newCustomer := 
		customerSystem 
			customerWithIdentificationType: record fourth 
			number: record fifth] on: Error do: [super decodeNewCustomer].
	newSupplier addCustomer: newCustomer! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:34:45' prior: 50658302 overrides: 50657962!
decodeNewCustomer

	self assertSupplierWasImported.
	
	[newCustomer := 
		customerSystem 
			customerWithIdentificationType: record fourth 
			number: record fifth] on: Error do: [super decodeNewCustomer].
		
	newSupplier addCustomer: newCustomer! !

!methodRemoval: SupplierImporter #defaultSystem stamp: 'IB 11/27/2023 02:34:50'!
defaultSystem

	^supplierSystem!

----SNAPSHOT----(27 November 2023 02:35:05) CuisUniversity-5981.image priorSource: 10451266!
!CustomerSystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:36:14'!
partyWithIdentificationType: anIdType andNumber: anIdNumber

	self subclassResponsibility ! !
!PersistentCustomerSystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:36:15' overrides: 50658331!
partyWithIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]
		ofType: Customer) anyOne! !
!TransientCustomerSystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:36:15' overrides: 50658331!
partyWithIdentificationType: anIdType andNumber: anIdNumber

	^customers detect: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]! !
!CustomerImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:36:15' prior: 50650490!
assertCustomerWithIdentificationType: anIdType number: anIdNumber hasFirstName: aFirstName lastName: aLastName

	| importedCustomer |

	importedCustomer := system partyWithIdentificationType: anIdType andNumber: anIdNumber.

	self assert: aFirstName equals: importedCustomer firstName.
	self assert: aLastName equals: importedCustomer lastName.
	self assert: anIdType equals: importedCustomer identificationType.
	self assert: anIdNumber equals: importedCustomer identificationNumber.

	^importedCustomer

	! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:36:15' prior: 50658314 overrides: 50657962!
decodeNewCustomer

	self assertSupplierWasImported.
	
	[newCustomer := 
		customerSystem 
			partyWithIdentificationType: record fourth 
			andNumber: record fifth] on: Error do: [super decodeNewCustomer].
		
	newSupplier addCustomer: newCustomer! !
!CustomerImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:36:15' prior: 50650509!
assertImportedOneCustomerWithoutAddress

	| importedCustomer |

	self assert: 1 equals: system numberOfCustomers.
	importedCustomer := system partyWithIdentificationType: 'D' andNumber: '22333444'.
	self assert: importedCustomer isAddressesEmpty
	! !

!methodRemoval: CustomerSystem #customerWithIdentificationType:number: stamp: 'IB 11/27/2023 02:36:15'!
customerWithIdentificationType: anIdType number: anIdNumber

	self subclassResponsibility !

!methodRemoval: PersistentCustomerSystem #customerWithIdentificationType:number: stamp: 'IB 11/27/2023 02:36:15'!
customerWithIdentificationType: anIdType number: anIdNumber

	^(session
		select: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]
		ofType: Customer) anyOne!

!methodRemoval: TransientCustomerSystem #customerWithIdentificationType:number: stamp: 'IB 11/27/2023 02:36:15'!
customerWithIdentificationType: anIdType number: anIdNumber

	^customers detect: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]!
!CustomerSystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:36:30'!
numberOfParties

	self subclassResponsibility ! !
!PersistentCustomerSystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:36:30' overrides: 50658428!
numberOfParties

	^(session selectAllOfType: Customer) size! !
!TransientCustomerSystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:36:30' overrides: 50658428!
numberOfParties

	^customers size! !
!CustomerImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:36:30' prior: 50650520!
assertImportedRightNumberOfCustomers

	^ self assert: 2 equals: system numberOfParties! !
!CustomerImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:36:30' prior: 50658391!
assertImportedOneCustomerWithoutAddress

	| importedCustomer |

	self assert: 1 equals: system numberOfParties.
	importedCustomer := system partyWithIdentificationType: 'D' andNumber: '22333444'.
	self assert: importedCustomer isAddressesEmpty
	! !
!CustomerImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:36:30' prior: 50650538!
assertNoCustomerWasImported

	^ self assert: 0 equals: system numberOfParties! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:36:30' prior: 50655733!
testImportExistingCustomer

	|importedSupplier|
	
	customerSystem add: self customer.
	
	self import: self dataWithOneExistingCustomer.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	self assert: customerSystem numberOfParties equals: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier customers size equals: 1.
	self assertCustomerOf: importedSupplier withFirstName: 'Pepe' andLast: 'Sanchez' withIdentificationType: 'D' andNumber: '22333444'! !

!methodRemoval: CustomerSystem #numberOfCustomers stamp: 'IB 11/27/2023 02:36:30'!
numberOfCustomers

	self subclassResponsibility !

!methodRemoval: PersistentCustomerSystem #numberOfCustomers stamp: 'IB 11/27/2023 02:36:30'!
numberOfCustomers

	^(session selectAllOfType: Customer) size!

!methodRemoval: TransientCustomerSystem #numberOfCustomers stamp: 'IB 11/27/2023 02:36:30'!
numberOfCustomers

	^customers size!
!DevelopmentEnvironment methodsFor: 'supplierSystem' stamp: 'IB 11/27/2023 02:37:05' prior: 50651742!
createSupplierSystem
	
	^TransientCustomerSystem new	! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:37:08'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:37:08'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:37:08'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:37:08'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:37:08'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:37:08'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:37:08'!
ERROR!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:37:08'!
ERROR!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:37:08'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:37:08'!
ERROR!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:37:08'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:37:08'!
ERROR!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:37:09'!
ERROR!
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:37:26'!
numberOfParties

	^(session selectAllOfType: Supplier) size! !
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:37:26'!
numberOfParties

	^suppliers size! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:37:26' prior: 50651558!
assertNoSupplierWasImported
	
	^ self assert: 0 equals: supplierSystem numberOfParties! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:37:26' prior: 50652344!
assertNumberOfRegisteredSuppliersIs: aNumberOfSuppliers

	^ self assert: supplierSystem numberOfParties equals: aNumberOfSuppliers! !

!methodRemoval: PersistentSupplierSystem #numberOfSuppliers stamp: 'IB 11/27/2023 02:37:26'!
numberOfSuppliers

	^(session selectAllOfType: Supplier) size!

!methodRemoval: TransientSupplierSystem #numberOfSuppliers stamp: 'IB 11/27/2023 02:37:26'!
numberOfSuppliers

	^suppliers size!
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:37:37'!
partyWithIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]
		ofType: Supplier) anyOne! !
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:37:37'!
partyWithIdentificationType: anIdType andNumber: anIdNumber 

	^suppliers detect: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:37:37' prior: 50653154!
assertThereIsARegisteredSupplierNamed: aName withIdType: anIdType andNumber: anIdNumber

	| importedSupplier |
	importedSupplier := supplierSystem partyWithIdentificationType: anIdType andNumber: anIdNumber.
	self assert: importedSupplier firstName equals: aName.
	self assert: importedSupplier identificationType equals: anIdType.
	self assert: importedSupplier identificationNumber equals: anIdNumber.
	^importedSupplier! !

!methodRemoval: PersistentSupplierSystem #supplierWithIdentificationType:andNumber: stamp: 'IB 11/27/2023 02:37:37'!
supplierWithIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]
		ofType: Supplier) anyOne!

!methodRemoval: TransientSupplierSystem #supplierWithIdentificationType:andNumber: stamp: 'IB 11/27/2023 02:37:37'!
supplierWithIdentificationType: anIdType andNumber: anIdNumber 

	^suppliers detect: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:37:40'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:37:40'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:37:40'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:37:40'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:37:40'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:37:40'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:37:40'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:37:40'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:37:40'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:37:40'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:37:40'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:37:40'!
PASSED!
!IntegrationEnvironment methodsFor: 'supplier system' stamp: 'IB 11/27/2023 02:37:53' prior: 50656037!
createSupplierSystem

	^PersistentCustomerSystem new! !

!classRenamed: #CustomerSystem as: #PartySystem stamp: 'IB 11/27/2023 02:38:24'!
Smalltalk renameClassNamed: #CustomerSystem as: #PartySystem!

!classRenamed: #PersistentCustomerSystem as: #PersistentPartySystem stamp: 'IB 11/27/2023 02:38:45'!
Smalltalk renameClassNamed: #PersistentCustomerSystem as: #PersistentPartySystem!
!IntegrationEnvironment methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:38:46' prior: 50651330 overrides: 50651228!
createCustomerSystem

	^PersistentPartySystem new! !
!IntegrationEnvironment methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:38:46' prior: 50658683!
createSupplierSystem

	^PersistentPartySystem new! !

!classRenamed: #TransientCustomerSystem as: #TransientPartySystem stamp: 'IB 11/27/2023 02:38:57'!
Smalltalk renameClassNamed: #TransientCustomerSystem as: #TransientPartySystem!
!DevelopmentEnvironment methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:38:57' prior: 50651737 overrides: 50651228!
createCustomerSystem

	^TransientPartySystem new! !
!DevelopmentEnvironment methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:38:57' prior: 50658502!
createSupplierSystem
	
	^TransientPartySystem new	! !
!PersistentPartySystem class methodsFor: 'no messages' stamp: 'IB 11/27/2023 02:39:51'!
storingObjectsOfType: aCollectionOfClasses

	^self new initializeStoringObjectsOfType: aCollectionOfClasses! !

!classDefinition: #PersistentPartySystem category: 'CustomerImporter' stamp: 'IB 11/27/2023 02:40:33'!
PartySystem subclass: #PersistentPartySystem
	instanceVariableNames: 'session classes'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!
!PersistentPartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:40:32'!
initializeStoringObjectsOfType: aCollectionOfClasses

	classes := aCollectionOfClasses! !
!PersistentPartySystem methodsFor: 'system lifecycle' stamp: 'IB 11/27/2023 02:41:07' prior: 50650998 overrides: 50650944!
start

	session := DataBaseSession for: classes
	! !
!IntegrationEnvironment methodsFor: 'supplier system' stamp: 'IB 11/27/2023 02:41:43' prior: 50658704!
createSupplierSystem

	^PersistentPartySystem storingObjectsOfType: (Array with: Address with: Customer with: Supplier)! !
!IntegrationEnvironment methodsFor: 'customer system' stamp: 'IB 11/27/2023 02:41:54' prior: 50658699 overrides: 50651228!
createCustomerSystem

	^PersistentPartySystem storingObjectsOfType: (Array with: Address with: Customer)! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:41:57'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:41:57'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:41:57'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:41:57'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:41:57'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:41:57'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:41:57'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:41:57'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:41:57'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:41:57'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:41:57'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:41:57'!
PASSED!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 02:42:00'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 02:42:00'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 02:42:00'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:42:00'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 02:42:00'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 02:42:00'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 02:42:00'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 02:42:00'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 02:42:00'!
PASSED!


	self makeCurrent!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 02:42:12'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 02:42:12'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 02:42:12'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:42:12'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 02:42:12'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 02:42:13'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 02:42:13'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 02:42:13'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 02:42:13'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:42:15'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:42:15'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:42:16'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:42:16'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:42:16'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:42:16'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:42:16'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:42:16'!
FAILURE!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:42:17'!
FAILURE!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:42:17'!
FAILURE!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:42:18'!
FAILURE!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:42:18'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:42:19'!
FAILURE!

supplierSystem numberOfParties!
!PartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:44:12'!
numberOfParties: aClass

	self subclassResponsibility ! !
!PersistentPartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:44:12' overrides: 50658924!
numberOfParties: aClass

	^(session selectAllOfType: Customer) size! !
!TransientPartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:44:12' overrides: 50658924!
numberOfParties: aClass

	^customers size! !
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:44:12'!
numberOfParties: aClass

	^(session selectAllOfType: Supplier) size! !
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:44:12'!
numberOfParties: aClass

	^suppliers size! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:44:12' prior: 50658561!
assertNoSupplierWasImported
	
	^ self assert: 0 equals: supplierSystem numberOfParties: Customer! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:44:12' prior: 50658468!
testImportExistingCustomer

	|importedSupplier|
	
	customerSystem add: self customer.
	
	self import: self dataWithOneExistingCustomer.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	self assert: customerSystem numberOfParties: Customer equals: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier customers size equals: 1.
	self assertCustomerOf: importedSupplier withFirstName: 'Pepe' andLast: 'Sanchez' withIdentificationType: 'D' andNumber: '22333444'! !
!CustomerImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:44:12' prior: 50658462!
assertNoCustomerWasImported

	^ self assert: 0 equals: system numberOfParties: Customer! !
!CustomerImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:44:13' prior: 50658451!
assertImportedOneCustomerWithoutAddress

	| importedCustomer |

	self assert: 1 equals: system numberOfParties: Customer.
	importedCustomer := system partyWithIdentificationType: 'D' andNumber: '22333444'.
	self assert: importedCustomer isAddressesEmpty
	! !
!CustomerImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:44:13' prior: 50658444!
assertImportedRightNumberOfCustomers

	^ self assert: 2 equals: system numberOfParties: Customer! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:44:13' prior: 50658568!
assertNumberOfRegisteredSuppliersIs: aNumberOfSuppliers

	^ self assert: supplierSystem numberOfParties: Customer equals: aNumberOfSuppliers! !

!methodRemoval: PartySystem #numberOfParties stamp: 'IB 11/27/2023 02:44:13'!
numberOfParties

	self subclassResponsibility !

!methodRemoval: PersistentPartySystem #numberOfParties stamp: 'IB 11/27/2023 02:44:13'!
numberOfParties

	^(session selectAllOfType: Customer) size!

!methodRemoval: TransientPartySystem #numberOfParties stamp: 'IB 11/27/2023 02:44:13'!
numberOfParties

	^customers size!

!methodRemoval: PersistentSupplierSystem #numberOfParties stamp: 'IB 11/27/2023 02:44:13'!
numberOfParties

	^(session selectAllOfType: Supplier) size!

!methodRemoval: TransientSupplierSystem #numberOfParties stamp: 'IB 11/27/2023 02:44:13'!
numberOfParties

	^suppliers size!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:44:23'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:44:23'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:44:23'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:44:23'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:44:23'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:44:23'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:44:23'!
ERROR!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:44:24'!
ERROR!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:44:24'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:44:24'!
ERROR!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:44:24'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:44:24'!
ERROR!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:44:26'!
ERROR!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 02:44:39' prior: 50658949!
assertNoSupplierWasImported
	
	^ self assert: 0 equals: (supplierSystem numberOfParties: Supplier)! !

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:44:40'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:44:42'!
ERROR!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 02:44:57' prior: 50659003!
assertNumberOfRegisteredSuppliersIs: aNumberOfSuppliers

	^ self assert: (supplierSystem numberOfParties: Supplier) equals: aNumberOfSuppliers! !

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:44:58'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:45:03'!
FAILURE!
!PartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:45:29'!
numberOfPartiesOfType: aClass

	self subclassResponsibility ! !
!PersistentPartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:45:29' overrides: 50659105!
numberOfPartiesOfType: aClass

	^(session selectAllOfType: Customer) size! !
!TransientPartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:45:29' overrides: 50659105!
numberOfPartiesOfType: aClass

	^customers size! !
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:45:29'!
numberOfPartiesOfType: aClass

	^(session selectAllOfType: Supplier) size! !
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:45:30'!
numberOfPartiesOfType: aClass

	^suppliers size! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:45:30' prior: 50659090!
assertNumberOfRegisteredSuppliersIs: aNumberOfSuppliers

	^ self assert: (supplierSystem numberOfPartiesOfType: Supplier) equals: aNumberOfSuppliers! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:45:30' prior: 50659076!
assertNoSupplierWasImported
	
	^ self assert: 0 equals: (supplierSystem numberOfPartiesOfType: Supplier)! !

!methodRemoval: PartySystem #numberOfParties: stamp: 'IB 11/27/2023 02:45:30'!
numberOfParties: aClass

	self subclassResponsibility !

!methodRemoval: PersistentPartySystem #numberOfParties: stamp: 'IB 11/27/2023 02:45:30'!
numberOfParties: aClass

	^(session selectAllOfType: Customer) size!

!methodRemoval: TransientPartySystem #numberOfParties: stamp: 'IB 11/27/2023 02:45:30'!
numberOfParties: aClass

	^customers size!

!methodRemoval: PersistentSupplierSystem #numberOfParties: stamp: 'IB 11/27/2023 02:45:30'!
numberOfParties: aClass

	^(session selectAllOfType: Supplier) size!

!methodRemoval: TransientSupplierSystem #numberOfParties: stamp: 'IB 11/27/2023 02:45:30'!
numberOfParties: aClass

	^suppliers size!
!PersistentPartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:45:32' prior: 50659111 overrides: 50659105!
numberOfPartiesOfType: aClass

	^(session selectAllOfType: aClass) size! !

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 02:45:38'!
ERROR!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 02:45:38'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 02:45:38'!
ERROR!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:45:38'!
ERROR!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 02:45:38'!
ERROR!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 02:45:38'!
ERROR!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 02:45:38'!
ERROR!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 02:45:38'!
ERROR!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 02:45:38'!
ERROR!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 02:45:39'!
ERROR!
!CustomerImportTest methodsFor: 'assertions' stamp: 'IB 11/27/2023 02:45:47' prior: 50658996!
assertImportedRightNumberOfCustomers

	^ self assert: 2 equals: (system numberOfParties: Customer)! !
!CustomerImportTest methodsFor: 'assertions' stamp: 'IB 11/27/2023 02:45:53' prior: 50659213!
assertImportedRightNumberOfCustomers

	^ self assert: 2 equals: (system numberOfPartiesOfType: Customer)! !

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 02:45:55'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 02:45:56'!
ERROR!
!CustomerImportTest methodsFor: 'assertions' stamp: 'IB 11/27/2023 02:46:06' prior: 50658977!
assertNoCustomerWasImported

	^ self assert: 0 equals: (system numberOfPartiesOfType: Customer)! !

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 02:46:07'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 02:46:08'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:46:10'!
ERROR!
!CustomerImportTest methodsFor: 'assertions' stamp: 'IB 11/27/2023 02:46:20' prior: 50658984!
assertImportedOneCustomerWithoutAddress

	| importedCustomer |

	self assert: 1 equals: (system numberOfPartiesOfType: Customer).
	importedCustomer := system partyWithIdentificationType: 'D' andNumber: '22333444'.
	self assert: importedCustomer isAddressesEmpty
	! !

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:46:21'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 02:46:22'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 02:46:24'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 02:46:24'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 02:46:25'!
PASSED!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 02:46:30'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 02:46:30'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 02:46:30'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:46:31'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 02:46:31'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 02:46:31'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 02:46:31'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 02:46:31'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 02:46:31'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:46:34'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:46:34'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:46:34'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:46:34'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:46:35'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:46:35'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:46:35'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:46:35'!
ERROR!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:46:36'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:46:36'!
ERROR!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:46:37'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:46:37'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:46:38'!
ERROR!
!PartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:47:34'!
partyOfType: aClass partyWithIdentificationType: anIdType andNumber: anIdNumber

	self subclassResponsibility ! !
!PersistentPartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:47:35' overrides: 50659361!
partyOfType: aClass partyWithIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]
		ofType: Customer) anyOne! !
!TransientPartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:47:35' overrides: 50659361!
partyOfType: aClass partyWithIdentificationType: anIdType andNumber: anIdNumber

	^customers detect: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]! !
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:47:35'!
partyOfType: aClass partyWithIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]
		ofType: Supplier) anyOne! !
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:47:35'!
partyOfType: aClass partyWithIdentificationType: anIdType andNumber: anIdNumber 

	^suppliers detect: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:47:35' prior: 50658379 overrides: 50657962!
decodeNewCustomer

	self assertSupplierWasImported.
	
	[newCustomer := 
		customerSystem 
			partyOfType: Customer partyWithIdentificationType: record fourth 
			andNumber: record fifth] on: Error do: [super decodeNewCustomer].
		
	newSupplier addCustomer: newCustomer! !
!CustomerImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:47:35' prior: 50658359!
assertCustomerWithIdentificationType: anIdType number: anIdNumber hasFirstName: aFirstName lastName: aLastName

	| importedCustomer |

	importedCustomer := system partyOfType: Customer partyWithIdentificationType: anIdType andNumber: anIdNumber.

	self assert: aFirstName equals: importedCustomer firstName.
	self assert: aLastName equals: importedCustomer lastName.
	self assert: anIdType equals: importedCustomer identificationType.
	self assert: anIdNumber equals: importedCustomer identificationNumber.

	^importedCustomer

	! !
!CustomerImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:47:35' prior: 50659251!
assertImportedOneCustomerWithoutAddress

	| importedCustomer |

	self assert: 1 equals: (system numberOfPartiesOfType: Customer).
	importedCustomer := system partyOfType: Customer partyWithIdentificationType: 'D' andNumber: '22333444'.
	self assert: importedCustomer isAddressesEmpty
	! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:47:35' prior: 50658604!
assertThereIsARegisteredSupplierNamed: aName withIdType: anIdType andNumber: anIdNumber

	| importedSupplier |
	importedSupplier := supplierSystem partyOfType: Customer partyWithIdentificationType: anIdType andNumber: anIdNumber.
	self assert: importedSupplier firstName equals: aName.
	self assert: importedSupplier identificationType equals: anIdType.
	self assert: importedSupplier identificationNumber equals: anIdNumber.
	^importedSupplier! !

!methodRemoval: PartySystem #partyWithIdentificationType:andNumber: stamp: 'IB 11/27/2023 02:47:35'!
partyWithIdentificationType: anIdType andNumber: anIdNumber

	self subclassResponsibility !

!methodRemoval: PersistentPartySystem #partyWithIdentificationType:andNumber: stamp: 'IB 11/27/2023 02:47:35'!
partyWithIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]
		ofType: Customer) anyOne!

!methodRemoval: TransientPartySystem #partyWithIdentificationType:andNumber: stamp: 'IB 11/27/2023 02:47:35'!
partyWithIdentificationType: anIdType andNumber: anIdNumber

	^customers detect: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]!

!methodRemoval: PersistentSupplierSystem #partyWithIdentificationType:andNumber: stamp: 'IB 11/27/2023 02:47:35'!
partyWithIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]
		ofType: Supplier) anyOne!

!methodRemoval: TransientSupplierSystem #partyWithIdentificationType:andNumber: stamp: 'IB 11/27/2023 02:47:35'!
partyWithIdentificationType: anIdType andNumber: anIdNumber 

	^suppliers detect: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]!
!PartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:47:44'!
partyOfType: aClass withIdentificationType: anIdType andNumber: anIdNumber

	self subclassResponsibility ! !
!PersistentPartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:47:44' overrides: 50659519!
partyOfType: aClass withIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]
		ofType: Customer) anyOne! !
!TransientPartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:47:44' overrides: 50659519!
partyOfType: aClass withIdentificationType: anIdType andNumber: anIdNumber

	^customers detect: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]! !
!PersistentSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:47:44'!
partyOfType: aClass withIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]
		ofType: Supplier) anyOne! !
!TransientSupplierSystem methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:47:44'!
partyOfType: aClass withIdentificationType: anIdType andNumber: anIdNumber 

	^suppliers detect: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]! !
!SupplierImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:47:44' prior: 50659456!
assertThereIsARegisteredSupplierNamed: aName withIdType: anIdType andNumber: anIdNumber

	| importedSupplier |
	importedSupplier := supplierSystem partyOfType: Customer withIdentificationType: anIdType andNumber: anIdNumber.
	self assert: importedSupplier firstName equals: aName.
	self assert: importedSupplier identificationType equals: anIdType.
	self assert: importedSupplier identificationNumber equals: anIdNumber.
	^importedSupplier! !
!SupplierImporter methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:47:44' prior: 50659411 overrides: 50657962!
decodeNewCustomer

	self assertSupplierWasImported.
	
	[newCustomer := 
		customerSystem 
			partyOfType: Customer withIdentificationType: record fourth 
			andNumber: record fifth] on: Error do: [super decodeNewCustomer].
		
	newSupplier addCustomer: newCustomer! !
!CustomerImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:47:44' prior: 50659423!
assertCustomerWithIdentificationType: anIdType number: anIdNumber hasFirstName: aFirstName lastName: aLastName

	| importedCustomer |

	importedCustomer := system partyOfType: Customer withIdentificationType: anIdType andNumber: anIdNumber.

	self assert: aFirstName equals: importedCustomer firstName.
	self assert: aLastName equals: importedCustomer lastName.
	self assert: anIdType equals: importedCustomer identificationType.
	self assert: anIdNumber equals: importedCustomer identificationNumber.

	^importedCustomer

	! !
!CustomerImportTest methodsFor: 'as yet unclassified' stamp: 'IB 11/27/2023 02:47:44' prior: 50659443!
assertImportedOneCustomerWithoutAddress

	| importedCustomer |

	self assert: 1 equals: (system numberOfPartiesOfType: Customer).
	importedCustomer := system partyOfType: Customer withIdentificationType: 'D' andNumber: '22333444'.
	self assert: importedCustomer isAddressesEmpty
	! !

!methodRemoval: PartySystem #partyOfType:partyWithIdentificationType:andNumber: stamp: 'IB 11/27/2023 02:47:44'!
partyOfType: aClass partyWithIdentificationType: anIdType andNumber: anIdNumber

	self subclassResponsibility !

!methodRemoval: PersistentPartySystem #partyOfType:partyWithIdentificationType:andNumber: stamp: 'IB 11/27/2023 02:47:44'!
partyOfType: aClass partyWithIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]
		ofType: Customer) anyOne!

!methodRemoval: TransientPartySystem #partyOfType:partyWithIdentificationType:andNumber: stamp: 'IB 11/27/2023 02:47:44'!
partyOfType: aClass partyWithIdentificationType: anIdType andNumber: anIdNumber

	^customers detect: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]!

!methodRemoval: PersistentSupplierSystem #partyOfType:partyWithIdentificationType:andNumber: stamp: 'IB 11/27/2023 02:47:44'!
partyOfType: aClass partyWithIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]
		ofType: Supplier) anyOne!

!methodRemoval: TransientSupplierSystem #partyOfType:partyWithIdentificationType:andNumber: stamp: 'IB 11/27/2023 02:47:44'!
partyOfType: aClass partyWithIdentificationType: anIdType andNumber: anIdNumber 

	^suppliers detect: [ :aSupplier | aSupplier identificationType = anIdType and: [ aSupplier identificationNumber = anIdNumber ]]!
!PersistentPartySystem methodsFor: 'customers' stamp: 'IB 11/27/2023 02:47:48' prior: 50659526 overrides: 50659519!
partyOfType: aClass withIdentificationType: anIdType andNumber: anIdNumber

	^(session
		select: [ :aCustomer | aCustomer identificationType = anIdType and: [ aCustomer identificationNumber = anIdNumber ]]
		ofType: aClass) anyOne! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:47:52'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:47:52'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:47:52'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:47:52'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:47:52'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:47:53'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:47:53'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:47:53'!
ERROR!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:47:54'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:47:54'!
ERROR!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:47:54'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:47:55'!
ERROR!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:47:56'!
ERROR!
!SupplierImportTest methodsFor: 'asserting' stamp: 'IB 11/27/2023 02:48:03' prior: 50659567!
assertThereIsARegisteredSupplierNamed: aName withIdType: anIdType andNumber: anIdNumber

	| importedSupplier |
	importedSupplier := supplierSystem partyOfType: Supplier withIdentificationType: anIdType andNumber: anIdNumber.
	self assert: importedSupplier firstName equals: aName.
	self assert: importedSupplier identificationType equals: anIdType.
	self assert: importedSupplier identificationNumber equals: anIdNumber.
	^importedSupplier! !

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:48:04'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:48:06'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:48:06'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:48:07'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:48:08'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:48:08'!
ERROR!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 02:48:23' prior: 50658956!
testImportExistingCustomer

	|importedSupplier|
	
	customerSystem add: self customer.
	
	self import: self dataWithOneExistingCustomer.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	self assert: (customerSystem numberOfPartiesOfType: Supplier)  equals: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier customers size equals: 1.
	self assertCustomerOf: importedSupplier withFirstName: 'Pepe' andLast: 'Sanchez' withIdentificationType: 'D' andNumber: '22333444'! !

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:48:25'!
FAILURE!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:48:27'!
ERROR!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:48:52'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:48:52'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:48:52'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:48:53'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:48:53'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:48:53'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:48:53'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:48:54'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:48:54'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:48:55'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:48:55'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:48:55'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:48:56'!
ERROR!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 02:49:12' prior: 50659775!
testImportExistingCustomer

	|importedSupplier|
	
	customerSystem add: self customer.
	
	self import: self dataWithOneExistingCustomer.
	
	self assertNumberOfRegisteredSuppliersIs: 1.
	self assert: (customerSystem numberOfPartiesOfType: Customer)  equals: 1.
	importedSupplier := self assertThereIsARegisteredSupplierNamed: 'Supplier1' withIdType: 'D' andNumber: '123'.
	self assert: importedSupplier customers size equals: 1.
	self assertCustomerOf: importedSupplier withFirstName: 'Pepe' andLast: 'Sanchez' withIdentificationType: 'D' andNumber: '22333444'! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:49:17'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:49:17'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:49:17'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:49:17'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:49:18'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:49:18'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:49:18'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:49:18'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:49:19'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:49:19'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:49:20'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:49:20'!
PASSED!

----SNAPSHOT----(27 November 2023 02:49:23) CuisUniversity-5981.image priorSource: 10453676!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 02:49:26'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 02:49:26'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 02:49:26'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:49:26'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 02:49:26'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 02:49:27'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 02:49:27'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 02:49:27'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 02:49:27'!
PASSED!

!classRemoval: #PersistentSupplierSystem stamp: 'IB 11/27/2023 02:49:35'!
Object subclass: #PersistentSupplierSystem
	instanceVariableNames: 'session'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!classRemoval: #TransientSupplierSystem stamp: 'IB 11/27/2023 02:49:48'!
Object subclass: #TransientSupplierSystem
	instanceVariableNames: 'suppliers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CustomerImporter'!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:49:50'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:49:50'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:49:50'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:49:50'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:49:50'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:49:51'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:49:51'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:49:51'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:49:52'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:49:52'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:49:53'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:49:53'!
PASSED!

!testRun: #CustomerImportTest #test01ValidDataIsImportedCorrectly stamp: 'IB 11/27/2023 02:50:02'!
PASSED!

!testRun: #CustomerImportTest #test02CanNotImportAddressWithoutCustomer stamp: 'IB 11/27/2023 02:50:02'!
PASSED!

!testRun: #CustomerImportTest #test03DoesNotImportRecordsStartingWithCButMoreCharacters stamp: 'IB 11/27/2023 02:50:02'!
PASSED!

!testRun: #CustomerImportTest #test04DoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:50:03'!
PASSED!

!testRun: #CustomerImportTest #test05CanNotImportAddressRecordWithLessThanSixFields stamp: 'IB 11/27/2023 02:50:03'!
PASSED!

!testRun: #CustomerImportTest #test06CanNotImportAddressRecordWithMoreThanSixFields stamp: 'IB 11/27/2023 02:50:03'!
PASSED!

!testRun: #CustomerImportTest #test07CanNotImportCustomerRecordWithLessThanFiveFields stamp: 'IB 11/27/2023 02:50:03'!
PASSED!

!testRun: #CustomerImportTest #test08CanNotImportCustomerRecordWithMoreThanFiveFields stamp: 'IB 11/27/2023 02:50:04'!
PASSED!

!testRun: #CustomerImportTest #test09CannotImportEmptyLine stamp: 'IB 11/27/2023 02:50:04'!
PASSED!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 02:51:16'!
test05CanNotImportSupplierRecordWithLessThanThreeFields

	self
		shouldFailImporting: self supplierRecordWithLessThanThreeFields
		messageText: SupplierImporter invalidSupplierRecordErrorDescription
		asserting: [ self halt ]

	! !

!testRun: #SupplierImportTest #test05CanNotImportSupplierRecordWithLessThanThreeFields stamp: 'IB 11/27/2023 02:51:19'!
ERROR!
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 02:51:23'!
supplierRecordWithLessThanThreeFields
	self shouldBeImplemented.! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 02:51:43' prior: 50660050!
supplierRecordWithLessThanThreeFields
	
	^ ReadStream on: 'S,Supplier1,D'! !

!testRun: #SupplierImportTest #test05CanNotImportSupplierRecordWithLessThanThreeFields stamp: 'IB 11/27/2023 02:51:44'!
ERROR!
!SupplierImporter class methodsFor: 'error' stamp: 'IB 11/27/2023 02:51:51'!
invalidSupplierRecordErrorDescription
	self shouldBeImplemented.! !
!SupplierImporter class methodsFor: 'error' stamp: 'IB 11/27/2023 02:52:10' prior: 50660065!
invalidSupplierRecordErrorDescription
	
	^'No es un record valido para supplier'! !

!testRun: #SupplierImportTest #test05CanNotImportSupplierRecordWithLessThanThreeFields stamp: 'IB 11/27/2023 02:52:11'!
FAILURE!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:53:09' prior: 50651969!
importSupplier

	self assertValidSupplierRecord.
	
	newSupplier := 
		Supplier 
			named: record second
			withIdentificationType: record third 
			andNumber: record fourth.
			
	supplierSystem add: newSupplier! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:53:25'!
assertValidSupplierRecord

	self error: self class invalidSupplierRecordErrorDescription! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:53:46' prior: 50660091!
assertValidSupplierRecord

	^ record size ~= 5 ifTrue: [self error: self class invalidSupplierRecordErrorDescription] ! !
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:53:54' prior: 50660097!
assertValidSupplierRecord

	^ record size ~= 3 ifTrue: [self error: self class invalidSupplierRecordErrorDescription] ! !

!testRun: #SupplierImportTest #test05CanNotImportSupplierRecordWithLessThanThreeFields stamp: 'IB 11/27/2023 02:53:57'!
FAILURE!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:53:57'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:53:57'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:53:57'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:53:57'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:53:57'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:53:57'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:53:57'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:53:57'!
ERROR!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:53:57'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:53:57'!
ERROR!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:53:57'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:53:57'!
ERROR!

!testRun: #SupplierImportTest #test05CanNotImportSupplierRecordWithLessThanThreeFields stamp: 'IB 11/27/2023 02:54:00'!
FAILURE!

!testRun: #SupplierImportTest #test05CanNotImportSupplierRecordWithLessThanThreeFields stamp: 'IB 11/27/2023 02:54:07'!
FAILURE!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:54:07'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:54:07'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:54:07'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:54:07'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:54:07'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:54:08'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:54:08'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:54:08'!
ERROR!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:54:08'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:54:08'!
ERROR!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:54:08'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:54:08'!
ERROR!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 02:54:17'!
testCanNotImportSupplierRecordWithLessThanThreeFields

	self
		shouldFailImporting: self supplierRecordWithLessThanThreeFields
		messageText: SupplierImporter invalidSupplierRecordErrorDescription
		asserting: [ self halt ]

	! !

!methodRemoval: SupplierImportTest #test05CanNotImportSupplierRecordWithLessThanThreeFields stamp: 'IB 11/27/2023 02:54:17'!
test05CanNotImportSupplierRecordWithLessThanThreeFields

	self
		shouldFailImporting: self supplierRecordWithLessThanThreeFields
		messageText: SupplierImporter invalidSupplierRecordErrorDescription
		asserting: [ self halt ]

	!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:54:48'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:54:48'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportSupplierRecordWithLessThanThreeFields stamp: 'IB 11/27/2023 02:54:48'!
FAILURE!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:54:48'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:54:48'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:54:48'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:54:48'!
FAILURE!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:54:48'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:54:48'!
ERROR!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:54:48'!
ERROR!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:54:48'!
ERROR!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:54:48'!
ERROR!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:54:48'!
ERROR!

!testRun: #SupplierImportTest #testCanNotImportSupplierRecordWithLessThanThreeFields stamp: 'IB 11/27/2023 02:54:50'!
FAILURE!
!SupplierImporter methodsFor: 'accessing' stamp: 'IB 11/27/2023 02:55:17' prior: 50660104!
assertValidSupplierRecord

	^ record size ~= 4 ifTrue: [self error: self class invalidSupplierRecordErrorDescription] ! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:55:18'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:55:18'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:55:18'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:55:18'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:55:18'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:55:19'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:55:19'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:55:19'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:55:20'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:55:20'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:55:21'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:55:21'!
PASSED!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 02:55:45' prior: 50660206!
testCanNotImportSupplierRecordWithLessThanThreeFields

	self
		shouldFailImporting: self supplierRecordWithLessThanThreeFields
		messageText: SupplierImporter invalidSupplierRecordErrorDescription
		asserting: [ self assertNoSupplierWasImported ]

	! !

!testRun: #SupplierImportTest #testCanNotImportSupplierRecordWithLessThanThreeFields stamp: 'IB 11/27/2023 02:55:46'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:55:46'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:55:46'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportSupplierRecordWithLessThanThreeFields stamp: 'IB 11/27/2023 02:55:46'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:55:46'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:55:46'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:55:46'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:55:47'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:55:47'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:55:47'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:55:48'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:55:48'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:55:49'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:55:49'!
PASSED!
!SupplierImportTest methodsFor: 'tests' stamp: 'IB 11/27/2023 02:55:59'!
testCanNotImportSupplierRecordWithMoreThanThreeFields

	self
		shouldFailImporting: self supplierRecordWithMoreThanThreeFields
		messageText: SupplierImporter invalidSupplierRecordErrorDescription
		asserting: [ self assertNoSupplierWasImported ]

	! !
!SupplierImportTest methodsFor: 'accessing - data' stamp: 'IB 11/27/2023 02:56:10'!
supplierRecordWithMoreThanThreeFields
	
	^ ReadStream on: 'S,Supplier1,D,123,123123'! !

!testRun: #SupplierImportTest #testCanNotImportAddressWithoutSupplier stamp: 'IB 11/27/2023 02:56:11'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportNewCustomerWithoutSupplier stamp: 'IB 11/27/2023 02:56:11'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportSupplierRecordWithLessThanThreeFields stamp: 'IB 11/27/2023 02:56:11'!
PASSED!

!testRun: #SupplierImportTest #testCanNotImportSupplierRecordWithMoreThanThreeFields stamp: 'IB 11/27/2023 02:56:11'!
PASSED!

!testRun: #SupplierImportTest #testCannotImportEmptyLine stamp: 'IB 11/27/2023 02:56:11'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithAButMoreCharacters stamp: 'IB 11/27/2023 02:56:12'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithECButMoreCharacters stamp: 'IB 11/27/2023 02:56:12'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithNCButMoreCharacters stamp: 'IB 11/27/2023 02:56:12'!
PASSED!

!testRun: #SupplierImportTest #testDoesNotImportRecordsStartingWithSButMoreCharacters stamp: 'IB 11/27/2023 02:56:12'!
PASSED!

!testRun: #SupplierImportTest #testImportAddress stamp: 'IB 11/27/2023 02:56:13'!
PASSED!

!testRun: #SupplierImportTest #testImportExistingCustomer stamp: 'IB 11/27/2023 02:56:13'!
PASSED!

!testRun: #SupplierImportTest #testImportMoreThanOneSupplier stamp: 'IB 11/27/2023 02:56:14'!
PASSED!

!testRun: #SupplierImportTest #testImportNewCustomer stamp: 'IB 11/27/2023 02:56:14'!
PASSED!

!testRun: #SupplierImportTest #testImportOnlyOneSupplier stamp: 'IB 11/27/2023 02:56:14'!
PASSED!

----SNAPSHOT----(27 November 2023 02:56:17) CuisUniversity-5981.image priorSource: 10504258!